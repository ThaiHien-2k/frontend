{"version":3,"sources":["assets/icon.jpg","assets/logo.svg","components/NavItem.js","utils/constants.js","context/user_context.js","components/SidebarContent.js","components/MobileNav.js","components/SidebarWithHeader.js","utils/helpers.js","components/DashboardCards.js","reducers/admin_reducer.js","actions.js","context/admin_context.js","components/AdminsTable.js","reducers/staff_reducer.js","context/staff_context.js","components/UpdateStaffModal.js","components/StaffTable.js","reducers/post_reducer.js","context/post_context.js","components/UpdatePostModal.js","components/PostTable.js","reducers/infor_reducer.js","context/infor_context.js","components/UpdateInforModal.js","components/InforTable.js","reducers/bloodDonate_reducer.js","context/bloodDonate_context.js","reducers/bloodStorage_reducer.js","context/bloodStorage_context.js","components/UpdateBloodDonateModal.js","components/UpdateStatusBloodDonateModal.js","components/BloodDonateTable.js","reducers/donate_reducer.js","context/donate_context.js","components/DonateTable.js","reducers/cashFlow_reduce.js","context/cashFlow_context.js","components/UpdateCashFlowModal.js","components/CashFlowTable.js","components/UpdateBloodStorageModal.js","components/BloodStorageTable.js","components/CreateNewAdminModal.js","components/ErrorBoundary.js","components/PostDetail.js","components/StaffDetail.js","components/DonateDetail.js","components/BookingDetail.js","components/BloodDonateDetail.js","components/PreLoader.js","pages/Dashboard.js","hooks/useMounted.js","pages/LoginPage.js","pages/AdminsPage.js","pages/PrivateRoute.js","components/CreateNewInforModal.js","pages/InforPage.js","components/CreateNewStaffModal.js","pages/StaffPage.js","components/CreateNewBloodStorageModal.js","pages/BloodStoragePage.js","components/CreateNewBloodDonateModal.js","pages/BloodDonatesPage.js","components/CreateNewCashFlowModal.js","pages/CashFlowPage.js","components/CreateNewPostModal.js","pages/PostPage.js","reducers/booking_reducer.js","context/booking_context.js","components/BookingTable.js","pages/BookingPage.js","pages/StaffDetailsPage.js","pages/DonatePage.js","pages/PostDetailPage.js","components/CreateNewDonateModal.js","pages/DonateDetailPage.js","components/InforDetail.js","pages/InforDetailPage.js","pages/BookingDetailPage.js","pages/ViewBloodDonatePage.js","components/BloodStorageDetail.js","pages/ViewBloodStoragePage.js","App.js","config/ThemeConfig.js","index.js"],"names":["module","exports","NavItem","url","icon","children","rest","to","align","p","mx","borderRadius","role","cursor","_hover","bg","color","mr","fontSize","_groupHover","LinkItems","name","LinkItemsStaff","domain","process","auth_url","login_url","register_url","logout_url","admins_url","cmt_url","deletecmt_url","posts_url","create_new_post","update_post_url","staffs_url","create_new_staff","update_staff_url","bookings_url","create_new_booking","update_booking_url","donates_url","create_new_donate","update_donate_url","bloodDonates_url","bloodDonates_remaining","create_new_bloodDonate","update_bloodDonate_url","cashFlows_url","cashFlow_remaining","create_new_cashFlow","update_cashFlow_url","bloodStorages_url","bloodStorage_remaining","create_new_bloodStorage","update_bloodStorage_url","infors_url","create_new_infor","update_infor_url","axios","defaults","withCredentials","UserContext","React","createContext","UserProvider","useState","currentUser","setCurrentUser","authLoading","setAuthLoading","setUser","user","checkAuth","a","post","response","data","console","log","login","email","password","success","message","logout","get","useEffect","Provider","value","useUserContext","useContext","SidebarContent","onClose","privilege","Links","setLinks","transition","useColorModeValue","borderRight","borderRightColor","w","base","md","pos","h","alignItems","justifyContent","src","alt","height","display","onClick","map","link","key","MobileNav","onOpen","location","useLocation","toast","useToast","breadCrumbs","setBreadCrumbs","handleSubmit","position","description","status","duration","isClosable","path","pathname","substring","split","item","index","ml","px","borderBottomWidth","borderBottomColor","variant","aria-label","logo","boxSize","spacing","separator","as","Link","textTransform","py","_focus","boxShadow","size","borderColor","SidebarWithHeader","useDisclosure","isOpen","minH","autoFocus","placement","returnFocusOnClose","onOverlayClick","formatPrice","number","Intl","NumberFormat","format","getAdminPrivilegeColor","DashboardCards","total","remainList","setRemainlist","fetchCashFlowsRemaining","bloodRemainList","setBloodRemainlist","fetchBloodsRemaining","bloodDonateRemainList","setBloodDonateRemainlist","fetchBloodDonatesRemaining","accountList","setAccountlist","fetchAccounts","cardList","title","PeopleIcon","VolunteerActivismIcon","AttachMoneyIcon","OpacityIcon","minChildWidth","mb","card","shadow","product_reducer","state","action","type","admins_error","admins_loading","admins","payload","new_admin","Error","initialState","AdminContext","AdminProvider","useReducer","reducer","dispatch","fetchAdmins","updateAdminPrivilege","id","put","deleteAdmin","delete","createNewAdmin","updateNewAdminDetails","e","target","useAdminContext","AdminsTable","loading","setLoading","handleEdit","handleDelete","overflowX","my","admin","adminId","createdAt","colorScheme","moment","maxW","focusBorderColor","onChange","staff_reducer","staffs_error","staffs_loading","staffs","new_staff","single_staff_error","single_staff_loading","single_staff","countryID","phone","suppostTime","address","from","StaffContext","StaffProvider","fetchStaffs","fetchSingleStaff","deleteStaff","createNewStaff","staff","updateStaff","updateNewStaffDetails","updateExistingStaffDetails","useStaffContext","UpdateStaffModal","initialRef","useRef","responseCreate","minW","initialFocusRef","pb","ref","placeholder","mt","isLoading","loadingText","StaffsTable","Button","rightIcon","post_reducer","posts_error","posts_loading","posts","new_post","single_post_error","single_post_loading","single_post","content","like","PostContext","PostProvider","fetchPosts","fetchSinglePost","deletePost","createNewPost","updatePost","updateNewPostDetails","updateExistingPostDetails","usePostContext","UpdatePostModal","Hidden","PostsTable","DateTimeFormat","year","month","day","hour","minute","infor_reducer","infors_error","infors_loading","infors","new_infor","single_infor_error","single_infor_loading","single_infor","typeBlood","oldDate","donateTime","InforContext","InforProvider","fetchInfors","fetchSingleInfor","deleteInfor","createNewInfor","infor","updateInfor","updateNewInforDetails","updateExistingInforDetails","useInforContext","UpdateInforModal","InforsTable","lastDonate","current","Date","setDate","getDate","bloodDonate_reducer","bloodDonates_error","bloodDonates_loading","bloodDonates","new_bloodDonate","single_bloodDonate_error","single_bloodDonate_loading","single_bloodDonate","time","A","B","AB","O","receive","staffList","timeF","BloodDonateContext","BloodDonateProvider","fetchBloodDonates","fetchSingleBloodDonate","deleteBloodDonate","createNewBloodDonate","bloodDonate","updateBloodDonate","updateNewBloodDonateDetails","updateExistingBloodDonateDetails","useBloodDonateContext","bloodStorage_reducer","bloodStorages_error","bloodStorages_loading","bloodStorages","new_bloodStorage","single_bloodStorage_error","single_bloodStorage_loading","single_bloodStorage","amount","date","detail","donateID","BloodStorageContext","BloodStorageProvider","fetchBloodStorages","fetchSingleBloodStorage","deleteBloodStorage","createNewBloodStorage","bloodStorage","updateBloodStorage","updateNewBloodStorageDetails","updateExistingBloodStorageDetails","useBloodStorageContext","animatedComponents","makeAnimated","UpdateStatusBloodDonateModal","nameList","setNameList","setMinute","hourF","setHourF","minuteF","setMinuteF","filter","includes","label","options","_id","createBloodStorage","find","obj","closeMenuOnSelect","defaultValue","components","isMulti","setA","fetchA","setAB","fetchAB","setB","fetchB","setO","fetchO","ave","BloodDonatesTable","then","donate","substr","UpdateBloodDonateModal","donate_reducer","donates_error","donates_loading","donates","new_donate","single_donate_error","single_donate_loading","single_donate","idBD","iduser","DonateContext","DonateProvider","fetchDonates","fetchSingleDonate","deleteDonate","createNewDonate","updateDonate","updateExistingDonateDetails","useDonateContext","DonateTable","cashFlow_reducer","cashFlows_error","cashFlows_loading","cashFlows","new_cashFlow","single_cashFlow_error","single_cashFlow_loading","single_cashFlow","CashFlowContext","CashFlowProvider","fetchCashFlows","fetchSingleCashFlow","deleteCashFlow","createNewCashFlow","cashFlow","updateCashFlow","updateNewCashFlowDetails","updateExistingCashFlowDetails","useCashFlowContext","UpdateCashFlowModal","CashFlowsTable","UpdateBloodStorageModal","bloodO","setBLoodO","bloodA","setBLoodA","bloodB","setBLoodB","bloodAB","setBLoodAB","ABLood","BBLood","OBLood","ABBLood","getdata","BloodStoragesTable","CreateNewAdminModal","ErrorBoundary","props","hasError","this","error","Component","PostDetail","suppost","setSuppost","sort","b","getTime","i","idPost","sup","comment","StaffDetail","DonateDetail","BookingDetail","bookings","heigh","weight","sex","isAcohol","isNicotine","isHeartDisease","isSitUp","isSick","isAllergies","BloodDonateDetail","supID","setData","push","getAmount","idU","PreLoader","isIndeterminate","fontWeight","Dashboard","data2","setData2","o","slice","forEach","width","series","labels","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","colors","xaxis","categories","yaxis","text","fill","opacity","tooltip","y","formatter","val","pie","donut","showAlways","useMounted","mounted","LoginPage","setEmail","setPassword","justify","rounded","AdminsPage","PrivateRoute","CreateNewInforModal","window","reload","InforsPage","inforList","setInforList","setSearchTerm","results","toLowerCase","Input","event","CreateNewStaffModal","StaffsPage","setStaffList","CreateNewBloodStorageModal","BloodStoragesPage","bloodStorageList","setBloodStorageList","CreateNewBloodDonateModal","BloodDonatesPage","bloodDonateList","setBloodDonateList","length","CreateNewCashFlowModal","CashFlowsPage","cashFlowList","setCashFlowList","CreateNewPostModal","now","PostsPage","postList","setPostList","booking_reducer","bookings_error","bookings_loading","new_booking","single_booking_error","single_booking_loading","single_booking","BookingContext","BookingProvider","fetchBookings","fetchSingleBooking","deleteBooking","createNewBooking","booking","updateBooking","updateNewBookingDetails","updateExistingBookingDetails","useBookingContext","BookingsTable","idBDD","BookingPage","bookingList","setBookingList","StaffDetaislPage","useParams","direction","sm","DonatePage","PostDetailPage","CreateNewDonateModal","setName","setTypeBlood","setDonateTime","setAmount","setIduser","check","op","DonateDetailPage","donateList","setDonateList","InforDetail","toString","InforDetaislPage","BookingDetailPage","ViewBloodDonatePage","BloodStorageDetail","BloodStorageDetaislPage","App","exact","ViewBloodStoragePage","theme","extendTheme","brown","900","800","700","600","500","400","300","200","100","50","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63690006.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.c7620a99.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.aa66e387.svg\";","import React from 'react';\r\nimport { Flex, Icon } from '@chakra-ui/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavItem({ url, icon, children, ...rest }) {\r\n  return (\r\n    <Link to={url}>\r\n      <Flex\r\n        align='center'\r\n        p='4'\r\n        mx='4'\r\n        borderRadius='lg'\r\n        role='group'\r\n        cursor='pointer'\r\n        _hover={{\r\n          bg: 'brown.400',\r\n          color: 'white',\r\n        }}\r\n        {...rest}\r\n      >\r\n        {icon && (\r\n          <Icon\r\n            mr='4'\r\n            fontSize='16'\r\n            _groupHover={{\r\n              color: 'white',\r\n            }}\r\n          >\r\n            {icon}\r\n          </Icon>\r\n        )}\r\n        {children}\r\n      </Flex>\r\n    </Link>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport BloodtypeIcon from '@mui/icons-material/Bloodtype';\r\nimport VolunteerActivismIcon from '@mui/icons-material/VolunteerActivism';\r\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\r\nimport AdUnitsIcon from '@mui/icons-material/AdUnits';\r\nexport const LinkItems = [\r\n  { name: 'Dashboard', url: '/', icon: <DashboardIcon /> },\r\n  { name: 'Quản lý tài khoản', url: '/accounts', icon: <PersonIcon /> },\r\n  { name: 'Quản lý bài viết', url: '/posts', icon: <AdUnitsIcon /> },\r\n  { name: 'Quản lý thu chi', url: '/cashFlows', icon: <AttachMoneyIcon /> },\r\n  { name: 'Quản lý nhân viên', url: '/staffs', icon: <PeopleIcon /> },\r\n  { name: 'Thông tin người hiến', url: '/infors', icon: <AssignmentIndIcon /> },\r\n  { name: 'Quản lý kho máu', url: '/bloodStorages', icon: <BloodtypeIcon /> },\r\n  { name: 'Quản lý buổi hiến máu', url: '/bloodDonates', icon: <VolunteerActivismIcon /> },\r\n\r\n  { name: 'Hiến máu', url: '/donates', icon: <AssignmentIcon /> },\r\n];\r\n\r\nexport const LinkItemsStaff = [\r\n  { name: 'Dashboard', url: '/', icon: <DashboardIcon /> },\r\n  // { name: 'Quản lý tài khoản', url: '/accounts', icon: <PersonIcon /> },\r\n  // { name: 'Quản lý nhân viên', url: '/staffs', icon: <PeopleIcon /> },\r\n  // { name: 'Quản lý thu chi', url: '/cashFlows', icon: <AttachMoneyIcon /> },\r\n  // { name: 'Quản lý lượng máu', url: '/bloodStorages', icon: <BloodtypeIcon /> },\r\n  // { name: 'Quản lý buổi hiến máu', url: '/bloodDonates', icon: <VolunteerActivismIcon /> },\r\n  { name: 'Thông tin người hiến', url: '/infors', icon: <AssignmentIcon /> },\r\n  // { name: 'Hiến máu', url: '/donates', icon: <AssignmentIcon /> },\r\n\r\n  \r\n];\r\n\r\n\r\n\r\n\r\nexport const domain = process.env.REACT_APP_BACKEND_HOST;\r\nexport const auth_url = `${domain}api/admin/auth`;\r\nexport const login_url = `${domain}api/admin/login`;\r\nexport const register_url = `${domain}api/admin/register`;\r\nexport const logout_url = `${domain}api/admin/logout`;\r\nexport const admins_url = `${domain}api/admin/users/`;\r\n\r\nexport const cmt_url = `${domain}api/comments/`;\r\nexport const deletecmt_url = `${domain}api/admin/comment/`;\r\nexport const posts_url = `${domain}api/posts/`;\r\nexport const create_new_post = `${domain}api/admin/post/new`;\r\nexport const update_post_url = `${domain}api/admin/post/`;\r\n\r\nexport const staffs_url = `${domain}api/staffs/`;\r\nexport const create_new_staff = `${domain}api/admin/staff/new`;\r\nexport const update_staff_url = `${domain}api/admin/staff/`;\r\n\r\nexport const bookings_url = `${domain}api/bookings/`;\r\nexport const create_new_booking = `${domain}api/admin/booking/new`;\r\nexport const update_booking_url = `${domain}api/admin/booking/`;\r\n\r\nexport const donates_url = `${domain}api/donates/`;\r\nexport const create_new_donate = `${domain}api/admin/donate/new`;\r\nexport const update_donate_url = `${domain}api/admin/donate/`;\r\n\r\n\r\n\r\nexport const bloodDonates_url = `${domain}api/bloodDonates/`;\r\nexport const bloodDonates_remaining = `${domain}api/bloodDonates/bloodDonateRemaining`;\r\nexport const create_new_bloodDonate = `${domain}api/admin/bloodDonate/new`;\r\nexport const update_bloodDonate_url = `${domain}api/admin/bloodDonate/`;\r\n\r\nexport const cashFlows_url = `${domain}api/cashFlows/`;\r\nexport const cashFlow_remaining = `${domain}api/posts/PostRemain`;\r\nexport const create_new_cashFlow = `${domain}api/admin/cashFlow/new`;\r\nexport const update_cashFlow_url = `${domain}api/admin/cashFlow/`;\r\n\r\nexport const bloodStorages_url = `${domain}api/bloodStorages/`;\r\nexport const bloodStorage_remaining = `${domain}api/bloodStorages/bloodRemaining`;\r\nexport const create_new_bloodStorage = `${domain}api/admin/bloodStorage/new`;\r\nexport const update_bloodStorage_url = `${domain}api/admin/bloodStorage/`;\r\n\r\n\r\n\r\nexport const infors_url = `${domain}api/infors/`;\r\nexport const create_new_infor = `${domain}api/admin/infor/new`;\r\nexport const update_infor_url = `${domain}api/admin/infor/`;","import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { login_url, auth_url, logout_url } from '../utils/constants';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [authLoading, setAuthLoading] = useState(true);\r\n\r\n  const setUser = (user) => {\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      setAuthLoading(true);\r\n      const response = await axios.post(auth_url);\r\n      const { data } = response.data;\r\n      setUser(data);\r\n      setAuthLoading(false);\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      setAuthLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(login_url, { email, password });\r\n      console.log(login_url, { email, password });\r\n      const { success, data } = response.data;\r\n      setUser(data);\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { message, success } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const response = await axios.get(logout_url);\r\n      const { success, message } = response.data;\r\n      setUser(null);\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ currentUser, authLoading, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUserContext = () => {\r\n  return useContext(UserContext);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport NavItem from './NavItem';\r\nimport { LinkItems, LinkItemsStaff} from '../utils/constants';\r\nimport { useUserContext } from '../context/user_context';\r\n\r\n// import logo from '../assets/icon.svg';\r\nimport icon from '../assets/icon.jpg'\r\nimport {\r\n  Box,\r\n  CloseButton,\r\n  Flex,\r\n  useColorModeValue,\r\n  Image,\r\n  \r\n} from '@chakra-ui/react';\r\n\r\n\r\n\r\n\r\nexport default function SidebarContent({ onClose, ...rest }) {\r\n  const {\r\n    currentUser: { privilege },\r\n  } = useUserContext();\r\n  const [Links, setLinks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (privilege === 'admin') {\r\n      setLinks(LinkItems);\r\n    }\r\n    if (privilege === 'staff') {\r\n      // const tempLinksStaff = LinkItemsStaff.filter((link) => link.name !== 'Admins');\r\n      setLinks(LinkItemsStaff);\r\n    }\r\n    // if (privilege === 'user') {\r\n    //   const tempLinks = LinkItems.filter(\r\n    //     (link) => link.name !== 'Admins' && link.name !== 'Products'\r\n    //   );\r\n    //   setLinks(tempLinks);\r\n    // }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      transition='3s ease'\r\n      bg={useColorModeValue('white', 'gray.900')}\r\n      borderRight='1px'\r\n      borderRightColor={useColorModeValue('gray.200', 'gray.700')}\r\n      w={{ base: 'full', md: 60 }}\r\n      pos='fixed'\r\n      h='full'\r\n      {...rest}\r\n    >\r\n      <Flex h='20' alignItems='center' mx='8' justifyContent='space-around'>\r\n        {/* <Image src={logo} /> */}\r\n       <button > <Image src={icon} alt=\"Logo\" height={70} /> </button> \r\n        <CloseButton display={{ base: 'flex', md: 'none' }} onClick={onClose} />\r\n      </Flex>\r\n      {Links.map((link) => (\r\n        <NavItem key={link.name} icon={link.icon} url={link.url}>\r\n          {link.name}\r\n        </NavItem>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport logo from '../assets/logo.svg';\r\nimport {\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  VStack,\r\n  useColorModeValue,\r\n  Text,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n  useToast,\r\n  Image,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n} from '@chakra-ui/react';\r\nimport { useUserContext } from '../context/user_context';\r\nimport { FiMenu, FiChevronDown, FiChevronRight } from 'react-icons/fi';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nexport default function MobileNav({ onOpen, ...rest }) {\r\n  const {\r\n    currentUser: { name ,privilege},\r\n    // privilege,\r\n    logout,\r\n  } = useUserContext();\r\n  const location = useLocation();\r\n  const toast = useToast();\r\n\r\n  const [breadCrumbs, setBreadCrumbs] = useState([]);\r\n\r\n  const handleSubmit = async () => {\r\n    const { message } = await logout();\r\n    return toast({\r\n      position: 'top',\r\n      description: message,\r\n      status: 'success',\r\n      duration: 5000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let path = location.pathname.substring(1).split('/');\r\n    path = path.map((item, index) => {\r\n      if (item === '') {\r\n        return { name: 'home', path: '/' };\r\n      }\r\n      return {\r\n        name: item,\r\n        path: `${index === 1 ? `/${path[0]}/${item}` : `/${item}`}`,\r\n      };\r\n    });\r\n    setBreadCrumbs(path);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Flex\r\n      ml={{ base: 0, md: 60 }}\r\n      px={{ base: 4, md: 4 }}\r\n      height='20'\r\n      alignItems='center'\r\n      bg={useColorModeValue('white', 'gray.900')}\r\n      borderBottomWidth='1px'\r\n      borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\r\n      justifyContent='space-between'\r\n      {...rest}\r\n    >\r\n      <IconButton\r\n        display={{ base: 'flex', md: 'none' }}\r\n        onClick={onOpen}\r\n        variant='outline'\r\n        aria-label='open menu'\r\n        icon={<FiMenu />}\r\n      />\r\n\r\n      <Image\r\n        src={logo}\r\n        boxSize='150px'\r\n        display={{ base: 'flex', md: 'none' }}\r\n      />\r\n\r\n      <Breadcrumb\r\n        spacing='8px'\r\n        separator={<FiChevronRight color='gray.500' />}\r\n        display={{ base: 'none', md: 'flex' }}\r\n      >\r\n        <BreadcrumbItem>\r\n          <BreadcrumbLink as={Link} to='/'>\r\n            Dashboard\r\n          </BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n\r\n        {breadCrumbs[0]?.name !== 'home' &&\r\n          breadCrumbs.map((item, index) => {\r\n            return (\r\n              <BreadcrumbItem key={index}>\r\n                <BreadcrumbLink\r\n                  as={Link}\r\n                  to={item.path}\r\n                  textTransform='capitalize'\r\n                >\r\n                  {item.name}\r\n                </BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n            );\r\n          })}\r\n      </Breadcrumb>\r\n\r\n      <HStack spacing={{ base: '0', md: '6' }}>\r\n        <Flex alignItems={'center'}>\r\n          <Menu>\r\n            <MenuButton\r\n              py={2}\r\n              transition='all 0.3s'\r\n              _focus={{ boxShadow: 'none' }}\r\n            >\r\n              <HStack>\r\n                <Avatar size={'sm'} name={name} />\r\n                <VStack\r\n                  display={{ base: 'none', md: 'flex' }}\r\n                  alignItems='flex-start'\r\n                  spacing='1px'\r\n                  ml='2'\r\n                >\r\n                  <Text fontSize='sm'>{name}</Text>\r\n                  <Text fontSize='xs' color='gray.600'>\r\n                    {privilege}\r\n                  </Text>\r\n                </VStack>\r\n                <Box display={{ base: 'none', md: 'flex' }}>\r\n                  <FiChevronDown />\r\n                </Box>\r\n              </HStack>\r\n            </MenuButton>\r\n            <MenuList\r\n              bg={useColorModeValue('white', 'gray.900')}\r\n              borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n            >\r\n              <MenuItem onClick={handleSubmit}>Đăng xuất</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </Flex>\r\n      </HStack>\r\n    </Flex>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport SidebarContent from './SidebarContent';\r\nimport MobileNav from './MobileNav';\r\nimport {\r\n  Box,\r\n  useColorModeValue,\r\n  Drawer,\r\n  DrawerContent,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport { ErrorBoundary } from '.';\r\n\r\nexport default function SidebarWithHeader({ children }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  return (\r\n    <ErrorBoundary>\r\n      <Box minH='100vh' bg={useColorModeValue('gray.100', 'gray.900')}>\r\n        <SidebarContent\r\n          onClose={() => onClose}\r\n          display={{ base: 'none', md: 'block' }}\r\n        />\r\n        <Drawer\r\n          autoFocus={false}\r\n          isOpen={isOpen}\r\n          placement='left'\r\n          onClose={onClose}\r\n          returnFocusOnClose={false}\r\n          onOverlayClick={onClose}\r\n          size='full'\r\n        >\r\n          <DrawerContent>\r\n            <SidebarContent onClose={onClose} />\r\n          </DrawerContent>\r\n        </Drawer>\r\n        {/* mobilenav */}\r\n        <MobileNav onOpen={onOpen} />\r\n        <Box ml={{ base: 0, md: 60 }} p='4'>\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n","export const formatPrice = (number) => {\r\n  return new Intl.NumberFormat('vi-VN').format(number);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const getAdminPrivilegeColor = (privilege) => {\r\n  if (privilege === 'admin') {\r\n    return 'green';\r\n  }\r\n  if (privilege === 'staff') {\r\n    return 'blue';\r\n  }\r\n  if (privilege === 'user') {\r\n    return 'brown';\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport OpacityIcon from '@mui/icons-material/Opacity';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport VolunteerActivismIcon from '@mui/icons-material/VolunteerActivism';\r\n\r\nimport {\r\n  Flex,\r\n  Icon,\r\n  Square,\r\n  Spacer,\r\n  Text,\r\n  Heading,\r\n  SimpleGrid,\r\n  Box,\r\n} from '@chakra-ui/react';\r\nimport { cashFlow_remaining,bloodStorage_remaining, bloodDonates_remaining,admins_url} from '../utils/constants';\r\nimport axios from 'axios';\r\nimport { formatPrice } from '../utils/helpers';\r\n\r\n\r\nfunction DashboardCards() {\r\n  \r\n  // const [age, setAge] = useState(42);\r\n  // const [todos, setTodos] = useState(() => createTodos());\r\n  const [remainList, setRemainlist] = useState({total:''});\r\n  useEffect(()=>{\r\n  const fetchCashFlowsRemaining = async () => {\r\n   \r\n      const response = await axios.get(cashFlow_remaining);\r\n     \r\n      setRemainlist(response.data);\r\n  };\r\n  fetchCashFlowsRemaining();\r\n},[]);\r\n\r\nconst [bloodRemainList, setBloodRemainlist] = useState({total:''});\r\n\r\nuseEffect(()=>{\r\nconst fetchBloodsRemaining = async () => {\r\n \r\n    const response = await axios.get(bloodStorage_remaining);\r\n   \r\n    setBloodRemainlist(response.data);\r\n\r\n};\r\nfetchBloodsRemaining();\r\n},[]);\r\n\r\nconst [bloodDonateRemainList, setBloodDonateRemainlist] = useState({total:''});\r\n\r\nuseEffect(()=>{\r\nconst fetchBloodDonatesRemaining = async () => {\r\n \r\n    const response = await axios.get(bloodDonates_remaining);\r\n   \r\n    setBloodDonateRemainlist(response.data);\r\n\r\n};\r\nfetchBloodDonatesRemaining();\r\n},[]);\r\n\r\n\r\nconst [accountList, setAccountlist] = useState({total:''});\r\n\r\nuseEffect(()=>{\r\nconst fetchAccounts = async () => {\r\n \r\n    const response = await axios.get(admins_url);\r\n   \r\n    setAccountlist(response.data);\r\n\r\n};\r\nfetchAccounts();\r\n},[]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const cardList = [\r\n    {\r\n      title: 'Số lượng tài khoản',\r\n      value: accountList.total,\r\n      icon: PeopleIcon,\r\n      color: 'brown.500',\r\n    },\r\n    {\r\n      title: 'Số buổi hiến máu đang tổ chức',\r\n      value: bloodDonateRemainList.total,\r\n      icon: VolunteerActivismIcon,\r\n      color: 'red.500',\r\n    },\r\n    {\r\n      title: 'Số bài viết chưa duyệt',\r\n      value: formatPrice(remainList.total),\r\n      icon: AttachMoneyIcon,\r\n      color: 'green.500',\r\n    },\r\n    {\r\n      title: 'Số máu còn lại',\r\n      value:  formatPrice(bloodRemainList.total) + ' đơn vị',\r\n      icon: OpacityIcon,\r\n      color: 'blue.500',\r\n    },\r\n \r\n  ];\r\n\r\n  return (\r\n    <SimpleGrid minChildWidth='250px' spacing={5} mb={5}>\r\n      {cardList.map((card, index) => {\r\n        const { title, value, icon, color } = card;\r\n        return (\r\n          <Flex\r\n            key={index}\r\n            shadow='lg'\r\n            bg='white'\r\n            p='5'\r\n            borderRadius='lg'\r\n            justifyContent='center'\r\n          >\r\n            <Box>\r\n              <Text fontSize='lg' color='gray.500'>\r\n                {title}\r\n              </Text>\r\n              <Heading size='lg' color={color}>\r\n                {value}\r\n              </Heading>\r\n            </Box>\r\n            <Spacer />\r\n            <Square size='60px' bg='brown.400' borderRadius='lg'>\r\n              <Icon as={icon} color='white' />\r\n            </Square>\r\n          </Flex>\r\n        );\r\n      })}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default DashboardCards;\r\n","import {\r\n  CREATE_NEW_ADMIN,\r\n  GET_ADMINS_BEGIN,\r\n  GET_ADMINS_ERROR,\r\n  GET_ADMINS_SUCCESS,\r\n} from '../actions';\r\n\r\nconst product_reducer = (state, action) => {\r\n  if (action.type === GET_ADMINS_BEGIN) {\r\n    return { ...state, admins_error: false, admins_loading: true };\r\n  }\r\n  if (action.type === GET_ADMINS_ERROR) {\r\n    return { ...state, admins_error: true, admins_loading: false };\r\n  }\r\n  if (action.type === GET_ADMINS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      admins_loading: false,\r\n      admins: action.payload,\r\n    };\r\n  }\r\n  if (action.type === CREATE_NEW_ADMIN) {\r\n    const { name, value } = action.payload;\r\n    return { ...state, new_admin: { ...state.new_admin, [name]: value } };\r\n  }\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default product_reducer;\r\n","\r\n\r\nexport const GET_ADMINS_BEGIN = 'GET_ADMINS_BEGIN';\r\nexport const GET_ADMINS_ERROR = 'GET_ADMINS_ERROR';\r\nexport const GET_ADMINS_SUCCESS = 'GET_ADMINS_SUCCESS';\r\n\r\nexport const CREATE_NEW_ADMIN = 'CREATE_NEW_ADMIN';\r\n\r\n// Post\r\nexport const GET_POSTS_BEGIN = 'GET_POSTS_BEGIN';\r\nexport const GET_POSTS_ERROR = 'GET_POSTS_ERROR';\r\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\r\n\r\nexport const CREATE_NEW_POST = 'CREATE_NEW_POST';\r\n\r\nexport const UPDATE_EXISTING_POST = 'UPDATE_EXISTING_POST';\r\nexport const GET_SINGLE_POST_BEGIN = 'GET_SINGLE_POST_BEGIN';\r\nexport const GET_SINGLE_POST_ERROR = 'GET_SINGLE_POST_ERROR';\r\nexport const GET_SINGLE_POST_SUCCESS = 'GET_SINGLE_POST_SUCCESS';\r\n\r\n// staff\r\nexport const GET_STAFFS_BEGIN = 'GET_STAFFS_BEGIN';\r\nexport const GET_STAFFS_ERROR = 'GET_STAFFS_ERROR';\r\nexport const GET_STAFFS_SUCCESS = 'GET_STAFFS_SUCCESS';\r\n\r\nexport const CREATE_NEW_STAFF = 'CREATE_NEW_STAFF';\r\n\r\nexport const UPDATE_EXISTING_STAFF = 'UPDATE_EXISTING_STAFF';\r\nexport const GET_SINGLE_STAFF_BEGIN = 'GET_SINGLE_STAFF_BEGIN';\r\nexport const GET_SINGLE_STAFF_ERROR = 'GET_SINGLE_STAFF_ERROR';\r\nexport const GET_SINGLE_STAFF_SUCCESS = 'GET_SINGLE_STAFF_SUCCESS';\r\n// booking\r\nexport const GET_BOOKINGS_BEGIN = 'GET_BOOKINGS_BEGIN';\r\nexport const GET_BOOKINGS_ERROR = 'GET_BOOKINGS_ERROR';\r\nexport const GET_BOOKINGS_SUCCESS = 'GET_BOOKINGS_SUCCESS';\r\n\r\nexport const CREATE_NEW_BOOKING = 'CREATE_NEW_BOOKING';\r\n\r\nexport const UPDATE_EXISTING_BOOKING = 'UPDATE_EXISTING_BOOKING';\r\nexport const GET_SINGLE_BOOKING_BEGIN = 'GET_SINGLE_BOOKING_BEGIN';\r\nexport const GET_SINGLE_BOOKING_ERROR = 'GET_SINGLE_BOOKING_ERROR';\r\nexport const GET_SINGLE_BOOKING_SUCCESS = 'GET_SINGLE_BOOKING_SUCCESS';\r\n\r\n// cashFlow\r\nexport const GET_CASHFLOWS_BEGIN = 'GET_CASHFLOWS_BEGIN';\r\nexport const GET_CASHFLOWS_ERROR = 'GET_CASHFLOWS_ERROR';\r\nexport const GET_CASHFLOWS_SUCCESS = 'GET_CASHFLOWS_SUCCESS';\r\n\r\nexport const CREATE_NEW_CASHFLOW = 'CREATE_NEW_CASHFLOW';\r\n\r\nexport const UPDATE_EXISTING_CASHFLOW = 'UPDATE_EXISTING_CASHFLOW';\r\nexport const GET_SINGLE_CASHFLOW_BEGIN = 'GET_SINGLE_CASHFLOW_BEGIN';\r\nexport const GET_SINGLE_CASHFLOW_ERROR = 'GET_SINGLE_CASHFLOW_ERROR';\r\nexport const GET_SINGLE_CASHFLOW_SUCCESS = 'GET_SINGLE_CASHFLOW_SUCCESS';\r\n\r\n// DONATE\r\nexport const GET_DONATES_BEGIN = 'GET_DONATES_BEGIN';\r\nexport const GET_DONATES_ERROR = 'GET_DONATES_ERROR';\r\nexport const GET_DONATES_SUCCESS = 'GET_DONATES_SUCCESS';\r\n\r\nexport const CREATE_NEW_DONATE = 'CREATE_NEW_DONATE';\r\n\r\nexport const UPDATE_EXISTING_DONATE = 'UPDATE_EXISTING_DONATE';\r\nexport const GET_SINGLE_DONATE_BEGIN = 'GET_SINGLE_DONATE_BEGIN';\r\nexport const GET_SINGLE_DONATE_ERROR = 'GET_SINGLE_DONATE_ERROR';\r\nexport const GET_SINGLE_DONATE_SUCCESS = 'GET_SINGLE_DONATE_SUCCESS';\r\n\r\n// BLOODDONATE\r\nexport const GET_BLOODDONATES_BEGIN = 'GET_BLOODDONATES_BEGIN';\r\nexport const GET_BLOODDONATES_ERROR = 'GET_BLOODDONATES_ERROR';\r\nexport const GET_BLOODDONATES_SUCCESS = 'GET_BLOODDONATES_SUCCESS';\r\n\r\nexport const CREATE_NEW_BLOODDONATE = 'CREATE_NEW_BLOODDONATE';\r\n\r\nexport const UPDATE_EXISTING_BLOODDONATE = 'UPDATE_EXISTING_BLOODDONATE';\r\nexport const GET_SINGLE_BLOODDONATE_BEGIN = 'GET_SINGLE_BLOODDONATE_BEGIN';\r\nexport const GET_SINGLE_BLOODDONATE_ERROR = 'GET_SINGLE_BLOODDONATE_ERROR';\r\nexport const GET_SINGLE_BLOODDONATE_SUCCESS = 'GET_SINGLE_BLOODDONATE_SUCCESS';\r\n\r\n// bloodStorage\r\nexport const GET_BLOODSTORAGES_BEGIN = 'GET_BLOODSTORAGES_BEGIN';\r\nexport const GET_BLOODSTORAGES_ERROR = 'GET_BLOODSTORAGES_ERROR';\r\nexport const GET_BLOODSTORAGES_SUCCESS = 'GET_BLOODSTORAGES_SUCCESS';\r\n\r\nexport const CREATE_NEW_BLOODSTORAGE = 'CREATE_NEW_BLOODSTORAGE';\r\n\r\nexport const UPDATE_EXISTING_BLOODSTORAGE = 'UPDATE_EXISTING_BLOODSTORAGE';\r\nexport const GET_SINGLE_BLOODSTORAGE_BEGIN = 'GET_SINGLE_BLOODSTORAGE_BEGIN';\r\nexport const GET_SINGLE_BLOODSTORAGE_ERROR = 'GET_SINGLE_BLOODSTORAGE_ERROR';\r\nexport const GET_SINGLE_BLOODSTORAGE_SUCCESS = 'GET_SINGLE_BLOODSTORAGE_SUCCESS';\r\n\r\n\r\n// infor\r\nexport const GET_INFORS_BEGIN = 'GET_INFORS_BEGIN';\r\nexport const GET_INFORS_ERROR = 'GET_INFORS_ERROR';\r\nexport const GET_INFORS_SUCCESS = 'GET_INFORS_SUCCESS';\r\n\r\nexport const CREATE_NEW_INFOR = 'CREATE_NEW_INFOR';\r\n\r\nexport const UPDATE_EXISTING_INFOR = 'UPDATE_EXISTING_INFOR';\r\nexport const GET_SINGLE_INFOR_BEGIN = 'GET_SINGLE_INFOR_BEGIN';\r\nexport const GET_SINGLE_INFOR_ERROR = 'GET_SINGLE_INFOR_ERROR';\r\nexport const GET_SINGLE_INFOR_SUCCESS = 'GET_SINGLE_INFOR_SUCCESS';","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/admin_reducer';\r\nimport { useUserContext } from '../context/user_context';\r\nimport { admins_url, register_url } from '../utils/constants';\r\nimport {\r\n  GET_ADMINS_BEGIN,\r\n  GET_ADMINS_ERROR,\r\n  GET_ADMINS_SUCCESS,\r\n  CREATE_NEW_ADMIN,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  admins_loading: false,\r\n  admins_error: false,\r\n  admins: [],\r\n  new_admin: {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    privilege: 'staff',\r\n  },\r\n};\r\n\r\nconst AdminContext = React.createContext();\r\n\r\nexport const AdminProvider = ({ children }) => {\r\n  const { currentUser } = useUserContext();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchAdmins = async () => {\r\n    dispatch({ type: GET_ADMINS_BEGIN });\r\n    try {\r\n      const response = await axios.get(admins_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_ADMINS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ADMINS_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateAdminPrivilege = async (id, privilege) => {\r\n    try {\r\n      const response = await axios.put(`${admins_url}${id}`, { privilege });\r\n      const { success, data } = response.data;\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const deleteAdmin = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${admins_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateNewAdminDetails = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    dispatch({ type: CREATE_NEW_ADMIN, payload: { name, value } });\r\n  };\r\n\r\n  const createNewAdmin = async () => {\r\n    const { new_admin } = state;\r\n    try {\r\n      const response = await axios.post(register_url, new_admin);\r\n      const { success, data } = response.data;\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAdmins();\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <AdminContext.Provider\r\n      value={{\r\n        ...state,\r\n        fetchAdmins,\r\n        updateAdminPrivilege,\r\n        deleteAdmin,\r\n        updateNewAdminDetails,\r\n        createNewAdmin,\r\n      }}\r\n    >\r\n      {children}\r\n    </AdminContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAdminContext = () => {\r\n  return useContext(AdminContext);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { getAdminPrivilegeColor } from '../utils/helpers';\r\n// import { moment  } from 'react-moment'\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Badge,\r\n  Button,\r\n  SimpleGrid,\r\n  Spinner,\r\n  Select,\r\n  useToast,\r\n  HStack,\r\n} from '@chakra-ui/react';\r\nimport { useAdminContext } from '../context/admin_context';\r\nimport moment from 'moment';\r\n// import moment from 'moment-timezone'\r\n\r\nfunction AdminsTable({ admins }) {\r\n  const toast = useToast();\r\n  const { updateAdminPrivilege, deleteAdmin, fetchAdmins } = useAdminContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleEdit = async (e, id) => {\r\n    setLoading(true);\r\n    const privilege = e.target.value;\r\n    const response = await updateAdminPrivilege(id, privilege);\r\n    setLoading(false);\r\n    if (response.success) {\r\n      const { name, privilege } = response.data;\r\n      toast({\r\n        position: 'top',\r\n        description: `${name}'s privilege changed to ${privilege}`,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return await fetchAdmins();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    setLoading(true);\r\n    const response = await deleteAdmin(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return await fetchAdmins();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Email</Th>\r\n              <Th>Tên</Th>\r\n              <Th>Loại tài khoản</Th>\r\n              <Th>Ngày tạo</Th>\r\n              <Th>Hành động</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {admins.map((admin, index) => {\r\n              const { name, email, privilege, id: adminId,createdAt } = admin;\r\n              return (\r\n                <Tr key={index}>\r\n                  <Td>{index+1}</Td>\r\n                  <Td>{email}</Td>\r\n                  <Td>{name}</Td>\r\n                  \r\n                  <Td>\r\n                    <Badge colorScheme={getAdminPrivilegeColor(privilege)}>\r\n                      {privilege}\r\n                    </Badge>\r\n                  </Td>\r\n                  <Td> {moment(createdAt).format(\"D/M/YYYY\")}\r\n           </Td>\r\n                  <Td>\r\n                    <HStack spacing='5'>\r\n                      <Select\r\n                        maxW={125}\r\n                        focusBorderColor='brown.500'\r\n                        value={privilege}\r\n                        onChange={(e) => handleEdit(e, adminId)}\r\n                      >\r\n                        <option value='admin'>Admin</option>\r\n                        <option value='staff'>Staff</option>\r\n                        <option value='user'>User</option>\r\n                      </Select>\r\n                      <Button\r\n                        variant='outline'\r\n                        colorScheme='red'\r\n                        onClick={() => handleDelete(adminId)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </HStack>\r\n                  </Td>\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default AdminsTable;\r\n","import {\r\n    CREATE_NEW_STAFF,\r\n    GET_STAFFS_BEGIN,\r\n    GET_STAFFS_ERROR,\r\n    GET_STAFFS_SUCCESS,\r\n    UPDATE_EXISTING_STAFF,\r\n    GET_SINGLE_STAFF_BEGIN,\r\n    GET_SINGLE_STAFF_ERROR,\r\n    GET_SINGLE_STAFF_SUCCESS,\r\n  } from '../actions';\r\n  \r\n  const staff_reducer = (state, action) => {\r\n    if (action.type === GET_STAFFS_BEGIN) {\r\n      return { ...state, staffs_error: false, staffs_loading: true };\r\n    }\r\n    if (action.type === GET_STAFFS_ERROR) {\r\n      return { ...state, staffs_error: true, staffs_loading: false };\r\n    }\r\n    if (action.type === GET_STAFFS_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        staffs_loading: false,\r\n        staffs: action.payload,\r\n      };\r\n    }\r\n    if (action.type === CREATE_NEW_STAFF) {\r\n      const { name, value } = action.payload;\r\n      return { ...state, new_staff: { ...state.new_staff, [name]: value } };\r\n    }\r\n    if (action.type === GET_SINGLE_STAFF_BEGIN) {\r\n      return {\r\n        ...state,\r\n        single_staff_error: false,\r\n        single_staff_loading: true,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_STAFF_ERROR) {\r\n      return {\r\n        ...state,\r\n        single_staff_error: true,\r\n        single_staff_loading: false,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_STAFF_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        single_staff_loading: false,\r\n        single_staff: action.payload,\r\n      };\r\n    }\r\n    if (action.type === UPDATE_EXISTING_STAFF) {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        single_staff: { ...state.single_staff, [name]: value },\r\n      };\r\n    }\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  };\r\n  \r\n  export default staff_reducer;\r\n  ","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/staff_reducer';\r\nimport {\r\n  staffs_url,\r\n  update_staff_url,\r\n  create_new_staff,\r\n\r\n} from '../utils/constants';\r\nimport {\r\n  CREATE_NEW_STAFF,\r\n  GET_STAFFS_BEGIN,\r\n  GET_STAFFS_ERROR,\r\n  GET_STAFFS_SUCCESS,\r\n  UPDATE_EXISTING_STAFF,\r\n  GET_SINGLE_STAFF_BEGIN,\r\n  GET_SINGLE_STAFF_ERROR,\r\n  GET_SINGLE_STAFF_SUCCESS,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  staffs_loading: false,\r\n  staffs_error: false,\r\n  staffs: [],\r\n  new_staff: {\r\n    name: '',\r\n    countryID: '',\r\n    phone:'',\r\n    suppostTime: false,\r\n    address: '',\r\n    from:'',\r\n    type:'Nhân Viên Hỗ Trợ'\r\n   \r\n  },\r\n  single_staff_loading: false,\r\n  single_staff_error: false,\r\n  single_staff: {},\r\n};\r\n\r\nconst StaffContext = React.createContext();\r\n\r\nexport const StaffProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchStaffs = async () => {\r\n    dispatch({ type: GET_STAFFS_BEGIN });\r\n    try {\r\n      const response = await axios.get(staffs_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_STAFFS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_STAFFS_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchSingleStaff = async (id) => {\r\n    dispatch({ type: GET_SINGLE_STAFF_BEGIN });\r\n    try {\r\n      const response = await axios.get(`${staffs_url}${id}`);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_SINGLE_STAFF_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_STAFF_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteStaff = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${update_staff_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateNewStaffDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n   \r\n    dispatch({ type: CREATE_NEW_STAFF, payload: { name, value } });\r\n  };\r\n\r\n  const updateExistingStaffDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n \r\n    dispatch({ type: UPDATE_EXISTING_STAFF, payload: { name, value } });\r\n  };\r\n\r\n  const createNewStaff = async (staff) => {\r\n    try {\r\n      const response = await axios.post(create_new_staff, staff);\r\n      const { success, data } = response.data;\r\n      fetchStaffs();\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateStaff = async (id, staff) => {\r\n    try {\r\n      const response = await axios.put(`${update_staff_url}${id}`, staff);\r\n      const { success, message } = response.data;\r\n      // fetchstaffs();\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    fetchStaffs();\r\n  }, []);\r\n\r\n  return (\r\n    <StaffContext.Provider\r\n      value={{\r\n        ...state,\r\n        deleteStaff,\r\n        updateNewStaffDetails,\r\n        updateExistingStaffDetails,\r\n        createNewStaff,\r\n        fetchStaffs,\r\n        fetchSingleStaff,\r\n        updateStaff,\r\n        \r\n      }}\r\n    >\r\n      {children}\r\n    </StaffContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useStaffContext = () => {\r\n  return useContext(StaffContext);\r\n};\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n  Text,\r\n  Select\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useStaffContext } from '../context/staff_context';\r\n\r\nfunction UpdateStaffModal({ id }) {\r\n  const {\r\n    single_staff: {\r\n      name = '',\r\n      countryID = '',\r\n      address = '',\r\n      phone = '',\r\n      suppostTime = '',\r\n      from = '',\r\n      type = 'Nhân Viên Hỗ Trợ',\r\n      \r\n    },\r\n    // single_staff_loading,\r\n    fetchStaffs,\r\n    fetchSingleStaff,\r\n    updateExistingStaffDetails,\r\n    updateStaff,\r\n  } = useStaffContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !name ||\r\n      !countryID ||\r\n      !address ||\r\n      !type ||\r\n      !phone||\r\n      !from||\r\n      !suppostTime \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    setLoading(true);\r\n    const staff = {\r\n      name,\r\n      countryID,\r\n      address,\r\n      phone,\r\n      from,\r\n      suppostTime,\r\n      type\r\n    };\r\n    const responseCreate = await updateStaff(id, staff);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      toast({\r\n        position: 'top',\r\n        description: 'staff updated',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      await fetchStaffs();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <Text\r\n        colorScheme='brown'\r\n        minW='100%'\r\n        onClick={() => {\r\n          fetchSingleStaff(id);\r\n          onOpen();\r\n        }}\r\n      >\r\n        Chỉnh Sửa\r\n      </Text>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Chỉnh sửa nhân viên</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Họ và tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Họ và tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateExistingStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>CMND/CCCD</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='CMND/CCCD'\r\n                name='countryID'\r\n                focusBorderColor='brown.500'\r\n                value={countryID}\r\n                onChange={updateExistingStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n              <FormLabel>SĐT</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='SĐT'\r\n                name='phone'\r\n                focusBorderColor='brown.500'\r\n                value={phone}\r\n                onChange={updateExistingStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Địa chỉ</FormLabel>\r\n              <Textarea\r\n                placeholder='Địa chỉ'\r\n                name='address'\r\n                focusBorderColor='brown.500'\r\n                value={address}\r\n                onChange={updateExistingStaffDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n              <FormLabel>Đơn vị</FormLabel>\r\n              <Textarea\r\n                placeholder='Đơn vị'\r\n                name='from'\r\n                focusBorderColor='brown.500'\r\n                value={from}\r\n                onChange={updateExistingStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Số lần hỗ trợ</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='Số lần hỗ trợ'\r\n                name='suppostTime'\r\n                focusBorderColor='brown.500'\r\n                value={suppostTime}\r\n                onChange={updateExistingStaffDetails}\r\n              />\r\n            </FormControl>\r\n            \r\n            \r\n            <FormControl mt={4}>\r\n            <FormLabel>Loại nhân viên</FormLabel>\r\n              <Select\r\n                name='type'\r\n                focusBorderColor='brown.500'\r\n                value={type}\r\n                onChange={updateExistingStaffDetails}\r\n              >\r\n                <option value='Quản Trị Viên'>Quản Trị Viên</option>\r\n                <option value='Bác Sĩ'>Bác Sĩ</option>\r\n                <option value='Nhân Viên Hỗ Trợ'>Nhân Viên Hỗ Trợ</option>\r\n              </Select>\r\n            </FormControl>\r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Updating Staff'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateStaffModal;\r\n","import React, { useState } from 'react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { useStaffContext } from '../context/staff_context';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  SimpleGrid,\r\n\r\n  HStack,\r\n  Spinner,\r\n\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport UpdateStaffModal from './UpdateStaffModal';\r\n\r\nfunction StaffsTable({ staffs }) {\r\n  const toast = useToast();\r\n  const { fetchStaffs, deleteStaff } = useStaffContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDelete = async (id) => {\r\n    setLoading(true);\r\n    const response = await deleteStaff(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return await fetchStaffs();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>CMND/CCCD</Th>\r\n              <Th>Họ và tên</Th>\r\n              <Th>SĐT</Th>\r\n              <Th>Địa chỉ</Th>\r\n              <Th>Đơn vị</Th>\r\n              <Th>Loại nhân viên</Th>\r\n              <Th>Số lần đã hỗ trợ</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {staffs.map((staff, index) => {\r\n              const {  name, countryID,phone, address, suppostTime,type,from,id } =\r\n                staff;\r\n                \r\n              return (\r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                  <Td>{countryID}</Td>\r\n                  <Td>{name}</Td>\r\n                  <Td>{phone}</Td>\r\n                  <Td>{address}</Td>\r\n                  <Td>{from}</Td>\r\n                  <Td>{type}</Td>\r\n                  <Td>{suppostTime}</Td>\r\n                  <Td>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                        Hành động\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        <Link to={`/staffs/${id}`}>\r\n                          <MenuItem>Xem</MenuItem>\r\n                        </Link>\r\n                        <MenuItem>\r\n                          <UpdateStaffModal id={id} />\r\n                        </MenuItem>\r\n                      \r\n                        <MenuItem onClick={() => handleDelete(id)}>\r\n                          Xóa\r\n                        </MenuItem>\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Td>\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default StaffsTable;\r\n","import {\r\n    CREATE_NEW_POST,\r\n    GET_POSTS_BEGIN,\r\n    GET_POSTS_ERROR,\r\n    GET_POSTS_SUCCESS,\r\n    UPDATE_EXISTING_POST,\r\n    GET_SINGLE_POST_BEGIN,\r\n    GET_SINGLE_POST_ERROR,\r\n    GET_SINGLE_POST_SUCCESS,\r\n  } from '../actions';\r\n  \r\n  const post_reducer = (state, action) => {\r\n    if (action.type === GET_POSTS_BEGIN) {\r\n      return { ...state, posts_error: false, posts_loading: true };\r\n    }\r\n    if (action.type === GET_POSTS_ERROR) {\r\n      return { ...state, posts_error: true, posts_loading: false };\r\n    }\r\n    if (action.type === GET_POSTS_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        posts_loading: false,\r\n        posts: action.payload,\r\n      };\r\n    }\r\n    if (action.type === CREATE_NEW_POST) {\r\n      const { name, value } = action.payload;\r\n      return { ...state, new_post: { ...state.new_post, [name]: value } };\r\n    }\r\n    if (action.type === GET_SINGLE_POST_BEGIN) {\r\n      return {\r\n        ...state,\r\n        single_post_error: false,\r\n        single_post_loading: true,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_POST_ERROR) {\r\n      return {\r\n        ...state,\r\n        single_post_error: true,\r\n        single_post_loading: false,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_POST_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        single_post_loading: false,\r\n        single_post: action.payload,\r\n      };\r\n    }\r\n    if (action.type === UPDATE_EXISTING_POST) {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        single_post: { ...state.single_post, [name]: value },\r\n      };\r\n    }\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  };\r\n  \r\n  export default post_reducer;\r\n  ","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/post_reducer';\r\nimport {\r\n  posts_url,\r\n  update_post_url,\r\n  create_new_post,\r\n\r\n} from '../utils/constants';\r\nimport {\r\n  CREATE_NEW_POST,\r\n  GET_POSTS_BEGIN,\r\n  GET_POSTS_ERROR,\r\n  GET_POSTS_SUCCESS,\r\n  UPDATE_EXISTING_POST,\r\n  GET_SINGLE_POST_BEGIN,\r\n  GET_SINGLE_POST_ERROR,\r\n  GET_SINGLE_POST_SUCCESS,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  posts_loading: false,\r\n  posts_error: false,\r\n  posts: [],\r\n  new_post: {\r\n    name: '',\r\n    title: '',\r\n    content:'',\r\n    like: false,\r\n    status: '',\r\n    createdAt:'',\r\n\r\n   \r\n  },\r\n  single_post_loading: false,\r\n  single_post_error: false,\r\n  single_post: {},\r\n};\r\n\r\nconst PostContext = React.createContext();\r\n\r\nexport const PostProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchPosts = async () => {\r\n    dispatch({ type: GET_POSTS_BEGIN });\r\n    try {\r\n      const response = await axios.get(posts_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_POSTS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_POSTS_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchSinglePost = async (id) => {\r\n    dispatch({ type: GET_SINGLE_POST_BEGIN });\r\n    try {\r\n      const response = await axios.get(`${posts_url}${id}`);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_SINGLE_POST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_POST_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePost = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${update_post_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateNewPostDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n   \r\n    dispatch({ type: CREATE_NEW_POST, payload: { name, value } });\r\n  };\r\n\r\n  const updateExistingPostDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n \r\n    dispatch({ type: UPDATE_EXISTING_POST, payload: { name, value } });\r\n  };\r\n\r\n  const createNewPost = async (post) => {\r\n    try {\r\n      const response = await axios.post(create_new_post, post);\r\n      const { success, data } = response.data;\r\n      fetchPosts();\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updatePost = async (id, post) => {\r\n    try {\r\n      const response = await axios.put(`${update_post_url}${id}`, post);\r\n      const { success, message } = response.data;\r\n      // fetchposts();\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <PostContext.Provider\r\n      value={{\r\n        ...state,\r\n        deletePost,\r\n        updateNewPostDetails,\r\n        updateExistingPostDetails,\r\n        createNewPost,\r\n        fetchPosts,\r\n        fetchSinglePost,\r\n        updatePost,\r\n        \r\n      }}\r\n    >\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePostContext = () => {\r\n  return useContext(PostContext);\r\n};\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n  Text,\r\n  Select\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { usePostContext } from '../context/post_context';\r\nimport { Hidden } from '@mui/material';\r\n\r\nfunction UpdatePostModal({ id }) {\r\n  const {\r\n    single_post: {\r\n      name,\r\n      title,\r\n      content,\r\n      status,\r\n      like\r\n\r\n      \r\n    },\r\n    // single_post_loading,\r\n    fetchPosts,\r\n    fetchSinglePost,\r\n    updateExistingPostDetails,\r\n    updatePost,\r\n  } = usePostContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !status\r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    setLoading(true);\r\n    const post = {\r\n      name,\r\n      title,\r\n      content,\r\n      status,\r\n      like\r\n    };\r\n    const responseCreate = await updatePost(id, post);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      toast({\r\n        position: 'top',\r\n        description: 'post updated',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      await fetchPosts();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <Text\r\n        colorScheme='brown'\r\n        minW='100%'\r\n        onClick={() => {\r\n          fetchSinglePost(id);\r\n          onOpen();\r\n        }}\r\n      >\r\n        Duyệt bài viết\r\n      </Text>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Duyệt bài viết</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n         \r\n              <Hidden\r\n                ref={initialRef}\r\n                // placeholder='Họ và tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateExistingPostDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n           \r\n              <Hidden\r\n                // type='number'\r\n                // placeholder='CMND/CCCD'\r\n                name='title'\r\n                focusBorderColor='brown.500'\r\n                value={title}\r\n                onChange={updateExistingPostDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n              {/* <FormLabel>SĐT</FormLabel> */}\r\n              <Hidden\r\n                ref={initialRef}\r\n                // placeholder='SĐT'\r\n                name='content'\r\n                focusBorderColor='brown.500'\r\n                value={content}\r\n                onChange={updateExistingPostDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              {/* <FormLabel>Địa chỉ</FormLabel> */}\r\n              <Hidden\r\n                // placeholder='Địa chỉ'\r\n                name='like'\r\n                focusBorderColor='brown.500'\r\n                value={like}\r\n                onChange={updateExistingPostDetails}\r\n              />\r\n            </FormControl>\r\n         \r\n\r\n         \r\n            \r\n            \r\n            <FormControl mt={4}>\r\n            {/* <FormLabel>Loại nhân viên</FormLabel> */}\r\n              <Select\r\n                name='status'\r\n                focusBorderColor='brown.500'\r\n                value={status}\r\n                onChange={updateExistingPostDetails}\r\n              >\r\n                <option value='Đã duyệt'>Duyệt</option>\r\n                <option value='Chưa duyệt'>Không duyệt</option>\r\n               \r\n              </Select>\r\n            </FormControl>\r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Updating Post'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdatePostModal;\r\n","import React, { useState } from 'react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { usePostContext } from '../context/post_context';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  SimpleGrid,\r\n\r\n  HStack,\r\n  Spinner,\r\n\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport UpdatePostModal from './UpdatePostModal';\r\nimport moment from 'moment';\r\n\r\nfunction PostsTable({ posts }) {\r\n  const toast = useToast();\r\n  const { fetchPosts, deletePost } = usePostContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDelete = async (id) => {\r\n    setLoading(true);\r\n    const response = await deletePost(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return await fetchPosts();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Họ và tên người đăng</Th>\r\n              <Th>Tiêu đề</Th>\r\n              <Th>Số like</Th>\r\n              <Th>Ngày đăng</Th>\r\n              <Th>Trạng thái</Th>\r\n             \r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {posts.map((post, index) => {\r\n              const {  name,title,like,status,createdAt,id } =\r\n                post;\r\n                \r\n              return (\r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                  <Td>{name}</Td>\r\n                  <Td>{title}</Td>\r\n                  <Td>{like}</Td>\r\n                  <Td>{new Intl.DateTimeFormat('vn-VN', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit'}).format(createdAt)}</Td>\r\n                  <Td>{status}</Td>\r\n             \r\n                  <Td>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                        Hành động\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        <Link to={`/posts/${id}`}>\r\n                          <MenuItem>Xem</MenuItem>\r\n                        </Link>\r\n                        <MenuItem>\r\n                          <UpdatePostModal id={id} />\r\n                        </MenuItem>\r\n                      \r\n                        <MenuItem onClick={() => handleDelete(id)}>\r\n                          Xóa\r\n                        </MenuItem>\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Td>\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default PostsTable;\r\n","import {\r\n    CREATE_NEW_INFOR,\r\n    GET_INFORS_BEGIN,\r\n    GET_INFORS_ERROR,\r\n    GET_INFORS_SUCCESS,\r\n    UPDATE_EXISTING_INFOR,\r\n    GET_SINGLE_INFOR_BEGIN,\r\n    GET_SINGLE_INFOR_ERROR,\r\n    GET_SINGLE_INFOR_SUCCESS,\r\n  } from '../actions';\r\n  \r\n  const infor_reducer = (state, action) => {\r\n    if (action.type === GET_INFORS_BEGIN) {\r\n      return { ...state, infors_error: false, infors_loading: true };\r\n    }\r\n    if (action.type === GET_INFORS_ERROR) {\r\n      return { ...state, infors_error: true, infors_loading: false };\r\n    }\r\n    if (action.type === GET_INFORS_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        infors_loading: false,\r\n        infors: action.payload,\r\n      };\r\n    }\r\n    if (action.type === CREATE_NEW_INFOR) {\r\n      const { name, value } = action.payload;\r\n      return { ...state, new_infor: { ...state.new_infor, [name]: value } };\r\n    }\r\n    if (action.type === GET_SINGLE_INFOR_BEGIN) {\r\n      return {\r\n        ...state,\r\n        single_infor_error: false,\r\n        single_infor_loading: true,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_INFOR_ERROR) {\r\n      return {\r\n        ...state,\r\n        single_infor_error: true,\r\n        single_infor_loading: false,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_INFOR_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        single_infor_loading: false,\r\n        single_infor: action.payload,\r\n      };\r\n    }\r\n    if (action.type === UPDATE_EXISTING_INFOR) {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        single_infor: { ...state.single_infor, [name]: value },\r\n      };\r\n    }\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  };\r\n  \r\n  export default infor_reducer;\r\n  ","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/infor_reducer';\r\nimport {\r\n  infors_url,\r\n  update_infor_url,\r\n  create_new_infor,\r\n\r\n} from '../utils/constants';\r\nimport {\r\n  CREATE_NEW_INFOR,\r\n  GET_INFORS_BEGIN,\r\n  GET_INFORS_ERROR,\r\n  GET_INFORS_SUCCESS,\r\n  UPDATE_EXISTING_INFOR,\r\n  GET_SINGLE_INFOR_BEGIN,\r\n  GET_SINGLE_INFOR_ERROR,\r\n  GET_SINGLE_INFOR_SUCCESS,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  infors_loading: false,\r\n  infors_error: false,\r\n  infors: [],\r\n  new_infor: {\r\n    name: '',\r\n    countryID: '',\r\n    email:'',\r\n    phone:'',\r\n    // from: '',\r\n    address: '',\r\n    typeBlood:'',\r\n    status:'',\r\n    oldDate:'',\r\n    donateTime:'',\r\n    // lastDonate:''\r\n   \r\n  },\r\n  single_infor_loading: false,\r\n  single_infor_error: false,\r\n  single_infor: {},\r\n};\r\n\r\nconst InforContext = React.createContext();\r\n\r\nexport const InforProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchInfors = async () => {\r\n    dispatch({ type: GET_INFORS_BEGIN });\r\n    try {\r\n      const response = await axios.get(infors_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_INFORS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_INFORS_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchSingleInfor = async (id) => {\r\n    dispatch({ type: GET_SINGLE_INFOR_BEGIN });\r\n    try {\r\n      const response = await axios.get(`${infors_url}${id}`);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_SINGLE_INFOR_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_INFOR_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteInfor = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${update_infor_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateNewInforDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n   \r\n    dispatch({ type: CREATE_NEW_INFOR, payload: { name, value } });\r\n  };\r\n\r\n  const updateExistingInforDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n \r\n    dispatch({ type: UPDATE_EXISTING_INFOR, payload: { name, value } });\r\n  };\r\n\r\n  const createNewInfor = async (infor) => {\r\n    try {\r\n      const response = await axios.post(create_new_infor, infor);\r\n      const { success, data } = response.data;\r\n      fetchInfors();\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateInfor = async (id, infor) => {\r\n    try {\r\n      const response = await axios.put(`${update_infor_url}${id}`, infor);\r\n      const { success, message } = response.data;\r\n      // fetchinfors();\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    fetchInfors();\r\n  }, []);\r\n\r\n  return (\r\n    <InforContext.Provider\r\n      value={{\r\n        ...state,\r\n        deleteInfor,\r\n        updateNewInforDetails,\r\n        updateExistingInforDetails,\r\n        createNewInfor,\r\n        fetchInfors,\r\n        fetchSingleInfor,\r\n        updateInfor,\r\n        \r\n      }}\r\n    >\r\n      {children}\r\n    </InforContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useInforContext = () => {\r\n  return useContext(InforContext);\r\n};\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n  Text,\r\n  Select\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useInforContext } from '../context/infor_context';\r\n\r\nfunction UpdateInforModal({ id }) {\r\n  const {\r\n    single_infor: {\r\n        name,\r\n        countryID,\r\n        address,\r\n        email,\r\n        phone,\r\n        // from,\r\n        typeBlood,\r\n        donateTime,\r\n        // status,\r\n        // lastDonate\r\n      \r\n    },\r\n    // single_infor_loading,\r\n    fetchInfors,\r\n    fetchSingleInfor,\r\n    updateExistingInforDetails,\r\n    updateInfor,\r\n  } = useInforContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n        !name||\r\n        !countryID||\r\n        !address||\r\n        !email||\r\n        !phone||\r\n        // !from||\r\n        !typeBlood||\r\n        !donateTime\r\n        // !status||\r\n        // !lastDonate \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    setLoading(true);\r\n    const infor = {\r\n        name,\r\n        countryID,\r\n        address,\r\n        email,\r\n        phone,\r\n        // from,\r\n        typeBlood,\r\n        donateTime,\r\n        // status,\r\n        // lastDonate\r\n    };\r\n    const responseCreate = await updateInfor(id, infor);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      toast({\r\n        position: 'top',\r\n        description: 'infor updated',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      await fetchInfors();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <Text\r\n        colorScheme='brown'\r\n        minW='100%'\r\n        onClick={() => {\r\n          fetchSingleInfor(id);\r\n          onOpen();\r\n        }}\r\n      >\r\n        Chỉnh Sửa\r\n      </Text>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Chỉnh sửa thông tin người hiến</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Họ và tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Họ và tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateExistingInforDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>CMND/CCCD</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='CMND/CCCD'\r\n                name='countryID'\r\n                focusBorderColor='brown.500'\r\n                value={countryID}\r\n                onChange={updateExistingInforDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                placeholder='Email'\r\n                name='email'\r\n                focusBorderColor='brown.500'\r\n                value={email}\r\n                onChange={updateExistingInforDetails}\r\n              />\r\n              </FormControl>\r\n            \r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Địa chỉ</FormLabel>\r\n              <Textarea\r\n                placeholder='Địa chỉ'\r\n                name='address'\r\n                focusBorderColor='brown.500'\r\n                value={address}\r\n                onChange={updateExistingInforDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n              <FormLabel>SĐT</FormLabel>\r\n              <Input\r\n             \r\n                placeholder='SĐT'\r\n                name='phone'\r\n                focusBorderColor='brown.500'\r\n                value={phone}\r\n                onChange={updateExistingInforDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Số lần hiến</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='Số lần hiến'\r\n                name='donateTime'\r\n                focusBorderColor='brown.500'\r\n                value={donateTime}\r\n                onChange={updateExistingInforDetails}\r\n              />\r\n            </FormControl>\r\n            \r\n            \r\n            <FormControl mt={4}>\r\n            <FormLabel>Nhóm máu</FormLabel>\r\n              <Select\r\n                name='typeBlood'\r\n                focusBorderColor='brown.500'\r\n                value={typeBlood}\r\n                onChange={updateExistingInforDetails}\r\n              >\r\n                <option value='O'>O</option>\r\n                <option value='A'>A</option>\r\n                <option value='B'>B</option>\r\n                <option value='AB'>AB</option>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Updating Infor'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateInforModal;\r\n","import React, { useState } from 'react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { useInforContext } from '../context/infor_context';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  SimpleGrid,\r\n\r\n  HStack,\r\n  Spinner,\r\n\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport UpdateInforModal from './UpdateInforModal';\r\n\r\nfunction InforsTable({ infors }) {\r\n  const toast = useToast();\r\n  const { fetchInfors, deleteInfor } = useInforContext();\r\n  const [loading, setLoading] = useState(false);\r\n \r\n  const handleDelete = async (id) => {\r\n    setLoading(true);\r\n    const response = await deleteInfor(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      // window.location.reload(false);\r\n      return await fetchInfors();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>CMND/CCCD</Th>\r\n              <Th>Họ và tên</Th>\r\n              <Th>Số điện thoại</Th>\r\n              <Th>Địa chỉ</Th>\r\n              <Th>Nhóm máu</Th>\r\n        \r\n              <Th>Số lần hiến</Th>\r\n              <Th>Trạng thái</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {infors.map((infor, index) => {\r\n              const {  name, countryID, address, email,typeBlood,donateTime,status,lastDonate,phone,id } =\r\n                infor;\r\n                const current = new Date();\r\n                const nextDonate = new Date(lastDonate).setDate(current.getDate() + 90);\r\n                // const status ='';\r\n                // console.log(new Date(nextDonate).toDateString());\r\n              \r\n                // console.log(infor);\r\n               \r\n                  return (\r\n                    <Tr key={index}>\r\n                       <Td>{index+1}</Td>\r\n                      <Td>{countryID}</Td>\r\n                      <Td>{name}</Td>\r\n                      <Td>{phone}</Td>\r\n                      <Td>{address}</Td>\r\n                      {/* <Td>{email}</Td> */}\r\n                    \r\n                      <Td>{typeBlood}</Td>\r\n                      <Td>{donateTime}</Td>\r\n                      <Td>{status}</Td>\r\n                      {/* <Td>{lastDonate}</Td> */}\r\n                      <Td>\r\n                        <Menu>\r\n                          <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                            Hành động\r\n                          </MenuButton>\r\n                          <MenuList>\r\n                            <Link to={`/infors/${id}`}>\r\n                              <MenuItem>Xem</MenuItem>\r\n                            </Link>\r\n                            <MenuItem>\r\n                              <UpdateInforModal id={id} />\r\n                            </MenuItem>\r\n                          \r\n                            <MenuItem onClick={() => handleDelete(id)}>\r\n                              Xóa\r\n                            </MenuItem>\r\n                          </MenuList>\r\n                        </Menu>\r\n                      </Td>\r\n                    </Tr>\r\n                  );\r\n                \r\n             \r\n          \r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default InforsTable;\r\n","import {\r\n    CREATE_NEW_BLOODDONATE,\r\n    GET_BLOODDONATES_BEGIN,\r\n    GET_BLOODDONATES_ERROR,\r\n    GET_BLOODDONATES_SUCCESS,\r\n    UPDATE_EXISTING_BLOODDONATE,\r\n    GET_SINGLE_BLOODDONATE_BEGIN,\r\n    GET_SINGLE_BLOODDONATE_ERROR,\r\n    GET_SINGLE_BLOODDONATE_SUCCESS,\r\n  } from '../actions';\r\n  \r\n  const bloodDonate_reducer = (state, action) => {\r\n    if (action.type === GET_BLOODDONATES_BEGIN) {\r\n      return { ...state, bloodDonates_error: false, bloodDonates_loading: true };\r\n    }\r\n    if (action.type === GET_BLOODDONATES_ERROR) {\r\n      return { ...state, bloodDonates_error: true, bloodDonates_loading: false };\r\n    }\r\n    if (action.type === GET_BLOODDONATES_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        bloodDonates_loading: false,\r\n        bloodDonates: action.payload,\r\n      };\r\n    }\r\n    if (action.type === CREATE_NEW_BLOODDONATE) {\r\n      const { name, value } = action.payload;\r\n      return { ...state, new_bloodDonate: { ...state.new_bloodDonate, [name]: value } };\r\n    }\r\n    if (action.type === GET_SINGLE_BLOODDONATE_BEGIN) {\r\n      return {\r\n        ...state,\r\n        single_bloodDonate_error: false,\r\n        single_bloodDonate_loading: true,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_BLOODDONATE_ERROR) {\r\n      return {\r\n        ...state,\r\n        single_bloodDonate_error: true,\r\n        single_bloodDonate_loading: false,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_BLOODDONATE_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        single_bloodDonate_loading: false,\r\n        single_bloodDonate: action.payload,\r\n      };\r\n    }\r\n    if (action.type === UPDATE_EXISTING_BLOODDONATE) {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        single_bloodDonate: { ...state.single_bloodDonate, [name]: value },\r\n      };\r\n    }\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  };\r\n  \r\n  export default bloodDonate_reducer;\r\n  ","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/bloodDonate_reducer';\r\nimport {\r\n  bloodDonates_url,\r\n  update_bloodDonate_url,\r\n  create_new_bloodDonate,\r\n  \r\n} from '../utils/constants';\r\nimport {\r\n  CREATE_NEW_BLOODDONATE,\r\n  GET_BLOODDONATES_BEGIN,\r\n  GET_BLOODDONATES_ERROR,\r\n  GET_BLOODDONATES_SUCCESS,\r\n  UPDATE_EXISTING_BLOODDONATE,\r\n  GET_SINGLE_BLOODDONATE_BEGIN,\r\n  GET_SINGLE_BLOODDONATE_ERROR,\r\n  GET_SINGLE_BLOODDONATE_SUCCESS,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  bloodDonates_loading: false,\r\n  bloodDonates_error: false,\r\n  bloodDonates: [],\r\n  new_bloodDonate: {\r\n    name: '',\r\n    time: '',\r\n    A: 0,\r\n    B:0,\r\n    AB:0,\r\n    O:0,\r\n    address: '',\r\n    target: '',\r\n    receive: '',\r\n    staffList: [],\r\n    timeF:'',\r\n    // donate:[\r\n    \r\n    // ],\r\n    status: 'Chưa thực hiện',\r\n    // type:'Nhân Viên Hỗ Trợ'\r\n   \r\n  },\r\n  single_bloodDonate_loading: false,\r\n  single_bloodDonate_error: false,\r\n  single_bloodDonate: {},\r\n};\r\n\r\nconst BloodDonateContext = React.createContext();\r\n\r\nexport const BloodDonateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchBloodDonates = async () => {\r\n    dispatch({ type: GET_BLOODDONATES_BEGIN });\r\n    try {\r\n      const response = await axios.get(bloodDonates_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_BLOODDONATES_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_BLOODDONATES_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchSingleBloodDonate = async (id) => {\r\n    dispatch({ type: GET_SINGLE_BLOODDONATE_BEGIN });\r\n    try {\r\n      const response = await axios.get(`${bloodDonates_url}${id}`);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_SINGLE_BLOODDONATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_BLOODDONATE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteBloodDonate = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${update_bloodDonate_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateNewBloodDonateDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n  \r\n    dispatch({ type: CREATE_NEW_BLOODDONATE, payload: { name, value } });\r\n  };\r\n\r\n  const updateExistingBloodDonateDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n \r\n    dispatch({ type: UPDATE_EXISTING_BLOODDONATE, payload: { name, value } });\r\n  };\r\n\r\n  const createNewBloodDonate = async (bloodDonate) => {\r\n    try {\r\n      const response = await axios.post(create_new_bloodDonate, bloodDonate);\r\n      const { success, data } = response.data;\r\n      fetchBloodDonates();\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateBloodDonate = async (id, bloodDonate) => {\r\n    try {\r\n      const response = await axios.put(`${update_bloodDonate_url}${id}`, bloodDonate);\r\n      const { success, message } = response.data;\r\n      // fetchbloodDonates();\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchBloodDonates();\r\n  }, []);\r\n\r\n  return (\r\n    <BloodDonateContext.Provider\r\n      value={{\r\n        ...state,\r\n        deleteBloodDonate,\r\n        updateNewBloodDonateDetails,\r\n        updateExistingBloodDonateDetails,\r\n        createNewBloodDonate,\r\n        fetchBloodDonates,\r\n        fetchSingleBloodDonate,\r\n        updateBloodDonate,\r\n        \r\n      }}\r\n    >\r\n      {children}\r\n    </BloodDonateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBloodDonateContext = () => {\r\n  return useContext(BloodDonateContext);\r\n};\r\n","import {\r\n    CREATE_NEW_BLOODSTORAGE,\r\n    GET_BLOODSTORAGES_BEGIN,\r\n    GET_BLOODSTORAGES_ERROR,\r\n    GET_BLOODSTORAGES_SUCCESS,\r\n    UPDATE_EXISTING_BLOODSTORAGE,\r\n    GET_SINGLE_BLOODSTORAGE_BEGIN,\r\n    GET_SINGLE_BLOODSTORAGE_ERROR,\r\n    GET_SINGLE_BLOODSTORAGE_SUCCESS,\r\n  } from '../actions';\r\n  \r\n  const bloodStorage_reducer = (state, action) => {\r\n    if (action.type === GET_BLOODSTORAGES_BEGIN) {\r\n      return { ...state, bloodStorages_error: false, bloodStorages_loading: true };\r\n    }\r\n    if (action.type === GET_BLOODSTORAGES_ERROR) {\r\n      return { ...state, bloodStorages_error: true, bloodStorages_loading: false };\r\n    }\r\n    if (action.type === GET_BLOODSTORAGES_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        bloodStorages_loading: false,\r\n        bloodStorages: action.payload,\r\n      };\r\n    }\r\n    if (action.type === CREATE_NEW_BLOODSTORAGE) {\r\n      const { name, value } = action.payload;\r\n      return { ...state, new_bloodStorage: { ...state.new_bloodStorage, [name]: value } };\r\n    }\r\n    if (action.type === GET_SINGLE_BLOODSTORAGE_BEGIN) {\r\n      return {\r\n        ...state,\r\n        single_bloodStorage_error: false,\r\n        single_bloodStorage_loading: true,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_BLOODSTORAGE_ERROR) {\r\n      return {\r\n        ...state,\r\n        single_bloodStorage_error: true,\r\n        single_bloodStorage_loading: false,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_BLOODSTORAGE_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        single_bloodStorage_loading: false,\r\n        single_bloodStorage: action.payload,\r\n      };\r\n    }\r\n    if (action.type === UPDATE_EXISTING_BLOODSTORAGE) {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        single_bloodStorage: { ...state.single_bloodStorage, [name]: value },\r\n      };\r\n    }\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  };\r\n  \r\n  export default bloodStorage_reducer;\r\n  ","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/bloodStorage_reducer';\r\nimport {\r\n  bloodStorages_url,\r\n  update_bloodStorage_url,\r\n  create_new_bloodStorage,\r\n\r\n} from '../utils/constants';\r\nimport {\r\n  CREATE_NEW_BLOODSTORAGE,\r\n  GET_BLOODSTORAGES_BEGIN,\r\n  GET_BLOODSTORAGES_ERROR,\r\n  GET_BLOODSTORAGES_SUCCESS,\r\n  UPDATE_EXISTING_BLOODSTORAGE,\r\n  GET_SINGLE_BLOODSTORAGE_BEGIN,\r\n  GET_SINGLE_BLOODSTORAGE_ERROR,\r\n  GET_SINGLE_BLOODSTORAGE_SUCCESS,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  bloodStorages_loading: false,\r\n  bloodStorages_error: false,\r\n  bloodStorages: [],\r\n  new_bloodStorage: {\r\n    name: '',\r\n    amount: false,\r\n    date:'',\r\n    from: '',\r\n    A: 0,\r\n    B:0,\r\n    AB:0,\r\n    O:0,\r\n    type:'Nhận',\r\n    detail:'',\r\n    donateID:''\r\n\r\n   \r\n  },\r\n  single_bloodStorage_loading: false,\r\n  single_bloodStorage_error: false,\r\n  single_bloodStorage: {},\r\n};\r\n\r\nconst BloodStorageContext = React.createContext();\r\n\r\nexport const BloodStorageProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchBloodStorages = async () => {\r\n    dispatch({ type: GET_BLOODSTORAGES_BEGIN });\r\n    try {\r\n      const response = await axios.get(bloodStorages_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_BLOODSTORAGES_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_BLOODSTORAGES_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchSingleBloodStorage = async (id) => {\r\n    dispatch({ type: GET_SINGLE_BLOODSTORAGE_BEGIN });\r\n    try {\r\n      const response = await axios.get(`${bloodStorages_url}${id}`);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_SINGLE_BLOODSTORAGE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_BLOODSTORAGE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteBloodStorage = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${update_bloodStorage_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateNewBloodStorageDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n   \r\n    dispatch({ type: CREATE_NEW_BLOODSTORAGE, payload: { name, value } });\r\n  };\r\n\r\n  const updateExistingBloodStorageDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n \r\n    dispatch({ type: UPDATE_EXISTING_BLOODSTORAGE, payload: { name, value } });\r\n  };\r\n\r\n  const createNewBloodStorage = async (bloodStorage) => {\r\n    try {\r\n      const response = await axios.post(create_new_bloodStorage, bloodStorage);\r\n      const { success, data } = response.data;\r\n      fetchBloodStorages();\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateBloodStorage = async (id, bloodStorage) => {\r\n    try {\r\n      const response = await axios.put(`${update_bloodStorage_url}${id}`, bloodStorage);\r\n      const { success, message } = response.data;\r\n      // fetchbloodstorages();\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    fetchBloodStorages();\r\n  }, []);\r\n\r\n  return (\r\n    <BloodStorageContext.Provider\r\n      value={{\r\n        ...state,\r\n        deleteBloodStorage,\r\n        updateNewBloodStorageDetails,\r\n        updateExistingBloodStorageDetails,\r\n        createNewBloodStorage,\r\n        fetchBloodStorages,\r\n        fetchSingleBloodStorage,\r\n        updateBloodStorage,\r\n        \r\n      }}\r\n    >\r\n      {children}\r\n    </BloodStorageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBloodStorageContext = () => {\r\n  return useContext(BloodStorageContext);\r\n};\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  // Textarea,\r\n  Option,\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n  Text,\r\n  // Select\r\n} from '@chakra-ui/react';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\nimport { useBloodStorageContext } from '../context/bloodStorage_context';\r\nimport { Hidden } from '@mui/material';\r\nimport { create_new_bloodStorage} from '../utils/constants';\r\nimport { bloodStorages_url } from '../utils/constants';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { useStaffContext } from '../context/staff_context';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nfunction UpdateStatusBloodDonateModal({ id }) {\r\n  const {\r\n    single_bloodDonate: {\r\n      name = '',\r\n      time = '',\r\n      // timeF = '',\r\n      address = '',\r\n      target = '',\r\n      // receive=0,\r\n      status = 'Chưa thực hiện',\r\n      staffList=[]\r\n      \r\n    },\r\n    // single_bloodDonate_loading,\r\n    fetchBloodDonates,\r\n    fetchSingleBloodDonate,\r\n    updateExistingBloodDonateDetails,\r\n    updateBloodDonate,\r\n  } = useBloodDonateContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const {deleteBloodStorage} = useBloodStorageContext();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n  const [List, setList] = useState([]);\r\n  const [nameList, setNameList] = useState([]);\r\n  // const [defaults, setDefaults] = useState([]);\r\n  const [hour, setHour] = useState([]);\r\n  const [minute, setMinute] = useState([]);\r\n \r\n  const [hourF, setHourF] = useState([]);\r\n  const [minuteF, setMinuteF] = useState([]);\r\n \r\n  const handleChange = e => {\r\n    setNameList(e);\r\n    // setStaffList( [nameList.map(index=> index.value)])\r\n  \r\n  }\r\n  const {\r\n    staffs,\r\n    updateStaff\r\n  } = useStaffContext();\r\n\r\n  // console.log(staffs.filter(index=> staffList.includes(id)));\r\n//   useEffect(()=>{\r\n//     const getdata =  () => {\r\n//       defaults.push()\r\n// }     \r\n\r\n\r\n// getdata();\r\n\r\n//     },[]);\r\n  \r\nlet defaults = staffs.filter(index=> staffList.includes(index.id)).map(function (index) {\r\n  return { value: index.id, label: index.name+' - '+index.type };\r\n})\r\n\r\n let options = staffs.map(function (index) {\r\n  return { value: index.id, label: index.name+' - '+index.type };\r\n})\r\n\r\n// console.log(options);\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !name ||\r\n      // !time ||\r\n      !address ||\r\n      !target ||\r\n      // !receive ||\r\n      !status\r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n \r\n\r\n    setLoading(true);\r\n    const bloodDonate = {\r\n      name,\r\n      // time,\r\n      address,\r\n      time:hourF+minute,\r\n      timeF:hourF+minuteF,\r\n      target,\r\n      // timeF,\r\n      staffList:nameList.map(index=> index.value),\r\n      // receive,\r\n      status\r\n    };\r\n    const responseCreate = await updateBloodDonate(id, bloodDonate);\r\n\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      toast({\r\n        position: 'top',\r\n        description: 'BloodDonate updated',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      await fetchBloodDonates();\r\n      if(status==='Đã thực hiện'){\r\n        const createBloodStorage = async () => {\r\n         const check = await axios.get(bloodStorages_url,id);\r\n        \r\n         if(!check){}\r\n         else{\r\n          const response = await axios.post(create_new_bloodStorage,{\r\n            _id:id,\r\n            name: \"Máu nhận\",\r\n            // amount: receive,\r\n            from: name,\r\n            donateID: id,\r\n            type: 'Nhận',\r\n            detail:'Nhận từ buổi hiến máu',\r\n            date: time\r\n          })}\r\n         \r\n      };\r\n      createBloodStorage();}\r\n  \r\n      if(status==='Chưa thực hiện'){\r\n      \r\n        return await deleteBloodStorage(id);\r\n     }\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <Text\r\n        colorScheme='brown'\r\n        minW='100%'\r\n        onClick={() => {\r\n          fetchSingleBloodDonate(id);\r\n          onOpen();\r\n        }}\r\n      >\r\n        Chỉnh sửa\r\n      </Text>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n        <ModalHeader>Chỉnh sửa buổi hiến</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n            <FormLabel>Tên buổi hiến</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Tên buổi hiến'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n            <FormLabel>Giờ bắt đầu</FormLabel>\r\n            <Input\r\n                type='Time'\r\n                placeholder='Thời gian'\r\n                name='minute'\r\n                focusBorderColor='brown.500'\r\n                value={minute}\r\n                onChange={e=>setMinute(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n              <FormLabel>Giờ kết thúc</FormLabel>\r\n             \r\n              <Input\r\n                type='Time'\r\n                placeholder='Thời gian'\r\n                name='minute'\r\n                focusBorderColor='brown.500'\r\n                value={minuteF}\r\n                onChange={e=>setMinuteF(e.target.value)}\r\n              />\r\n            \r\n             \r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Ngày thực hiện</FormLabel>\r\n          \r\n        \r\n              <Input\r\n                type='date'\r\n                placeholder='Thời gian'\r\n                name='hour'\r\n                focusBorderColor='brown.500'\r\n                value={hourF}\r\n                onChange={e=>setHourF(e.target.value)}\r\n              />\r\n             \r\n            </FormControl>\r\n\r\n            <FormControl>\r\n            <FormLabel>Địa điểm</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Địa điểm'\r\n                name='address'\r\n                focusBorderColor='brown.500'\r\n                value={address}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n            <FormLabel>Mục tiêu</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Mục tiêu'\r\n                name='target'\r\n                focusBorderColor='brown.500'\r\n                value={target}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            {/* <FormControl> */}\r\n            {/* <FormLabel>Thu được</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Thu được'\r\n                name='receive'\r\n                focusBorderColor='brown.500'\r\n                value={receive}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl> */}\r\n<FormControl >\r\n<FormLabel>Chọn nhân viên</FormLabel>\r\n{/* {console.log(options)} */}\r\n            <Select\r\n          ref={initialRef}\r\n            value={options.find(obj => obj.value === staffList)}\r\n      closeMenuOnSelect={false}\r\n      onChange={handleChange}\r\n      defaultValue={defaults}\r\n      components={animatedComponents}\r\n\r\n      isMulti\r\n      \r\n      options={options}\r\n    />\r\n             </FormControl>\r\n\r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Updating BloodDonate'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateStatusBloodDonateModal;\r\n","import React, { useState, useRef,useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  // Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  // Textarea,\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n  Text,\r\n  Select\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\nimport { useBloodStorageContext } from '../context/bloodStorage_context';\r\nimport { Hidden } from '@mui/material';\r\nimport { create_new_bloodStorage, donates_url} from '../utils/constants';\r\n// import { donates_url } from '../utils/constants';\r\nimport { bloodStorages_url } from '../utils/constants';\r\nimport axios from 'axios';\r\nfunction UpdateStatusBloodDonateModal({ id }) {\r\n  const {\r\n    single_bloodDonate: {\r\n      name = '',\r\n      time = '',\r\n      address = '',\r\n      target = '',\r\n      // receive='',\r\n      status = 'Chưa thực hiện',\r\n  \r\n\r\n      \r\n    },\r\n    // single_bloodDonate_loading,\r\n    fetchBloodDonates,\r\n    fetchSingleBloodDonate,\r\n    updateExistingBloodDonateDetails,\r\n    updateBloodDonate,\r\n  } = useBloodDonateContext();\r\n\r\n  const [A, setA] = useState({total:''});\r\n  useEffect(()=>{\r\n  const fetchA = async () => {\r\n   \r\n      const response = await axios.get(donates_url+'/A/'+id);\r\n     \r\n      setA(response.data);\r\n  };\r\n  fetchA();\r\n},[]);\r\n\r\nconst [AB, setAB] = useState({total:''});\r\n  useEffect(()=>{\r\n  const fetchAB = async () => {\r\n   \r\n      const response = await axios.get(donates_url+'/AB/'+id);\r\n     \r\n      setAB(response.data);\r\n  };\r\n  fetchAB();\r\n},[]);\r\n\r\nconst [B, setB] = useState({total:''});\r\n  useEffect(()=>{\r\n  const fetchB = async () => {\r\n   \r\n      const response = await axios.get(donates_url+'/B/'+id);\r\n     \r\n      setB(response.data);\r\n  };\r\n  fetchB();\r\n},[]);\r\n\r\nconst [O, setO] = useState({total:''});\r\n  useEffect(()=>{\r\n  const fetchO = async () => {\r\n   \r\n      const response = await axios.get(donates_url+'/O/'+id);\r\n     \r\n      setO(response.data);\r\n  };\r\n  fetchO();\r\n},[]);\r\n\r\nconst ave =(A.total+B.total+AB.total+O.total)/250;\r\n  \r\n\r\n\r\n  const {deleteBloodStorage} = useBloodStorageContext();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !name ||\r\n      !time ||\r\n      !address ||\r\n      !target ||\r\n      // !receive ||\r\n      !status \r\n      // !donateID\r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    setLoading(true);\r\n    const bloodDonate = {\r\n      name,\r\n      time,\r\n      address,\r\n      target,\r\n      receive:ave,\r\n      status,\r\n      A:A.total,\r\n      B:B.total,\r\n      AB:AB.total,\r\n      O:O.total,\r\n   \r\n    };\r\n    const responseCreate = await updateBloodDonate(id, bloodDonate);\r\n    \r\n       \r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      toast({\r\n        position: 'top',\r\n        description: 'BloodDonate updated',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      await fetchBloodDonates();\r\n\r\n      // const dt = await fetchSingleBloodDonate(id, bloodDonate);\r\n      if(status==='Đã thực hiện'){\r\n      const createBloodStorage = async () => {\r\n       const check = await axios.get(bloodStorages_url,id);\r\n      \r\n       if(!check){}\r\n       else{\r\n     \r\n        const response = await axios.post(create_new_bloodStorage,{\r\n          _id:id,\r\n          name: \"Máu nhận\",\r\n          amount: ave,\r\n          A:A.total,\r\n          B:B.total,\r\n          AB:AB.total,\r\n          O:O.total,\r\n          from: name,\r\n          donateID: id,\r\n          type: 'Nhận',\r\n          detail:'Nhận từ buổi hiến máu',\r\n          date: time\r\n        })}\r\n       \r\n    };\r\n    createBloodStorage();}\r\n\r\n    if(status==='Chưa thực hiện'){\r\n    \r\n      return await deleteBloodStorage(id);\r\n   }\r\n  \r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <Text\r\n        colorScheme='brown'\r\n        minW='100%'\r\n        onClick={() => {\r\n          fetchSingleBloodDonate(id);\r\n          onOpen();\r\n        }}\r\n      >\r\n        Đổi trạng thái\r\n      </Text>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Chỉnh sửa trạng thái</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n       \r\n              <Hidden\r\n                ref={initialRef}\r\n             \r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n          \r\n              <Hidden\r\n                ref={initialRef}\r\n             \r\n                name='time'\r\n                focusBorderColor='brown.500'\r\n                value={time}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n        \r\n              <Hidden\r\n                ref={initialRef}\r\n               \r\n                name='address'\r\n                focusBorderColor='brown.500'\r\n                value={address}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n        \r\n              <Hidden\r\n                ref={initialRef}\r\n              \r\n                name='target'\r\n                focusBorderColor='brown.500'\r\n                value={target}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            {/* <FormControl>\r\n       \r\n              <Hidden\r\n                ref={initialRef}\r\n            \r\n                name='receive'\r\n                focusBorderColor='brown.500'\r\n                value={receive}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              />\r\n            </FormControl> */}\r\n\r\n            <FormControl mt={4}>\r\n            <FormLabel>Đổi trạng thái</FormLabel>\r\n              <Select\r\n                name='status'\r\n                focusBorderColor='brown.500'\r\n                value={status}\r\n                onChange={updateExistingBloodDonateDetails}\r\n              >\r\n                <option value='Chưa thực hiện'>Chưa thực hiện</option>\r\n                <option value='Đã thực hiện'>Đã thực hiện</option>\r\n     \r\n              </Select>\r\n            </FormControl>\r\n         \r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Updating BloodDonate'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateStatusBloodDonateModal;\r\n","import React, { useState } from 'react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  SimpleGrid,\r\n  useDisclosure,\r\n  HStack,\r\n  Spinner,\r\n\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport UpdateBloodDonateModal from './UpdateBloodDonateModal';\r\nimport UpdateStatusBloodDonateModal from './UpdateStatusBloodDonateModal'\r\nimport { formatPrice } from '../utils/helpers';\r\nimport axios from 'axios';\r\nimport { useStaffContext } from '../context/staff_context';\r\nimport { bloodDonates_url, staffs_url } from '../utils/constants';\r\n\r\nfunction BloodDonatesTable({ bloodDonates }) {\r\n  const toast = useToast();\r\n  const { fetchBloodDonates,fetchSingleBloodDonate, deleteBloodDonate } = useBloodDonateContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // const [nameList, setNameList] = useState([]);\r\n \r\n  // const handleClick=(e)=>{\r\n  //   setStaffList(oldMessages => [e, ...oldMessages])\r\n  //  console.log(e);\r\n  \r\n  // }\r\n  \r\n  const {\r\n    staffs,\r\n    updateStaff\r\n  } = useStaffContext();\r\n  \r\n  // const handleChange = e => {\r\n  //   setNameList(e);\r\n  //   setStaffList( [nameList.map(index=> index.value)])\r\n  //   // console.log(e)\r\n   \r\n  // }\r\n\r\n  const handleDelete = async (id) => {\r\n    setLoading(true);\r\n    const data = await axios.get(bloodDonates_url+'/'+id);\r\n    console.log(data.data.data.staffList);\r\n    data.data.data.staffList.map((index) =>\r\n    {\r\n      \r\n      const res = axios.get(staffs_url+'/supTime/'+index) .then(function (response) {\r\n        const staff = {\r\n  \r\n          suppostTime: response.data.data-1,\r\n      \r\n        };\r\n        const responseCreate =  updateStaff(index, staff);\r\n       \r\n      });\r\n    })\r\n    const response = await deleteBloodDonate(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n     \r\n    \r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      // window.location.reload(true);\r\n      return await fetchBloodDonates();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Tên buổi hiến</Th>\r\n              <Th>Thời gian</Th>\r\n              <Th>Địa điểm</Th>\r\n              <Th>Mục tiêu</Th>\r\n              <Th>Thu được</Th>\r\n              <Th>Trạng thái</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {bloodDonates.map((bloodDonate, index) => {\r\n              const {  name, time,timeF, address, target,receive,status,donate,id } =\r\n                bloodDonate;\r\n                \r\n              return (\r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                <Td>{name}</Td>\r\n                {/* +'-'+timeF.substring(12,5) */}\r\n                  <Td>{time.substr(10,5)+'-'+timeF.substr(10,5)}\r\n                  <br/>{moment(timeF.substring(0,10)).format('DD/MM/YYYY')}\r\n                  </Td>\r\n                  <Td>{address}</Td>\r\n                  <Td>{formatPrice(target)} Đơn vị</Td>\r\n                  <Td>{formatPrice(receive)} Đơn vị</Td>\r\n                  <Td>{status}</Td>\r\n                  <Td>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                        Hành động\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        <Link to={`/bloodDonates/${id}`} id={id}>\r\n                          <MenuItem>Xem</MenuItem>\r\n                        </Link>\r\n                        <MenuItem>\r\n                          <UpdateStatusBloodDonateModal id={id} />\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                          <UpdateBloodDonateModal id={id} />\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => handleDelete(id)}>\r\n                          Xóa\r\n                        </MenuItem>\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Td>\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default BloodDonatesTable;\r\n","import {\r\n    CREATE_NEW_DONATE,\r\n    GET_DONATES_BEGIN,\r\n    GET_DONATES_ERROR,\r\n    GET_DONATES_SUCCESS,\r\n    UPDATE_EXISTING_DONATE,\r\n    GET_SINGLE_DONATE_BEGIN,\r\n    GET_SINGLE_DONATE_ERROR,\r\n    GET_SINGLE_DONATE_SUCCESS,\r\n  } from '../actions';\r\n  \r\n  const donate_reducer = (state, action) => {\r\n    if (action.type === GET_DONATES_BEGIN) {\r\n      return { ...state, donates_error: false, donates_loading: true };\r\n    }\r\n    if (action.type === GET_DONATES_ERROR) {\r\n      return { ...state, donates_error: true, donates_loading: false };\r\n    }\r\n    if (action.type === GET_DONATES_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        donates_loading: false,\r\n        donates: action.payload,\r\n      };\r\n    }\r\n    if (action.type === CREATE_NEW_DONATE) {\r\n      const { name, value } = action.payload;\r\n      return { ...state, new_donate: { ...state.new_donate, [name]: value } };\r\n    }\r\n    if (action.type === GET_SINGLE_DONATE_BEGIN) {\r\n      return {\r\n        ...state,\r\n        single_donate_error: false,\r\n        single_donate_loading: true,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_DONATE_ERROR) {\r\n      return {\r\n        ...state,\r\n        single_donate_error: true,\r\n        single_donate_loading: false,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_DONATE_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        single_donate_loading: false,\r\n        single_donate: action.payload,\r\n      };\r\n    }\r\n    if (action.type === UPDATE_EXISTING_DONATE) {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        single_donate: { ...state.single_donate, [name]: value },\r\n      };\r\n    }\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  };\r\n  \r\n  export default donate_reducer;\r\n  ","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/donate_reducer';\r\nimport {\r\n  donates_url,\r\n  update_donate_url,\r\n  create_new_donate,\r\n  \r\n} from '../utils/constants';\r\nimport {\r\n  CREATE_NEW_DONATE,\r\n  GET_DONATES_BEGIN,\r\n  GET_DONATES_ERROR,\r\n  GET_DONATES_SUCCESS,\r\n  UPDATE_EXISTING_DONATE,\r\n  GET_SINGLE_DONATE_BEGIN,\r\n  GET_SINGLE_DONATE_ERROR,\r\n  GET_SINGLE_DONATE_SUCCESS,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  donates_loading: false,\r\n  donates_error: false,\r\n  donates: [],\r\n  new_donate: {\r\n    name: '',\r\n    idBD: '',\r\n    createdAt:'',\r\n    iduser: '',\r\n    amount: 250,\r\n    typeBlood: '',\r\n \r\n    // type:'Nhân Viên Hỗ Trợ'\r\n   \r\n  },\r\n  single_donate_loading: false,\r\n  single_donate_error: false,\r\n  single_donate: {},\r\n};\r\n\r\nconst DonateContext = React.createContext();\r\n\r\nexport const DonateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchDonates = async () => {\r\n    dispatch({ type: GET_DONATES_BEGIN });\r\n    try {\r\n      const response = await axios.get(donates_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_DONATES_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DONATES_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchSingleDonate = async (id) => {\r\n    dispatch({ type: GET_SINGLE_DONATE_BEGIN });\r\n    try {\r\n      const response = await axios.get(`${donates_url}${id}`);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_SINGLE_DONATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_DONATE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDonate = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${update_donate_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  // const updateNewDonateDetails = (e) => {\r\n  //   const name = e.target.name;\r\n  //   let value = e.target.value;\r\n  \r\n  //   dispatch({ type: CREATE_NEW_DONATE, payload: { name, value } });\r\n  // };\r\n\r\n  const updateExistingDonateDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n \r\n    dispatch({ type: UPDATE_EXISTING_DONATE, payload: { name, value } });\r\n  };\r\n\r\n  const createNewDonate = async (donate) => {\r\n    try {\r\n      const response = await axios.post(create_new_donate, donate);\r\n      const { success, data } = response.data;\r\n      fetchDonates();\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateDonate = async (id, donate) => {\r\n    try {\r\n      const response = await axios.put(`${update_donate_url}${id}`, donate);\r\n      const { success, message } = response.data;\r\n      // fetchdonates();\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchDonates();\r\n  }, []);\r\n\r\n  return (\r\n    <DonateContext.Provider\r\n      value={{\r\n        ...state,\r\n        deleteDonate,\r\n        // updateNewDonateDetails,\r\n        updateExistingDonateDetails,\r\n        createNewDonate,\r\n        fetchDonates,\r\n        fetchSingleDonate,\r\n        updateDonate,\r\n        \r\n      }}\r\n    >\r\n      {children}\r\n    </DonateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDonateContext = () => {\r\n  return useContext(DonateContext);\r\n};\r\n","import React, { useState } from 'react';\r\n// import { BiChevronDown } from 'react-icons/bi';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  // Menu,\r\n  // MenuButton,\r\n  // MenuList,\r\n  // MenuItem,\r\n  SimpleGrid,\r\n\r\n  HStack,\r\n  Spinner,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\n// import UpdateBloodDonateModal from './UpdateBloodDonateModal';\r\n// import UpdateStatusBloodDonateModal from './UpdateStatusBloodDonateModal'\r\nimport { useDonateContext } from '../context/donate_context';\r\n// import { formatPrice } from '../utils/helpers';\r\nfunction DonateTable({ bloodDonates }) {\r\n  const toast = useToast();\r\n  const { fetchBloodDonates, deleteBloodDonate } = useBloodDonateContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // const {\r\n  //   donates,\r\n   \r\n  // } = useDonateContext();\r\n  \r\n\r\n\r\n\r\n  const handleDelete = async (id) => {\r\n    setLoading(true);\r\n    const response = await deleteBloodDonate(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return await fetchBloodDonates();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Tên buổi hiến</Th>\r\n              <Th>Thời gian</Th>\r\n              <Th>Địa điểm</Th>\r\n              <Th>Trạng thái</Th>\r\n              <Th>Hành động</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {bloodDonates.map((bloodDonate, index) => {\r\n              const {  name, time,timeF, address,status,id } =\r\n                bloodDonate;\r\n                if(status==='Chưa thực hiện'){\r\n              return (\r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                <Td>{name}</Td>\r\n                <Td>{time.substr(10,5)+'-'+timeF.substr(10,5)}\r\n                  <br/>{moment(timeF.substring(0,10)).format('DD/MM/YYYY')}\r\n                  </Td>\r\n                  <Td>{address}</Td>\r\n                  <Td>{status}</Td>\r\n\r\n                  <Td>\r\n                  <Menu>\r\n                          <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                            Hành động\r\n                          </MenuButton>\r\n                          <MenuList>\r\n                            <Link to={`/bookings/${id}`}>\r\n                              <MenuItem>Xem danh sách hẹn</MenuItem>\r\n                            </Link>\r\n                            <Link to={`/donates/${id}`}>\r\n                              <MenuItem>Chọn</MenuItem>\r\n                            </Link>\r\n                          \r\n                           \r\n                          </MenuList>\r\n                        </Menu>\r\n                  {/* <Button ><Link to={`/bookings/${id}`}>Xem danh sách hẹn</Link></Button><br/><br/>\r\n                  <Button ><Link to={`/donates/${id}`}>Chọn</Link></Button> */}\r\n                    {/* <Menu>\r\n                      <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                        Hành động\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        <Link to={`/bloodDonate/${id}`}>\r\n                          <MenuItem>Xem</MenuItem>\r\n                        </Link>\r\n                       \r\n                        \r\n                      </MenuList> */}\r\n                    {/* </Menu> */}\r\n                  </Td>\r\n                </Tr>\r\n              );}\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default DonateTable;\r\n","import {\r\n    CREATE_NEW_CASHFLOW,\r\n    GET_CASHFLOWS_BEGIN,\r\n    GET_CASHFLOWS_ERROR,\r\n    GET_CASHFLOWS_SUCCESS,\r\n    UPDATE_EXISTING_CASHFLOW,\r\n    GET_SINGLE_CASHFLOW_BEGIN,\r\n    GET_SINGLE_CASHFLOW_ERROR,\r\n    GET_SINGLE_CASHFLOW_SUCCESS,\r\n  } from '../actions';\r\n  \r\n  const cashFlow_reducer = (state, action) => {\r\n    if (action.type === GET_CASHFLOWS_BEGIN) {\r\n      return { ...state, cashFlows_error: false, cashFlows_loading: true };\r\n    }\r\n    if (action.type === GET_CASHFLOWS_ERROR) {\r\n      return { ...state, cashFlows_error: true, cashFlows_loading: false };\r\n    }\r\n    if (action.type === GET_CASHFLOWS_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        cashFlows_loading: false,\r\n        cashFlows: action.payload,\r\n      };\r\n    }\r\n    if (action.type === CREATE_NEW_CASHFLOW) {\r\n      const { name, value } = action.payload;\r\n      return { ...state, new_cashFlow: { ...state.new_cashFlow, [name]: value } };\r\n    }\r\n    if (action.type === GET_SINGLE_CASHFLOW_BEGIN) {\r\n      return {\r\n        ...state,\r\n        single_cashFlow_error: false,\r\n        single_cashFlow_loading: true,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_CASHFLOW_ERROR) {\r\n      return {\r\n        ...state,\r\n        single_cashFlow_error: true,\r\n        single_cashFlow_loading: false,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_CASHFLOW_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        single_cashFlow_loading: false,\r\n        single_cashFlow: action.payload,\r\n      };\r\n    }\r\n    if (action.type === UPDATE_EXISTING_CASHFLOW) {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        single_cashFlow: { ...state.single_cashFlow, [name]: value },\r\n      };\r\n    }\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  };\r\n  \r\n  export default cashFlow_reducer;\r\n  ","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/cashFlow_reduce';\r\nimport {\r\n  cashFlows_url,\r\n  update_cashFlow_url,\r\n  create_new_cashFlow,\r\n  cashFlow_remaining\r\n} from '../utils/constants';\r\nimport {\r\n  CREATE_NEW_CASHFLOW,\r\n  GET_CASHFLOWS_BEGIN,\r\n  GET_CASHFLOWS_ERROR,\r\n  GET_CASHFLOWS_SUCCESS,\r\n  UPDATE_EXISTING_CASHFLOW,\r\n  GET_SINGLE_CASHFLOW_BEGIN,\r\n  GET_SINGLE_CASHFLOW_ERROR,\r\n  GET_SINGLE_CASHFLOW_SUCCESS,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  cashFlows_loading: false,\r\n  cashFlows_error: false,\r\n  cashFlows: [],\r\n  new_cashFlow: {\r\n    name: '',\r\n    amount: \"\",\r\n    from: '',\r\n    date:'',\r\n    // address: '',\r\n    type:'Thu'\r\n   \r\n  },\r\n  single_cashFlow_loading: false,\r\n  single_cashFlow_error: false,\r\n  single_cashFlow: {},\r\n};\r\n\r\nconst CashFlowContext = React.createContext();\r\n\r\nexport const CashFlowProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchCashFlows = async () => {\r\n    dispatch({ type: GET_CASHFLOWS_BEGIN });\r\n    try {\r\n      const response = await axios.get(cashFlows_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_CASHFLOWS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_CASHFLOWS_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchCashFlowsRemaining = async () => {\r\n    dispatch({ type: GET_CASHFLOWS_BEGIN });\r\n    try {\r\n      const response = await axios.get(cashFlow_remaining);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_CASHFLOWS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_CASHFLOWS_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchSingleCashFlow = async (id) => {\r\n    dispatch({ type: GET_SINGLE_CASHFLOW_BEGIN });\r\n    try {\r\n      const response = await axios.get(`${cashFlows_url}${id}`);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_SINGLE_CASHFLOW_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_CASHFLOW_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteCashFlow = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${update_cashFlow_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateNewCashFlowDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n  \r\n    dispatch({ type: CREATE_NEW_CASHFLOW, payload: { name, value } });\r\n  };\r\n\r\n  const updateExistingCashFlowDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n \r\n    dispatch({ type: UPDATE_EXISTING_CASHFLOW, payload: { name, value } });\r\n  };\r\n\r\n  const createNewCashFlow = async (cashFlow) => {\r\n    try {\r\n      const response = await axios.post(create_new_cashFlow, cashFlow);\r\n      const { success, data } = response.data;\r\n      fetchCashFlows();\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateCashFlow = async (id, cashFlow) => {\r\n    try {\r\n      const response = await axios.put(`${update_cashFlow_url}${id}`, cashFlow);\r\n      const { success, message } = response.data;\r\n      // fetchcashFlows();\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchCashFlows();\r\n  }, []);\r\n\r\n  return (\r\n    <CashFlowContext.Provider\r\n      value={{\r\n        ...state,\r\n        deleteCashFlow,\r\n        updateNewCashFlowDetails,\r\n        updateExistingCashFlowDetails,\r\n        createNewCashFlow,\r\n        fetchCashFlows,\r\n        fetchSingleCashFlow,\r\n        updateCashFlow,\r\n        fetchCashFlowsRemaining\r\n      }}\r\n    >\r\n      {children}\r\n    </CashFlowContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCashFlowContext = () => {\r\n  return useContext(CashFlowContext);\r\n};\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n  Text,\r\n  Select\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useCashFlowContext } from '../context/cashFlow_context';\r\n\r\nfunction UpdateCashFlowModal({ id }) {\r\n  const {\r\n    single_cashFlow: {\r\n      name = '',\r\n      amount = '',\r\n      from = '',\r\n      date='',\r\n      type = 'Thu',\r\n      \r\n    },\r\n    // single_cashFlow_loading,\r\n    fetchCashFlows,\r\n    fetchSingleCashFlow,\r\n    updateExistingCashFlowDetails,\r\n    updateCashFlow,\r\n  } = useCashFlowContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n        !name ||\r\n        !from ||\r\n        !amount ||\r\n        !type||\r\n        !date\r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    setLoading(true);\r\n    const cashFlow = {\r\n        name,\r\n        amount,\r\n        from,\r\n        date,\r\n      //   suppostTime,\r\n        type\r\n    };\r\n    const responseCreate = await updateCashFlow(id, cashFlow);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      toast({\r\n        position: 'top',\r\n        description: 'cashFlow updated',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      await fetchCashFlows();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <Text\r\n        colorScheme='brown'\r\n        minW='100%'\r\n        onClick={() => {\r\n          fetchSingleCashFlow(id);\r\n          onOpen();\r\n        }}\r\n      >\r\n        Chỉnh Sửa\r\n      </Text>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Chỉnh sửa thu/chi</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n          <FormControl>\r\n              <FormLabel>Tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateExistingCashFlowDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Số tiền</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='Số tiền'\r\n                name='amount'\r\n                focusBorderColor='brown.500'\r\n                value={amount}\r\n                onChange={updateExistingCashFlowDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            \r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Mô tả</FormLabel>\r\n              <Textarea\r\n                placeholder='Mô tả'\r\n                name='from'\r\n                focusBorderColor='brown.500'\r\n                value={from}\r\n                onChange={updateExistingCashFlowDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n            <FormLabel>Ngày thực hiện</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                type='date'\r\n                name='date'\r\n                focusBorderColor='brown.500'\r\n                value={date}\r\n                onChange={updateExistingCashFlowDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Loại</FormLabel>\r\n              <Select\r\n                name='type'\r\n                focusBorderColor='brown.500'\r\n                value={type}\r\n                onChange={updateExistingCashFlowDetails}\r\n              >\r\n                <option value='Thu'>Thu</option>\r\n                <option value='Chi'>Chi</option>\r\n               \r\n              </Select>\r\n            </FormControl>\r\n        \r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Updating CashFlow'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateCashFlowModal;\r\n","import React, { useState } from 'react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { useCashFlowContext } from '../context/cashFlow_context';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  SimpleGrid,\r\n\r\n  HStack,\r\n  Spinner,\r\n\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport UpdateCashFlowModal from './UpdateCashFlowModal';\r\nimport { formatPrice } from '../utils/helpers';\r\nimport moment from 'moment';\r\nfunction CashFlowsTable({ cashFlows }) {\r\n  const toast = useToast();\r\n  const { fetchCashFlows, deleteCashFlow } = useCashFlowContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDelete = async (id) => {\r\n    setLoading(true);\r\n    const response = await deleteCashFlow(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n     \r\n      return await fetchCashFlows();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      \r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Tên thu/chi</Th>\r\n              <Th>Số tiền</Th>\r\n              <Th>Mô tả</Th>\r\n              \r\n              <Th>Ngày thực hiện</Th>\r\n              <Th>Loại</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {cashFlows.map((cashFlow, index) => {\r\n              const {  name, amount, from,date, type,id } =\r\n                cashFlow;\r\n              return (\r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                  <Td>{name}</Td>\r\n                  <Td>{formatPrice(amount)}đ</Td>\r\n                  <Td>{from}</Td>\r\n                  \r\n                  <Td>{moment(date).format(\"D/M/YYYY\")}</Td>\r\n                  <Td>{type}</Td>\r\n                  <Td>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                        Hành động\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        {/* <Link to={`/cashFlow/${id}`}>\r\n                          <MenuItem>Xem</MenuItem>\r\n                        </Link> */}\r\n                        <MenuItem>\r\n                          <UpdateCashFlowModal id={id} />\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => handleDelete(id)}>\r\n                          Xóa\r\n                        </MenuItem>\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Td>\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default CashFlowsTable;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n  Text,\r\n  Select\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useBloodStorageContext } from '../context/bloodStorage_context';\r\nimport axios from 'axios';\r\nimport { bloodStorages_url } from '../utils/constants';\r\nfunction UpdateBloodStorageModal({ id }) {\r\n  const {\r\n    single_bloodStorage: {\r\n      name = '',\r\n      amount = '',\r\n      from = '',\r\n      date = '',\r\n      detail = '',\r\n      type = '',\r\n      O,\r\n      A,AB,B\r\n      \r\n    },\r\n    // single_bloodstorage_loading,\r\n    fetchBloodStorages,\r\n    fetchSingleBloodStorage,\r\n    updateExistingBloodStorageDetails,\r\n    updateBloodStorage,\r\n  } = useBloodStorageContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n \r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n  const [bloodO, setBLoodO]= useState([]);\r\n  const [bloodA, setBLoodA]= useState([]);\r\n  const [bloodB, setBLoodB]= useState([]);\r\n  const [bloodAB, setBLoodAB]= useState([]);\r\n  const getdata= async()=>{     \r\n\r\n    const response = await axios.get(bloodStorages_url+'/getBlood');\r\n   let ABLood =response.data.ABLood;\r\n   let BBLood= response.data.BBLood;\r\n   let OBLood =response.data.BBLood;\r\n   let ABBLood =response.data.ABBLood;\r\n  setBLoodA(ABLood);\r\n  setBLoodO(OBLood);\r\n  setBLoodAB(ABBLood);\r\n  setBLoodB(BBLood);\r\n  // bloodDonates.sort((a, b) =>new Date(b.time).getTime()-new Date(a.time).getTime()).slice(0, 4).map(o => o);\r\n console.log(bloodA);\r\n}\r\ngetdata();\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !name ||\r\n      !amount ||\r\n      !from ||\r\n      !date||\r\n      !type ||\r\n      !detail \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    if (\r\n      type === 'Cho' &&\r\n      bloodA < A \r\n    \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Chỉ còn lại '+ bloodA +'ml máu A',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    if (\r\n      type === 'Cho' &&\r\n      bloodB < B \r\n    \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Chỉ còn lại '+ bloodB +'ml máu B',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    if (\r\n      type === 'Cho' &&\r\n      bloodAB < AB \r\n    \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Chỉ còn lại '+ bloodAB +'ml máu AB',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    if (\r\n      type === 'Cho' &&\r\n      bloodO < O \r\n    \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Chỉ còn lại '+ bloodO +'ml máu O',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    setLoading(true);\r\n    const bloodStorage = {\r\n      name,\r\n      amount,\r\n      from,\r\n      date,\r\n      detail,\r\n      type, O,\r\n      A,AB,B\r\n    };\r\n    const responseCreate = await updateBloodStorage(id, bloodStorage);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      toast({\r\n        position: 'top',\r\n        description: 'bloodstorage updated',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      await fetchBloodStorages();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      <Text\r\n        colorScheme='brown'\r\n        minW='100%'\r\n        onClick={() => {\r\n          fetchSingleBloodStorage(id);\r\n          onOpen();\r\n        }}\r\n      >\r\n        Chỉnh Sửa\r\n      </Text>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Chỉnh sửa</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Họ và tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateExistingBloodStorageDetails}\r\n              />\r\n            </FormControl>\r\n\r\n           \r\n\r\n            {/* <FormControl mt={4}>\r\n              <FormLabel>Số lượng</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='CMND/CCCD'\r\n                name='amount'\r\n                focusBorderColor='brown.500'\r\n                value={amount}\r\n                onChange={updateExistingBloodStorageDetails}\r\n              />\r\n            </FormControl> */}\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Từ/Đến</FormLabel>\r\n              <Input\r\n            \r\n                placeholder='Số lần hỗ trợ'\r\n                name='from'\r\n                focusBorderColor='brown.500'\r\n                value={from}\r\n                onChange={updateExistingBloodStorageDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n              <FormLabel>Mô tả</FormLabel>\r\n              <Textarea\r\n              \r\n                name='detail'\r\n                focusBorderColor='brown.500'\r\n                value={detail}\r\n                onChange={updateExistingBloodStorageDetails}\r\n              />\r\n            </FormControl>\r\n\r\n          \r\n            \r\n\r\n            <FormControl>\r\n            <FormLabel>Ngày thực hiện</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                type='date'\r\n                name='date'\r\n                focusBorderColor='brown.500'\r\n                value={date}\r\n                onChange={updateExistingBloodStorageDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n            <FormLabel>Chọn máu</FormLabel>\r\n            Máu O:\r\n              <Input\r\n             \r\n                // placeholder='Máu O'\r\n                name='O'\r\n                focusBorderColor='brown.500'\r\n                value={O}\r\n                onChange={updateExistingBloodStorageDetails}\r\n              />\r\n              Máu A:\r\n              <Input\r\n             \r\n            //  placeholder='Máu A'\r\n             name='A'\r\n             focusBorderColor='brown.500'\r\n             value={A}\r\n             onChange={updateExistingBloodStorageDetails}\r\n           />\r\n           Máu AB:\r\n           <Input\r\n             \r\n            //  placeholder='Máu AB'\r\n             name='AB'\r\n             focusBorderColor='brown.500'\r\n             value={AB}\r\n             onChange={updateExistingBloodStorageDetails}\r\n           />\r\n           Máu B:\r\n           <Input\r\n             \r\n            //  placeholder='Máu B'\r\n             name='B'\r\n             focusBorderColor='brown.500'\r\n             value={B}\r\n             onChange={updateExistingBloodStorageDetails}\r\n           />\r\n            </FormControl>\r\n            \r\n            \r\n      \r\n\r\n            \r\n            <FormControl mt={4}>\r\n            <FormLabel>Loại</FormLabel>\r\n              <Select\r\n                name='type'\r\n                focusBorderColor='brown.500'\r\n                value={type}\r\n                onChange={updateExistingBloodStorageDetails}\r\n              >\r\n                 <option value='Nhận'>Nhận</option>\r\n                <option value='Cho'>Cho</option>\r\n              \r\n              </Select>\r\n            </FormControl>\r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Updating BloodStorage'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateBloodStorageModal;\r\n","import React, { useState } from 'react';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { useBloodStorageContext } from '../context/bloodStorage_context';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  SimpleGrid,\r\n\r\n  HStack,\r\n  Spinner,\r\n\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport UpdateBloodStorageModal from './UpdateBloodStorageModal';\r\nimport { formatPrice } from '../utils/helpers';\r\nimport moment from 'moment';\r\n\r\nfunction BloodStoragesTable({ bloodStorages }) {\r\n  const toast = useToast();\r\n  const { fetchBloodStorages, deleteBloodStorage } = useBloodStorageContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDelete = async (id) => {\r\n    setLoading(true);\r\n    const response = await deleteBloodStorage(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return await fetchBloodStorages();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Tên</Th>\r\n              <Th>Số lượng</Th> \r\n              <Th>Từ/Đến</Th>\r\n              \r\n              <Th>Mô tả</Th>\r\n              <Th>Ngày</Th>\r\n              <Th>Loại</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {bloodStorages.map((bloodStorage, index) => {\r\n              const {  name, amount, from,date, type,detail,id } =\r\n                bloodStorage;\r\n              return (\r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                  <Td>{name}</Td>\r\n                  <Td>{formatPrice(amount)} Đơn vị</Td>\r\n                  \r\n                  <Td>{from}</Td>\r\n                  \r\n                  <Td>{detail}</Td>\r\n                  <Td>{moment(date.substring(0,10)).format('DD/MM/YYYY')}</Td>\r\n                  <Td>{type}</Td>\r\n                  <Td>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                        Hành động\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        <Link to={`/bloodStorages/${id}`}>\r\n                          <MenuItem>Xem</MenuItem>\r\n                        </Link>\r\n                        <MenuItem>\r\n                          <UpdateBloodStorageModal id={id} />\r\n                        </MenuItem>\r\n                      \r\n                        <MenuItem onClick={() => handleDelete(id)}>\r\n                          Xóa\r\n                        </MenuItem>\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Td>\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default BloodStoragesTable;\r\n","import React, { useRef, useState } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  useDisclosure,\r\n  useToast,\r\n  Box,\r\n  Select,\r\n} from '@chakra-ui/react';\r\nimport { useAdminContext } from '../context/admin_context';\r\n\r\nfunction CreateNewAdminModal() {\r\n  const {\r\n    new_admin: { name, email, password, privilege },\r\n    updateNewAdminDetails,\r\n    createNewAdmin,\r\n    fetchAdmins,\r\n  } = useAdminContext();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n  const initialRef = useRef();\r\n\r\n  const handleSubmit = async () => {\r\n    if (!name || !email || !password || !privilege) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Enter all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    setLoading(true);\r\n    const response = await createNewAdmin();\r\n    setLoading(false);\r\n    if (response.success) {\r\n      onClose();\r\n      toast({\r\n        position: 'top',\r\n        description: `Account created: ${response.data.name}`,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return await fetchAdmins();\r\n    } else {\r\n      onClose();\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button colorScheme='brown' onClick={onOpen}>\r\n        Thêm\r\n      </Button>\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Tạo tài khoản mới</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Họ và tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Họ và tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateNewAdminDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                placeholder='Email'\r\n                name='email'\r\n                focusBorderColor='brown.500'\r\n                value={email}\r\n                onChange={updateNewAdminDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                placeholder='Password'\r\n                name='password'\r\n                type='password'\r\n                focusBorderColor='brown.500'\r\n                value={password}\r\n                onChange={updateNewAdminDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n              <FormLabel>Loại tài khoản</FormLabel>\r\n              <Select\r\n                name='privilege'\r\n                focusBorderColor='brown.500'\r\n                value={privilege}\r\n                onChange={updateNewAdminDetails}\r\n              >\r\n                <option value='admin'>Admin</option>\r\n                <option value='staff'>Staff</option>\r\n                {/* <option value='user'>user</option> */}\r\n              </Select>\r\n            </FormControl>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateNewAdminModal;\r\n","import { Text } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Text>\r\n          <h1>Something went wrong</h1>\r\n        </Text>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Th,\r\n  Tr,\r\n  Td,\r\n  Text,\r\n  Button,\r\n  // Box,\r\n  SimpleGrid,\r\n  // Tag,\r\n} from '@chakra-ui/react';\r\n\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\n// import { Stars } from '.';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n// import cmt_url from '../utils/constants';\r\nimport {\r\n    cmt_url,\r\n    deletecmt_url\r\n  \r\n  } from '../utils/constants';\r\n\r\nfunction PostDetail({ post }) {\r\n\r\n  const {\r\n    _id: id = '',\r\n    name = '',\r\n    title='',\r\n    content='',\r\n    like,\r\n    createdAt,\r\n    status,\r\n \r\n  } = post;\r\n\r\n\r\n  const [suppost, setSuppost] = useState([]);\r\n\r\n\r\n  const getdata =  async() => {\r\n    const response = await axios.get(cmt_url)\r\n  \r\n    setSuppost(response.data.data);\r\n\r\n    console.log(response.data.data);\r\n}\r\n\r\n  \r\n    useEffect(()=>{\r\n     \r\n\r\n  getdata();\r\n      },[]);\r\n\r\n\r\n      const handleDelete = async (id) => {\r\n       \r\n        const response = await axios.delete(deletecmt_url+id);\r\n        getdata();\r\n      \r\n      \r\n      };\r\n  \r\n\r\n  return (\r\n    <VStack alignItems='left' justifyContent='left'>\r\n      <Text fontSize='4xl' as='b'>THÔNG TIN BÀI VIẾT</Text>\r\n       <VStack alignItems='left' justifyContent='left'>\r\n      <HStack><Text as='b'>Tên người đăng: </Text><Text>{name}</Text></HStack>\r\n     <HStack> <Text as='b'>Tiêu đề: </Text><Text>{title}</Text></HStack>\r\n     <HStack> <Text as='b'>Số like: </Text><Text>{like}</Text></HStack>\r\n     <HStack><Text as='b'>Ngày đăng: </Text><Text>{new Intl.DateTimeFormat('vn-VN', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit'}).format(createdAt)}</Text></HStack>\r\n     <HStack><Text as='b'>Trạng thái: </Text><Text>{status}</Text></HStack>\r\n     <HStack> <Text as='b'>Nội dung: </Text><Text>{content}</Text></HStack>\r\n   \r\n     </VStack>\r\n     <VStack></VStack>\r\n     <Text fontSize='2xl' as='b'>Bảng thống kê các bình luận</Text>\r\n     <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n     <Table variant='simple'>\r\n     \r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Tên nguời bình luận</Th>\r\n              <Th>Thời gian</Th>\r\n              <Th>Bình luận</Th>\r\n              <Th>Hành động</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {suppost.sort((a, b) =>new Date(a.time).getTime()-new Date(b.time).getTime()).filter(i=>id.includes(i.idPost)).map((sup, index) => {\r\n              const {  name, comment,createdAt,id } =\r\n              sup;\r\n                // console.log(staffList.map(index=>index))\r\n                // console.log(id)\r\n               \r\n              return (\r\n                 \r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                <Td>{name}</Td>\r\n                \r\n                <Td>{moment(Date(createdAt)).format('MM:HHA DD/MM/YYYY')}</Td>\r\n                <Td>{comment}</Td>\r\n                <Td>\r\n                <Button\r\n                        variant='outline'\r\n                        colorScheme='red'\r\n                        onClick={() => handleDelete(id)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                      </Td>\r\n                </Tr>\r\n              );\r\n             \r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n        </SimpleGrid>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Th,\r\n  Tr,\r\n  Td,\r\n  Text,\r\n  // Box,\r\n  SimpleGrid,\r\n  // Tag,\r\n} from '@chakra-ui/react';\r\n// import { formatPrice } from '../utils/helpers';\r\n// import { useAdminContext } from '../context/admin_context';\r\n// import { useStaffContext } from '../context/staff_context';\r\n// import { bloodDonates_url } from '../utils/constants';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\n// import { Stars } from '.';\r\nimport moment from 'moment';\r\n// import axios from 'axios';\r\n\r\nfunction StaffDetail({ staff }) {\r\n  // const { admins } = useAdminContext();\r\n\r\n  // const { single_staff_loading: loading } = useStaffContext();\r\n  // const [createdBy, setCreatedBy] = useState('');\r\n  // const [unitSold, setUnitSold] = useState(0);\r\n  const {\r\n    _id: id = '',\r\n    name = '',\r\n    countryID='',\r\n    address='',\r\n    phone,\r\n    from,\r\n    type,\r\n    suppostTime,\r\n  } = staff;\r\n\r\n  const {\r\n    bloodDonates,\r\n    // bloodDonates_loading: loading,\r\n    // bloodDonates_error: error,\r\n    // fetchBloodDonates,\r\n  } = useBloodDonateContext();\r\n\r\n  const [suppost, setSuppost] = useState([]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n      const getdata =  () => {\r\n   \r\n        setSuppost(bloodDonates.filter(index=> index.staffList.includes(id)));\r\n\r\n    console.log(suppost);\r\n  }\r\n\r\n      \r\n\r\n  getdata();\r\n      },[]);\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <VStack alignItems='left' justifyContent='left'>\r\n      <Text fontSize='4xl' as='b'>THÔNG TIN NHÂN VIÊN</Text>\r\n       <VStack alignItems='left' justifyContent='left'>\r\n      <HStack><Text as='b'>CMND/CCCD: </Text><Text>{countryID}</Text></HStack>\r\n     <HStack> <Text as='b'>Họ và tên: </Text><Text>{name}</Text></HStack>\r\n     <HStack> <Text as='b'>Địa chỉ: </Text><Text>{address}</Text></HStack>\r\n     <HStack><Text as='b'>Số điện thoại: </Text><Text>{phone}</Text></HStack>\r\n     <HStack><Text as='b'>Đơn vị: </Text><Text>{from}</Text></HStack>\r\n     <HStack> <Text as='b'>Loại nhân viên: </Text><Text>{type}</Text></HStack>\r\n     <HStack>  <Text as='b'>Số lần hỗ trợ: </Text><Text>{suppostTime}</Text></HStack>\r\n     </VStack>\r\n     <VStack></VStack>\r\n     <Text fontSize='2xl' as='b'>Bảng thống kê các lần hỗ trợ</Text>\r\n     <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n     <Table variant='simple'>\r\n     \r\n          <Thead>\r\n            <Tr>\r\n            <Th>Lần hỗ trợ</Th>\r\n              <Th>Tên buổi hiến</Th>\r\n              <Th>Thời gian</Th>\r\n              <Th>Địa điểm</Th>\r\n\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {suppost.sort((a, b) =>new Date(a.time).getTime()-new Date(b.time).getTime()).map((sup, index) => {\r\n              const {  name, time,timeF, address,staffList } =\r\n              sup;\r\n                // console.log(staffList.map(index=>index))\r\n                // console.log(id)\r\n               \r\n              return (\r\n                 \r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                <Td>{name}</Td>\r\n                <Td>{time.substr(10,5)+'-'+timeF.substr(10,5)}\r\n                  <br/>{moment(timeF.substring(0,10)).format('DD/MM/YYYY')}\r\n                  </Td>\r\n              \r\n                  <Td>{address}</Td>\r\n        \r\n                </Tr>\r\n              );\r\n             \r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n        </SimpleGrid>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default StaffDetail;\r\n","import React, { useState } from 'react';\r\n// import { BiChevronDown } from 'react-icons/bi';\r\nimport { useDonateContext } from '../context/donate_context';\r\n// import { Link } from 'react-router-dom';\r\n// import moment from 'moment';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  // Menu,\r\n  // MenuButton,\r\n  // MenuList,\r\n  // MenuItem,\r\n  SimpleGrid,\r\n\r\n  HStack,\r\n  Spinner,\r\n\r\n  useToast,\r\n} from '@chakra-ui/react';\r\n// import UpdateDonateModal from './UpdateDonateModal';\r\n// import UpdateStatusDonateModal from './UpdateStatusDonateModal'\r\n// import { formatPrice } from '../utils/helpers';\r\nimport { useInforContext } from '../context/infor_context';\r\nfunction DonateDetail({ donates, id }) {\r\n  const toast = useToast();\r\n  const { fetchDonates, deleteDonate } = useDonateContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const [donateTime, setDonateTime] = useState('');\r\n  const donateID = id; \r\n  // console.log(id);\r\n  const {\r\n    // infors,\r\n    // fetchSingleInfor,\r\n    updateInfor,\r\n    // updateNewInforDetails\r\n  } = useInforContext();\r\n\r\n  const handleDelete = async (id,iduser) => {\r\n    setLoading(true);\r\n    const response = await deleteDonate(id);\r\n    setLoading(false);\r\n    if (response.success) {\r\n    \r\n      const time = donateTime-1;\r\n      const infor = {\r\n        status:'Có thể hiến',\r\n        donateTime: time,\r\n        \r\n    };\r\n  \r\n    const updatetime = await updateInfor(iduser, infor);\r\n      toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return await fetchDonates();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: response.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Tên người hiến</Th>\r\n              <Th>Lượng máu hiến</Th>\r\n              <Th>Nhóm máu</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {donates.filter(index=> index.idBD.includes(donateID)).map((donate, index) => {\r\n              const {  name,id,typeBlood ,amount,iduser,idBD} =\r\n                donate;\r\n        if(donateID===idBD){\r\n              return (\r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                <Td>{name}</Td>\r\n                <Td>{amount}ml</Td>\r\n    \r\n                  <Td>{typeBlood}</Td>\r\n                  <Td>\r\n                  <Button\r\n                        variant='outline'\r\n                        colorScheme='red'\r\n                        onClick={() => handleDelete(id,iduser)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                  </Td>\r\n                </Tr>\r\n              );}\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default DonateDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Th,\r\n  Tr,\r\n  Td,\r\n  Text,\r\n  // Box,\r\n  SimpleGrid,\r\n  // Tag,\r\n} from '@chakra-ui/react';\r\n// import { formatPrice } from '../utils/helpers';\r\nimport { useAdminContext } from '../context/admin_context';\r\nimport { useDonateContext } from '../context/donate_context';\r\n// import { donates_url } from '../utils/constants';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\n// import { Stars } from '.';\r\nimport moment from 'moment';\r\n// import axios from 'axios';\r\n\r\nfunction BookingDetail({ bookings,infor,iduser }) {\r\n  // const { admins } = useAdminContext();\r\n\r\n  // const { single_infor_loading: loading } = useinforContext();\r\n  // const [createdBy, setCreatedBy] = useState('');\r\n  // const [unitSold, setUnitSold] = useState(0);\r\n  const {\r\n    _id: id = '',\r\n    name = '',\r\n    countryID='',\r\n    address='',\r\n    phone,\r\n    email,\r\n    typeBlood,\r\n    status,\r\n    lastDonate,\r\n    // lastDonate,\r\n    donateTime,\r\n  } = infor;\r\n\r\n\r\nconsole.log(id);\r\n console.log(bookings.filter(i=>id.includes(i.iduser)).map(i=>i))\r\n\r\n    //   const idU = id;\r\n\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n    <VStack alignItems='left' justifyContent='left'>\r\n    \r\n      <HStack spacing='300px'>  \r\n       <VStack alignItems='left' justifyContent='left'>\r\n       <Text fontSize='4xl' as='b'>THÔNG TIN NGƯỜI HIẾN</Text>\r\n      <HStack><Text as='b'>CMND/CCCD: </Text><Text>{countryID}</Text></HStack>\r\n     <HStack> <Text as='b'>Họ và tên: </Text><Text>{name}</Text></HStack>\r\n     <HStack> <Text as='b'>Địa chỉ: </Text><Text>{address}</Text></HStack>\r\n     <HStack><Text as='b'>Số điện thoại: </Text><Text>{phone}</Text></HStack>\r\n     <HStack><Text as='b'>Email: </Text><Text>{email}</Text></HStack>\r\n     <HStack> <Text as='b'>Nhóm máu: </Text><Text>{typeBlood}</Text></HStack>\r\n     <HStack>  <Text as='b'>Số lần hiến: </Text><Text>{donateTime}</Text></HStack>\r\n     <HStack>  <Text as='b'>Ngày hiến cuối cùng: </Text><Text>{moment(lastDonate).format(\"D/M/YYYY\")}</Text></HStack>\r\n     <HStack>  <Text as='b'>Trạng thái: </Text><Text>{status}</Text></HStack>\r\n     </VStack>\r\n     <VStack alignItems='center' justifyContent='center'>\r\n\r\n     <Text fontSize='2xl' as='b'>Bảng thông tin đăng ký</Text>\r\n     <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n     <Table variant='simple'>\r\n          {/* <Thead>\r\n            <Tr>\r\n            <Th>Chiều cao</Th>\r\n              <Th>Cân nặng</Th>\r\n              <Th>Trong 24h có uống rượu không</Th>\r\n              <Th>Địa điểm</Th>\r\n              <Th>Số máu đã hiến</Th>\r\n            </Tr>\r\n          </Thead> */}\r\n          <Tbody>\r\n            \r\n              {bookings.filter(i=>id.includes(i.iduser)).sort((a, b) =>new Date(a.time).getTime()-new Date(b.time).getTime()).sort((a, b) =>new Date(a.time).getTime()-new Date(b.time).getTime()).map((bloodDonate, index) => {\r\n                const {  heigh,weight,sex, isAcohol,createdAt, isNicotine,id,isHeartDisease,isSitUp, isSick,isAllergies} =\r\n                bloodDonate;\r\n              \r\n              return (\r\n                 <>\r\n                <Tr key={index}>\r\n             \r\n                   <Td>Chiều cao</Td> \r\n                <Td>{heigh} cm</Td>\r\n       \r\n                </Tr>\r\n                <Tr key={index}>\r\n             \r\n                <Td>Cân năng</Td> \r\n             <Td>{weight} kg</Td>\r\n    \r\n             </Tr>\r\n\r\n             <Tr key={index}>\r\n             \r\n             <Td>Giới tính</Td> \r\n          <Td>{sex}</Td>\r\n \r\n          </Tr>\r\n             <Tr key={index}>\r\n             \r\n             <Td>Trong 24 giờ qua có sử dụng rượu bia không</Td> \r\n          <Td>{isAcohol}</Td>\r\n \r\n          </Tr>\r\n          <Tr key={index}>\r\n             \r\n             <Td>Trong 24 giờ qua có sử dụng thuốc lá không</Td> \r\n          <Td>{isNicotine}</Td>\r\n \r\n          </Tr>\r\n          <Tr key={index}>\r\n             \r\n             <Td>Có thức khuya những này trước không</Td> \r\n          <Td>{isSitUp}</Td>\r\n \r\n          </Tr>\r\n          <Tr key={index}>\r\n             \r\n             <Td>Có tiền sử mắc các bệnh tim mạch không</Td> \r\n          <Td>{isHeartDisease}</Td>\r\n \r\n          </Tr>\r\n          <Tr key={index}>\r\n             \r\n             <Td>Trong tuần qua có mắc bệnh phải dùng thuốc không</Td> \r\n          <Td>{isSick}</Td>\r\n \r\n          </Tr>\r\n          <Tr key={index}>\r\n             \r\n             <Td>Có dị ứng với thuốc nào không</Td> \r\n          <Td>{isAllergies}</Td>\r\n \r\n          </Tr>\r\n             </>\r\n              );\r\n           \r\n               })}\r\n              \r\n          </Tbody>\r\n        </Table>\r\n        </SimpleGrid>\r\n        </VStack>\r\n        </HStack>\r\n   \r\n     \r\n    </VStack>\r\n      </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default BookingDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Th,\r\n  Tr,\r\n  Td,\r\n  Text,\r\n  Spinner,\r\n  // Box,\r\n//   toast,\r\nuseToast,\r\n  SimpleGrid,\r\n  Button\r\n  // Tag,\r\n} from '@chakra-ui/react';\r\n// import { formatPrice } from '../utils/helpers';\r\n// import { useAdminContext } from '../context/admin_context';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\nimport { staffs_url } from '../utils/constants';\r\nimport { useStaffContext } from '../context/staff_context';\r\nimport { useDonateContext } from '../context/donate_context';\r\nimport { bloodDonates_url } from '../utils/constants';\r\n// import { Stars } from '.';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport { browserHistory } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useInforContext } from '../context/infor_context';\r\n\r\nfunction BloodDonateDetail({ bloodDonate }) {\r\n  // const { admins } = useAdminContext();\r\nconst toast =useToast();\r\nconst [loading, setIsLoaded] = useState(false);\r\n  // const { single_bloodDonate_loading: loading } = usebloodDonateContext();\r\n  // const [createdBy, setCreatedBy] = useState('');\r\n  // const [unitSold, setUnitSold] = useState(0);\r\n  const {\r\n    _id: id = '',\r\n    name = '',\r\n    time='',\r\n    address='',\r\n    target,\r\n    receive,\r\n    timeF='',\r\n    staffList,\r\n    status,\r\n    A,O,B,AB\r\n  } = bloodDonate;\r\n  const idBD =id;\r\n  const {\r\n    staffs,\r\n    // bloodDonates_loading: loading,\r\n    // bloodDonates_error: error,\r\n    fetchStaffs,\r\n    updateStaff\r\n  } = useStaffContext();\r\n\r\n  const {\r\n    donates,\r\n   \r\n  } = useDonateContext();\r\n  const {\r\n    bloodDonates,\r\n    // bloodDonates_loading: loading,\r\n    // bloodDonates_error: error,\r\n    fetchBloodDonates,\r\n    updateBloodDonate\r\n  } = useBloodDonateContext();\r\n\r\n  const {\r\n    infors,\r\n\r\n    fetchInfors,\r\n  } = useInforContext();\r\n  // console.log(bloodDonates);\r\n \r\n  const [suppost, setSuppost] = useState([]);\r\n  const [supID, setSupID] = useState([]);\r\n\r\n  const [donate, setDonate] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n      const getdata =  () => {\r\n        donate.push(bloodDonates.filter(index=> index.id.includes(id)).map(index=>index.staffList));\r\n        // donate.foreach(index=>index.idBD)\r\n    \r\n        setData(staffs.filter(index=>  donate[0][0].includes(index.id)).map(index=>index));\r\n  }     \r\n\r\n      const getSup=()=>{\r\n        supID.push(donates.filter(index=> index.idBD.includes(id)).map(index=>index.iduser));\r\n        // donate.foreach(index=>index.idBD)\r\n       \r\n        setSuppost((infors.filter(index=>  supID[0].includes(index.id))));\r\n      \r\n      }\r\n      \r\n      // console.log(infors)\r\n\r\n  getdata();\r\n  getSup();\r\n      },[]);\r\n      console.log(suppost)\r\n    \r\n      const getAmount=(idU)=>{\r\n        return donates.filter(index=> index.iduser.includes(idU)).filter(index=> index.idBD.includes(id)).map(index=>index.amount);\r\n        // supID.push(donates.filter(index=> index.idBD.includes(id)).map(index=>index.iduser));\r\n        // // donate.foreach(index=>index.idBD)\r\n       \r\n        // setSuppost((infors.filter(index=>  supID[0].includes(index.id))));\r\n      \r\n      }\r\n      \r\n      // console.log(infors)\r\n\r\n    \r\n  // getSup();\r\n  return (\r\n    \r\n   \r\n     <HStack alignItems='left' justifyContent='left'> \r\n    \r\n        <VStack  alignItems='left' justifyContent='left' >\r\n      <Text fontSize='4xl' as='b'>THÔNG TIN BUỔI HIẾN MÁU</Text>\r\n       {/* <VStack alignItems='left' justifyContent='left'> */}\r\n      <HStack><Text as='b'>Tên buổi hiến: </Text><Text>{name}</Text></HStack>\r\n     <HStack> <Text as='b'>Thời gian: </Text><Text>{time.substr(10,5)+'-'+timeF.substr(10,5)+'  '+moment(timeF.substring(0,10)).format('DD/MM/YYYY')}</Text></HStack>\r\n     <HStack> <Text as='b'>Địa điểm: </Text><Text>{address}</Text></HStack>\r\n     <HStack><Text as='b'>Mục tiêu: </Text><Text>{target}</Text></HStack>\r\n     <HStack><Text as='b'>Thu được: </Text><Text>{receive}</Text></HStack>\r\n     <HStack>  <Text as='b'>Trạng thái: </Text><Text>{status}</Text></HStack>\r\n     <HStack spacing='300px' >     <VStack  alignItems='left' justifyContent='left' ><Text as='b'>Chi tiết: </Text>\r\n     <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n     <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>O</Th>\r\n              <Th>A</Th>\r\n              <Th>AB</Th>\r\n              <Th>B</Th>\r\n             \r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n         \r\n                <Tr>\r\n                   <Td>{O}ml</Td>\r\n                <Td>{A}ml</Td>\r\n                  <Td>{AB}ml</Td>\r\n                  <Td>{B}ml</Td>\r\n                \r\n                </Tr>\r\n         \r\n          </Tbody>\r\n        </Table>\r\n        </SimpleGrid>\r\n        </VStack> \r\n       \r\n        </HStack>\r\n        <HStack spacing='100px'>\r\n        <VStack  alignItems='left' justifyContent='left' >\r\n        <Text as='b'>Bảng nhân viên hỗ trợ: </Text>\r\n     <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n     {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n     <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>Họ và tên</Th>\r\n              <Th>SĐT</Th>\r\n              <Th>Loại nhân viên</Th>\r\n             \r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {data.map((sup, index) => {\r\n              const {  name, phone, type,id } =\r\n              sup;\r\n                // console.log(staffList.map(index=>index))\r\n                // console.log(id)\r\n               \r\n              return (\r\n                 \r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                <Td>{name}</Td>\r\n                  <Td>{phone}</Td>\r\n                  <Td>{type}</Td>\r\n                  {/* <Td> <Button\r\n                        variant='outline'\r\n                        colorScheme='red'\r\n                        onClick={() => handleDelete(id)}\r\n                      >\r\n                        Delete\r\n                      </Button></Td> */}\r\n                \r\n                </Tr>\r\n              );\r\n             \r\n            })}\r\n          </Tbody>\r\n        </Table>)}\r\n        </SimpleGrid>\r\n        </VStack>\r\n\r\n        <VStack  alignItems='left' justifyContent='left' >\r\n        <Text as='b'>Bảng những người hiến máu: </Text>\r\n     <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n     {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n     <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>CMND/CCCD</Th>\r\n              <Th>Họ và tên</Th>\r\n              <Th>Nhóm máu</Th>\r\n              <Th>Số lượng hiến</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {suppost.map((sup, index) => {\r\n              const {  name, typeBlood, countryID,id } =\r\n              sup;\r\n                // console.log(staffList.map(index=>index))\r\n                // console.log(id)\r\n               \r\n              return (\r\n                 \r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                <Td>{countryID}</Td>\r\n                  <Td>{name}</Td>\r\n                  <Td>{typeBlood}</Td>\r\n                  <Td>{getAmount(id)}</Td>\r\n                  {/* <Td> <Button\r\n                        variant='outline'\r\n                        colorScheme='red'\r\n                        onClick={() => handleDelete(id)}\r\n                      >\r\n                        Delete\r\n                      </Button></Td> */}\r\n                \r\n                </Tr>\r\n              );\r\n             \r\n            })}\r\n          </Tbody>\r\n        </Table>)}\r\n        </SimpleGrid>\r\n        \r\n        </VStack>\r\n        </HStack>\r\n     </VStack>\r\n     \r\n        </HStack>\r\n \r\n  );\r\n}\r\n\r\nexport default BloodDonateDetail;\r\n","import React from 'react';\r\n// import logo from '../assets/logo.svg';\r\nimport {  Progress, VStack, Text, HStack } from '@chakra-ui/react';\r\n\r\nfunction PreLoader() {\r\n  return (\r\n    <VStack\r\n      w='100%'\r\n      h='100vh'\r\n      spacing='4'\r\n      justifyContent='center'\r\n      alignItems='center'\r\n    >\r\n      {/* <Image src={logo} width='150px' /> */}\r\n      <Progress size='xs' w='40%' colorScheme='brown' isIndeterminate />\r\n      <HStack>\r\n        <Text fontWeight='300' color='gray.400'>\r\n       \r\n        </Text>\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default PreLoader;\r\n","import React ,{useState, useEffect}from \"react\";\r\nimport { SidebarWithHeader, DashboardCards } from '../components';\r\nimport Chart from 'react-apexcharts';\r\n// things I would never do:\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport { bloodStorages_url } from \"../utils/constants\";\r\nimport axios from \"axios\";\r\n// import moment from \"moment\";\r\nimport { useUserContext } from '../context/user_context';\r\nimport { useBloodStorageContext } from \"../context/bloodStorage_context\";\r\nimport { useBloodDonateContext } from \"../context/bloodDonate_context\";\r\nimport { HStack,Text,VStack } from '@chakra-ui/react';\r\nimport DonateTable from '../components/DonateTable';\r\n// import { MdOutlineRefresh } from 'react-icons/md';\r\n\r\n  \r\n\r\nexport default function Dashboard() {\r\n  const [bloodO, setBLoodO]= useState([]);\r\n  const [bloodA, setBLoodA]= useState([]);\r\n  const [bloodB, setBLoodB]= useState([]);\r\n  const [bloodAB, setBLoodAB]= useState([]);\r\n  const [data, setData]= useState([]);\r\n  const [name, setName]= useState([]);\r\n \r\n \r\n  const [A, setA]= useState([]);\r\n  const [B, setB]= useState([]);\r\n  const [AB, setAB]= useState([]);\r\n  const [O, setO]= useState([]);\r\n  // 0,BBLood: 0,OBLood: 0,ABBLood: 0\r\n  // const [accountList, setAccountlist] = useState({total:''});\r\n\r\n//  const blood=[];\r\nconst {\r\n  bloodStorages,\r\n\r\n  fetchBloodStorages,\r\n} = useBloodStorageContext();\r\n// const name =[]\r\nconst {\r\n  bloodDonates,\r\n  bloodDonates_loading: loading,\r\n  bloodDonates_error: error,\r\n  fetchBloodDonates,\r\n} = useBloodDonateContext();\r\n\r\n\r\n\r\n// const handleRefresh = async () => {\r\n//   // await fetchBloodDonates();\r\n// };\r\n\r\n\r\nconst [data2, setData2] = useState([]);\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    const getdata2 =  () => {\r\n \r\n      setData2(bloodDonates.filter(index=> index.status.includes('Chưa thực hiện')));\r\n\r\n  console.log(data);\r\n}\r\n\r\n    \r\n\r\ngetdata2();\r\n    },[]);\r\n\r\n   const getdata= async()=>{     \r\n\r\n        const response = await axios.get(bloodStorages_url+'/getBlood');\r\n       let ABLood =response.data.ABLood;\r\n       let BBLood= response.data.BBLood;\r\n       let OBLood =response.data.BBLood;\r\n       let ABBLood =response.data.ABBLood;\r\n      setBLoodA(ABLood);\r\n      setBLoodO(OBLood);\r\n      setBLoodAB(ABBLood);\r\n      setBLoodB(BBLood);\r\n      // bloodDonates.sort((a, b) =>new Date(b.time).getTime()-new Date(a.time).getTime()).slice(0, 4).map(o => o);\r\n     \r\n    }\r\n   getdata();\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n      const getdataChart =  () => {\r\n       \r\n        data.push(bloodDonates.filter(o => o.status.includes('Đã thực hiện')).sort((a, b) =>new Date(b.createdAt).getTime()-new Date(a.createdAt).getTime()).slice(0, 3).map(index=>index));\r\n        \r\n     \r\n        data[0].forEach(index=> name.push(index.name));\r\n        data[0].forEach(index=> A.push(index.A));\r\n        data[0].forEach(index=> O.push(index.O));\r\n        data[0].forEach(index=> AB.push(index.AB));\r\n        data[0].forEach(index=> B.push(index.B));\r\n    // setA(A);\r\n    // setAB(AB);\r\n    // console.log(bloodDonates.filter(o => o.status.includes('Đã thực hiện')).sort((a, b) =>new Date(b.time).getTime()-new Date(a.time).getTime()).slice(0, 4))\r\n  }\r\n\r\n      \r\n\r\n      getdataChart();\r\n      },[]);\r\n      const { currentUser } = useUserContext();\r\n      if(currentUser.privilege==='staff'){\r\n        return (\r\n          <SidebarWithHeader>\r\n            <HStack mb={5}>\r\n             \r\n            </HStack>\r\n          \r\n            <DonateTable bloodDonates={data2} />\r\n          </SidebarWithHeader>\r\n        );\r\n      }\r\n      \r\n      else\r\n   return (\r\n    <SidebarWithHeader>\r\n      <DashboardCards />\r\n     \r\n      <Flex\r\n          \r\n            shadow='lg'\r\n            bg='white'\r\n            p='5'\r\n            borderRadius='lg'\r\n            justifyContent='center'\r\n          >\r\n            <VStack>\r\n             <Text fontSize='lg' fontWeight='bold'>Biểu đồ máu nhận 3 lần hiến máu gần nhất</Text>\r\n            <Chart \r\n            type=\"bar\"\r\n            width={600}\r\n            height={ 400}\r\n            series={[{\r\n              name: 'O',\r\n              data:O\r\n            }, {\r\n              name: 'A',\r\n              data: A\r\n            }, {\r\n              name: 'B',\r\n              data: B\r\n            },\r\n            {\r\n              name: 'AB',\r\n              data: AB\r\n            },]}\r\n\r\n            options={{\r\n             labels:name,\r\n            //  title:{\r\n            //     text:\"Biểu đồ máu nhận 4 lần hiến máu gần nhất\",\r\n            //    // align:\"center\",\r\n            //  },\r\n\r\n             plotOptions: {\r\n              bar: {\r\n                horizontal: false,\r\n                columnWidth: '55%',\r\n                endingShape: 'rounded'\r\n              },\r\n            },\r\n\r\n            \r\n\r\n             dataLabels:{\r\n                enabled:false,\r\n                \r\n             },\r\n             stroke: {\r\n              show: true,\r\n              width: 2,\r\n              colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n              categories: [],\r\n            },\r\n            yaxis: {\r\n              title: {\r\n                text: 'ML'\r\n              }\r\n            },\r\n            fill: {\r\n              opacity: 1\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: function (val) {\r\n                  return val + \" ml\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n            }\r\n            \r\n            />\r\n            </VStack>\r\n            <VStack >\r\n             <Text fontSize='lg' fontWeight='bold'>Biểu đồ máu còn lại theo nhóm</Text>\r\n             <Chart \r\n            type=\"donut\"\r\n            width={600}\r\n            height={ 400}\r\n            series={[bloodO,bloodA,bloodB,bloodAB]}\r\n            options={{\r\n             labels:['O','A','B','AB'],\r\n             title:{\r\n              // text:\"Biểu đồ máu còn lại theo nhóm\",\r\n               // align:\"center\",\r\n             },\r\n\r\n             plotOptions:{\r\n             pie:{\r\n                donut:{\r\n                    labels:{\r\n                        show:true,\r\n                        total:{\r\n                            show:true,\r\n                            showAlways:true,\r\n                            //  formatter: () => this+ 'đơn vị',\r\n                            fontSize:30,\r\n                            color: '#f90000',\r\n                        }\r\n                    }\r\n                }\r\n             }\r\n\r\n             },\r\n\r\n             dataLabels:{\r\n                enabled:true,\r\n             }\r\n\r\n\r\n            }}\r\n            \r\n            />\r\n              </VStack>\r\n</Flex>\r\n        \r\n     \r\n    </SidebarWithHeader>\r\n    \r\n  );\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nfunction useMounted() {\r\n  const mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    mounted.current = true;\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return mounted;\r\n}\r\n\r\nexport default useMounted;\r\n","import React, { useState } from 'react';\r\nimport { useUserContext } from '../context/user_context';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { PreLoader } from '../components';\r\nimport useMounted from '../hooks/useMounted';\r\nimport logo from '../assets/logo.svg';\r\nimport icon from '../assets/icon.jpg'\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Image,\r\n} from '@chakra-ui/react';\r\n\r\nexport default function LoginPage() {\r\n  const { login, authLoading } = useUserContext();\r\n  const toast = useToast();\r\n  const mounted = useMounted();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!email || !password) {\r\n      return toast({\r\n        position: 'top',\r\n        title: 'Invalid Input',\r\n        description: 'Provide all the credentials',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    setLoading(true);\r\n    const response = await login(email, password);\r\n    if (mounted.current) {\r\n      setLoading(false);\r\n    }\r\n    // if (response.false) {\r\n    //   return toast({\r\n    //     position: 'top',\r\n    //     description: `Logged In as ${response.data.name}`,\r\n    //     status: 'success',\r\n    //     duration: 5000,\r\n    //     isClosable: true,\r\n    //   });\r\n    // } else {\r\n    //   return toast({\r\n    //     position: 'top',\r\n    //     description: response.message,\r\n    //     status: 'error',\r\n    //     duration: 5000,\r\n    //     isClosable: true,\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  if (authLoading) {\r\n    return <PreLoader />;\r\n  }\r\n\r\n  return (\r\n    <Flex minH={'80vh'} align={'center'} justify={'center'} bg={'gray.50'}>\r\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\r\n        <Stack align={'center'}>\r\n       <Image src={icon}alt='logo' w='30%'  /> \r\n          {/* <Image src={logo} alt='logo' w='50%' /> */}\r\n        </Stack>\r\n        <Box bg={'white'} rounded={'lg'} boxShadow={'lg'} p={8}>\r\n          <Stack spacing={4}>\r\n            <FormControl id='email'>\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                type='email'\r\n                placeholder='Enter your email address'\r\n                variant='filled'\r\n                focusBorderColor='brown.500'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl id='password'>\r\n              <FormLabel>Mật khẩu</FormLabel>\r\n              <Input\r\n                type='password'\r\n                placeholder='Enter your password'\r\n                variant='filled'\r\n                focusBorderColor='brown.500'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Stack spacing={10}>\r\n              <Button\r\n                isLoading={loading}\r\n                bg={'brown.400'}\r\n                color={'white'}\r\n                _hover={{\r\n                  bg: 'brown.500',\r\n                }}\r\n                onClick={handleSubmit}\r\n              >\r\n                Đăng nhập\r\n              </Button>\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  SidebarWithHeader,\r\n  AdminsTable,\r\n  CreateNewAdminModal,\r\n} from '../components';\r\nimport { useAdminContext } from '../context/admin_context';\r\nimport { HStack, Button, VStack, Spinner, Heading } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\n\r\nfunction AdminsPage() {\r\n  const {\r\n    admins,\r\n    admins_loading: loading,\r\n    admins_error: error,\r\n    fetchAdmins,\r\n  } = useAdminContext();\r\n\r\n  const handleRefresh = async () => {\r\n    await fetchAdmins();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n             Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n           Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n        <CreateNewAdminModal />\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n      </HStack>\r\n      <AdminsTable admins={admins} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default AdminsPage;\r\n","import React from 'react';\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\nimport { useUserContext } from '../context/user_context';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  const { currentUser } = useUserContext();\r\n  const location = useLocation();\r\n\r\n  if (\r\n    rest.path === '/login' \r\n    // rest.path === '/register' \r\n    // rest.path === '/forgot-password' ||\r\n    // rest.path === '/reset-password'\r\n  ) {\r\n    return currentUser ? (\r\n      <Redirect to={location.state?.from ?? '/'} />\r\n    ) : (\r\n      <Route {...rest}>{children}</Route>\r\n    );\r\n  }\r\n\r\n  \r\n  // if (rest.path === '/') {\r\n  //   console.log(currentUser.privilege)\r\n  //   return currentUser && currentUser.privilege === 'staff' ? (\r\n  //     <Route {...rest}>{children}</Route>\r\n  //   ) : (\r\n  //     <Redirect to={location.state?.from ?? '/infors'} />\r\n  //   );\r\n  // }\r\n  // if (rest.path === '/') {\r\n  //   return currentUser &&\r\n  //     ['staff'].includes(currentUser.privilege) ? (\r\n  //     <Route {...rest}>{children}</Route>\r\n  //   ) : (\r\n  //     <Redirect to={location.state?.from ?? '/'} />\r\n  //   );\r\n  // }\r\n  \r\n  if (rest.path === '/CashFlows') {\r\n    return currentUser &&\r\n      ['admin'].includes(currentUser.privilege) ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/CashFlows'} />\r\n    );\r\n  }\r\n\r\n  if (rest.path === '/bloodStorages') {\r\n    return currentUser &&\r\n      ['admin'].includes(currentUser.privilege) ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/bloodStorages'} />\r\n    );\r\n  }\r\n\r\n  if (rest.path === '/staffs') {\r\n    return currentUser &&\r\n      ['admin'].includes(currentUser.privilege) ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/staffs'} />\r\n    );\r\n  }\r\n\r\n  if (rest.path === '/posts') {\r\n    return currentUser &&\r\n      ['admin'].includes(currentUser.privilege) ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/posts'} />\r\n    );\r\n  }\r\n  if (rest.path === '/infors') {\r\n   \r\n    return currentUser &&\r\n      ['staff', 'admin'].includes(currentUser.privilege) ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/infors'} />\r\n    );\r\n  }\r\n\r\n  if (rest.path === '/donates') {\r\n    return currentUser &&\r\n      ['staff', 'admin'].includes(currentUser.privilege) ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/donates'} />\r\n    );\r\n  }\r\n  if (rest.path === '/bookings') {\r\n    return currentUser &&\r\n      ['staff', 'admin'].includes(currentUser.privilege) ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/bookings'} />\r\n    );\r\n  }\r\n\r\n  if (rest.path === '/bloodDonates') {\r\n    return currentUser &&\r\n    ['staff', 'admin'].includes(currentUser.privilege) ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/bloodDonates'} />\r\n    );\r\n  }\r\n  \r\n\r\n  if (rest.path === '/accounts') {\r\n    return currentUser && currentUser.privilege === 'admin' ? (\r\n      <Route {...rest}>{children}</Route>\r\n    ) : (\r\n      <Redirect to={location.state?.from ?? '/accounts'} />\r\n    );\r\n  }\r\n\r\n  return currentUser ? (\r\n    <Route {...rest}>{children}</Route>\r\n  ) : (\r\n    <Redirect\r\n      to={{\r\n        pathname: '/login',\r\n        state: { from: rest.path },\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  Select\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useInforContext } from '../context/infor_context';\r\n\r\n\r\n\r\nfunction CreateNewInforModal({oldDate}) {\r\n  const {\r\n    new_infor: {\r\n        name,\r\n        countryID,\r\n        address,\r\n        email,\r\n        phone,\r\n        // from,\r\n        typeBlood,\r\n        donateTime,\r\n        status,\r\n        // lastDonate\r\n    },\r\n    updateNewInforDetails,\r\n    createNewInfor,\r\n  } = useInforContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n        !name||\r\n        !countryID||\r\n        !address||\r\n        !email||\r\n        !phone||\r\n        // !from||\r\n        !typeBlood||\r\n        !donateTime\r\n        // !status||\r\n        // !lastDonate \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    \r\n    setLoading(true);\r\n    console.log('uploading');\r\n    const infor = {\r\n      name,\r\n      countryID,\r\n      address,\r\n      email,\r\n      phone,\r\n      // from,\r\n      typeBlood,\r\n      donateTime,\r\n      status:'Có thể hiến',\r\n      lastDonate: oldDate\r\n    };\r\n    const responseCreate = await createNewInfor(infor);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      \r\n      onClose();\r\n      window.location.reload(false);\r\n      return toast({\r\n        position: 'top',\r\n        description: 'infor created',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button colorScheme='brown' onClick={onOpen}>\r\n       Thêm\r\n      </Button>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Thêm người hiến mới</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Họ và tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Họ và tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateNewInforDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>CMND/CCCD</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='CMND/CCCD'\r\n                name='countryID'\r\n                focusBorderColor='brown.500'\r\n                value={countryID}\r\n                onChange={updateNewInforDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                placeholder='Email'\r\n                name='email'\r\n                focusBorderColor='brown.500'\r\n                value={email}\r\n                onChange={updateNewInforDetails}\r\n              />\r\n              </FormControl>\r\n            \r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Địa chỉ</FormLabel>\r\n              <Textarea\r\n                placeholder='Địa chỉ'\r\n                name='address'\r\n                focusBorderColor='brown.500'\r\n                value={address}\r\n                onChange={updateNewInforDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n              <FormLabel>SĐT</FormLabel>\r\n              <Input\r\n             \r\n                placeholder='SĐT'\r\n                name='phone'\r\n                focusBorderColor='brown.500'\r\n                value={phone}\r\n                onChange={updateNewInforDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Số lần hiến</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='Số lần hiến'\r\n                name='donateTime'\r\n                focusBorderColor='brown.500'\r\n                value={donateTime}\r\n                onChange={updateNewInforDetails}\r\n              />\r\n            </FormControl>\r\n            \r\n            \r\n            <FormControl mt={4}>\r\n            <FormLabel>Nhóm máu</FormLabel>\r\n              <Select\r\n                name='typeBlood'\r\n                focusBorderColor='brown.500'\r\n                value={typeBlood}\r\n                onChange={updateNewInforDetails}\r\n              >\r\n                <option value=' '> </option>\r\n                <option value='O'>O</option>\r\n                <option value='A'>A</option>\r\n                <option value='B'>B</option>\r\n                <option value='AB'>AB</option>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Creating Infor'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateNewInforModal;\r\n","import React from 'react';\r\nimport {\r\n//   InforsTable,\r\n  SidebarWithHeader,\r\n//   CreateNewInforModal,\r\n} from '../components';\r\nimport InforsTable from '../components/InforTable';\r\n\r\nimport CreateNewInforModal from '../components/CreateNewInforModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\nimport { useInforContext } from '../context/infor_context';\r\nimport { useState ,useEffect} from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\nfunction InforsPage() {\r\n  const {\r\n    infors,\r\n    infors_loading: loading,\r\n    infors_error: error,\r\n    fetchInfors,\r\n  } = useInforContext();\r\n\r\n  const handleRefresh = async () => {\r\n    await fetchInfors();\r\n  };\r\n\r\n  const [inforList, setInforList] = useState([]);\r\n\r\n  function setSearchTerm(e){\r\n    // staffs = staffs.filter(staff => staff.countryID < 60);\r\n    const results = infors.filter(infor => {\r\n      if (e === \"\") return inforList.push(infors.map(i=>i));\r\n      return infor.name.toLowerCase().includes(e.toLowerCase())\r\n      })\r\n      setInforList(results);\r\n    console.log(infors);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSearchTerm(\"\");\r\n \r\n\r\n}, [])\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewInforModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewInforModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n      <Input icon='search'\r\n       placeholder='Nhập tên cần tìm' \r\n      onChange={(event) => {\r\n        setSearchTerm(event.target.value);\r\n      }}\r\n      />\r\n        <CreateNewInforModal />\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n      </HStack>\r\n      <InforsTable infors={infors.filter(i=>inforList.map(i=>i.id).includes(i.id))} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default InforsPage;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  Select\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useStaffContext } from '../context/staff_context';\r\n\r\n\r\n\r\nfunction CreateNewStaffModal() {\r\n  const {\r\n    new_staff: {\r\n      name,\r\n      countryID,\r\n      address,\r\n      phone,\r\n      suppostTime,\r\n      type,\r\n      from\r\n    },\r\n    updateNewStaffDetails,\r\n    createNewStaff,\r\n  } = useStaffContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !name ||\r\n      !phone||\r\n      !countryID ||\r\n      !address ||\r\n      !type ||\r\n      !suppostTime ||\r\n      !from\r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    \r\n    setLoading(true);\r\n    console.log('uploading');\r\n    const staff = {\r\n      name,\r\n      phone,\r\n      countryID,\r\n      address,\r\n      suppostTime,\r\n      type,\r\n      from\r\n    };\r\n    const responseCreate = await createNewStaff(staff);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      window.location.reload(false);\r\n      return toast({\r\n        position: 'top',\r\n        description: 'staff created',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button colorScheme='brown' onClick={onOpen}>\r\n       Thêm\r\n      </Button>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Thêm nhân viên mới</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Họ và tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Họ và tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateNewStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>CMND/CCCD</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='CMND/CCCD'\r\n                name='countryID'\r\n                focusBorderColor='brown.500'\r\n                value={countryID}\r\n                onChange={updateNewStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>SĐT</FormLabel>\r\n              <Input\r\n             \r\n                placeholder='SĐT'\r\n                name='phone'\r\n                focusBorderColor='brown.500'\r\n                value={phone}\r\n                onChange={updateNewStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Địa chỉ</FormLabel>\r\n              <Textarea\r\n                placeholder='Địa chỉ'\r\n                name='address'\r\n                focusBorderColor='brown.500'\r\n                value={address}\r\n                onChange={updateNewStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Đơn vị</FormLabel>\r\n              <Textarea\r\n                placeholder='Đơn vị'\r\n                name='from'\r\n                focusBorderColor='brown.500'\r\n                value={from}\r\n                onChange={updateNewStaffDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Số lần hỗ trợ</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='Số lần hỗ trợ'\r\n                name='suppostTime'\r\n                focusBorderColor='brown.500'\r\n                value={suppostTime}\r\n                onChange={updateNewStaffDetails}\r\n              />\r\n            </FormControl>\r\n            \r\n            \r\n            <FormControl mt={4}>\r\n            <FormLabel>Loại nhân viên</FormLabel>\r\n              <Select\r\n                name='type'\r\n                focusBorderColor='brown.500'\r\n                value={type}\r\n                onChange={updateNewStaffDetails}\r\n              >\r\n                <option value='Quản Trị Viên'>Quản Trị Viên</option>\r\n                <option value='Bác Sĩ'>Bác Sĩ</option>\r\n                <option value='Nhân Viên Hỗ Trợ'>Nhân Viên Hỗ Trợ</option>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Creating Staff'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateNewStaffModal;\r\n","import React from 'react';\r\nimport {\r\n//   StaffsTable,\r\n  SidebarWithHeader,\r\n//   CreateNewStaffModal,\r\n} from '../components';\r\nimport StaffsTable from '../components/StaffTable';\r\n\r\nimport CreateNewStaffModal from '../components/CreateNewStaffModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\nimport { useStaffContext } from '../context/staff_context';\r\nimport { Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { useState,useEffect } from 'react';\r\n\r\nfunction StaffsPage() {\r\n  const {\r\n    staffs,\r\n    staffs_loading: loading,\r\n    staffs_error: error,\r\n    fetchStaffs,\r\n  } = useStaffContext();\r\n\r\n  const handleRefresh = async () => {\r\n \r\n      setStaffList(staffs);\r\n\r\n    await fetchStaffs();\r\n  };\r\n  const [staffList, setStaffList] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n  \r\n    setSearchTerm(\"\");\r\n \r\n       \r\n      \r\n  }, [])\r\n\r\n  function setSearchTerm(e){\r\n    // staffs = staffs.filter(staff => staff.countryID < 60);\r\n    const results = staffs.filter(staff => {\r\n      if (e === \"\") return  staffList.push(staffs.map(i=>i));\r\n      return staff.name.toLowerCase().includes(e.toLowerCase())\r\n      })\r\n      setStaffList(results);\r\n    // console.log(staffList);\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewStaffModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewStaffModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n      \r\n        <Input icon='search'\r\n       placeholder='Nhập tên cần tìm' \r\n      onChange={(event) => {\r\n        setSearchTerm(event.target.value);\r\n      }}\r\n      />\r\n        <CreateNewStaffModal />\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n      </HStack>\r\n     \r\n      <StaffsTable staffs={staffs.filter(i=>staffList.map(i=>i.id).includes(i.id))} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default StaffsPage;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  Select\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useBloodStorageContext } from '../context/bloodStorage_context';\r\nimport axios from 'axios';\r\nimport { bloodStorages_url } from '../utils/constants';\r\n\r\n\r\nfunction CreateNewBloodStorageModal() {\r\n  const {\r\n    new_bloodStorage: {\r\n      name,\r\n      amount,\r\n      from,\r\n      type,\r\n      date,\r\n      detail,\r\n      A,\r\n      B,\r\n      AB,\r\n      O\r\n    },\r\n    updateNewBloodStorageDetails,\r\n    createNewBloodStorage,\r\n  } = useBloodStorageContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [bloodO, setBLoodO]= useState([]);\r\n  const [bloodA, setBLoodA]= useState([]);\r\n  const [bloodB, setBLoodB]= useState([]);\r\n  const [bloodAB, setBLoodAB]= useState([]);\r\n  const getdata= async()=>{     \r\n\r\n    const response = await axios.get(bloodStorages_url+'/getBlood');\r\n   let ABLood =response.data.ABLood;\r\n   let BBLood= response.data.BBLood;\r\n   let OBLood =response.data.BBLood;\r\n   let ABBLood =response.data.ABBLood;\r\n  setBLoodA(ABLood);\r\n  setBLoodO(OBLood);\r\n  setBLoodAB(ABBLood);\r\n  setBLoodB(BBLood);\r\n  // bloodDonates.sort((a, b) =>new Date(b.time).getTime()-new Date(a.time).getTime()).slice(0, 4).map(o => o);\r\n console.log(bloodA);\r\n}\r\ngetdata();\r\n\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !name ||\r\n      // !amount ||\r\n      !from ||\r\n      !type ||\r\n      !date||\r\n      !detail \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    if (\r\n      type == 'Cho' &&\r\n      bloodA < A \r\n    \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Chỉ còn lại '+ bloodA +'ml máu A',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    if (\r\n      type == 'Cho' &&\r\n      bloodB < B \r\n    \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Chỉ còn lại '+ bloodB +'ml máu B',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    if (\r\n      type == 'Cho' &&\r\n      bloodAB < AB \r\n    \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Chỉ còn lại '+ bloodAB +'ml máu AB',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    if (\r\n      type == 'Cho' &&\r\n      bloodO < O \r\n    \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Chỉ còn lại '+ bloodO +'ml máu O',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    \r\n    setLoading(true);\r\n    console.log('uploading');\r\n    const bloodStorage = {\r\n        name,\r\n        amount: 250/(A+B+O+AB),\r\n        from,\r\n        type,\r\n        date,  \r\n        A,\r\n        B,\r\n        AB,\r\n        O,\r\n        detail\r\n    };\r\n    const responseCreate = await createNewBloodStorage(bloodStorage);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      window.location.reload(false);\r\n      return toast({\r\n        position: 'top',\r\n        description: 'bloodstorage created',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button colorScheme='brown' onClick={onOpen}>\r\n       Thêm\r\n      </Button>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Thêm</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateNewBloodStorageDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            {/* <FormControl mt={4}>\r\n              <FormLabel>Số lượng</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='Số lượng'\r\n                name='amount'\r\n                focusBorderColor='brown.500'\r\n                value={amount}\r\n                onChange={updateNewBloodStorageDetails}\r\n              />\r\n            </FormControl> */}\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Từ/Đến</FormLabel>\r\n              <Input\r\n               \r\n                placeholder=''\r\n                name='from'\r\n                focusBorderColor='brown.500'\r\n                value={from}\r\n                onChange={updateNewBloodStorageDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Mô tả</FormLabel>\r\n              <Textarea\r\n                placeholder='Mô tả'\r\n                name='detail'\r\n                focusBorderColor='brown.500'\r\n                value={detail}\r\n                onChange={updateNewBloodStorageDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Ngày thực hiện</FormLabel>\r\n              <Input\r\n                type='date'\r\n                placeholder='Ngày thực hiện'\r\n                name='date'\r\n                focusBorderColor='brown.500'\r\n                value={date}\r\n                onChange={updateNewBloodStorageDetails}\r\n              />\r\n            </FormControl>\r\n            <FormControl mt={4}>\r\n            <FormLabel>Chọn máu</FormLabel>\r\n            Máu O:\r\n              <Input\r\n             \r\n                // placeholder='Máu O'\r\n                name='O'\r\n                focusBorderColor='brown.500'\r\n                // value={O}\r\n                onChange={updateNewBloodStorageDetails}\r\n              />\r\n              Máu A:\r\n              <Input\r\n             \r\n            //  placeholder='Máu A'\r\n             name='A'\r\n             focusBorderColor='brown.500'\r\n             // value={O}\r\n             onChange={updateNewBloodStorageDetails}\r\n           />\r\n           Máu AB:\r\n           <Input\r\n             \r\n            //  placeholder='Máu AB'\r\n             name='AB'\r\n             focusBorderColor='brown.500'\r\n             // value={O}\r\n             onChange={updateNewBloodStorageDetails}\r\n           />\r\n           Máu B:\r\n           <Input\r\n             \r\n            //  placeholder='Máu B'\r\n             name='B'\r\n             focusBorderColor='brown.500'\r\n             // value={O}\r\n             onChange={updateNewBloodStorageDetails}\r\n           />\r\n            </FormControl>\r\n            \r\n            \r\n            <FormControl mt={4}>\r\n            <FormLabel>Loại</FormLabel>\r\n              <Select\r\n                name='type'\r\n                focusBorderColor='brown.500'\r\n                value={type}\r\n                onChange={updateNewBloodStorageDetails}\r\n              >\r\n                <option value='Nhận'>Nhận</option>\r\n                <option value='Cho'>Cho</option>\r\n              \r\n              </Select>\r\n            </FormControl>\r\n\r\n            \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Creating BloodStorage'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateNewBloodStorageModal;\r\n","import React from 'react';\r\nimport {\r\n//   bloodStoragesTable,\r\n  SidebarWithHeader,\r\n//   CreateNewbloodStorageModal,\r\n} from '../components';\r\n\r\nimport BloodStoragesTable from '../components/BloodStorageTable';\r\n\r\nimport CreateNewBloodStorageModal from '../components/CreateNewBloodStorageModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\nimport { useBloodStorageContext } from '../context/bloodStorage_context';\r\nimport { Input } from 'semantic-ui-react';\r\nimport { useEffect,useState } from 'react';\r\nfunction BloodStoragesPage() {\r\n  const {\r\n    bloodStorages,\r\n    bloodStorages_loading: loading,\r\n    bloodStorages_error: error,\r\n    fetchBloodStorages,\r\n  } = useBloodStorageContext();\r\n\r\n  const handleRefresh = async () => {\r\n    await fetchBloodStorages();\r\n  };\r\n  const [bloodStorageList, setBloodStorageList] = useState([]);\r\n\r\n  function setSearchTerm(e){\r\n    // staffs = staffs.filter(staff => staff.countryID < 60);\r\n    const results = bloodStorages.filter(bloodStorage => {\r\n      if (e === \"\") return bloodStorageList.push(bloodStorages.map(i=>i));\r\n      return bloodStorage.name.toLowerCase().includes(e.toLowerCase())\r\n      })\r\n      setBloodStorageList(results);\r\n    console.log(bloodStorages);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSearchTerm(\"\");\r\n \r\n\r\n}, [])\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewBloodStorageModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewBloodStorageModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n      <Input icon='search'\r\n       placeholder='Nhập tên cần tìm' \r\n      onChange={(event) => {\r\n        setSearchTerm(event.target.value);\r\n      }}\r\n      />\r\n        <CreateNewBloodStorageModal />\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n      </HStack>\r\n      <BloodStoragesTable bloodStorages={bloodStorages.filter(i=>bloodStorageList.map(i=>i.id).includes(i.id))} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default BloodStoragesPage;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  Text,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  // Select,\r\n  CheckboxGroup,\r\n  Stack,\r\n  // Center,\r\n  // HStack,\r\n  Option,\r\n  // Image,\r\n  // VStack,\r\n  Checkbox,\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useEffect } from 'react';\r\nimport { staffs_url } from '../utils/constants';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\nimport { Hidden } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useStaffContext } from '../context/staff_context';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { BiCheckboxChecked } from 'react-icons/bi';\r\n// import { MultiSelect } from \"react-multi-select-component\";\r\n// import { MultiSelect, Loader } from '@mantine/core';\r\nconst animatedComponents = makeAnimated();\r\n\r\nfunction CreateNewBloodDonateModal() {\r\n  const {\r\n    new_bloodDonate: {\r\n      name,\r\n      // time,\r\n      // timeF,\r\n      address,\r\n      target,\r\n      // receive,\r\n      // staffList,\r\n      status\r\n     \r\n    },\r\n    updateNewBloodDonateDetails,\r\n    createNewBloodDonate,\r\n  } = useBloodDonateContext();\r\n\r\n  const {\r\n    staffs,\r\n    updateStaff\r\n  } = useStaffContext();\r\n\r\n  \r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [staffList, setStaffList] = useState([]);\r\n  const [nameList, setNameList] = useState([]);\r\n  const [hour, setHour] = useState([]);\r\n  const [minute, setMinute] = useState([]);\r\n \r\n  const [hourF, setHourF] = useState([]);\r\n  const [minuteF, setMinuteF] = useState([]);\r\n  // const handleClick=(e)=>{\r\n  //   setStaffList(oldMessages => [e, ...oldMessages])\r\n  //  console.log(e);\r\n  \r\n  // }\r\n\r\n  const handleChange = y => {\r\n    setNameList(y);\r\n    // setStaffList( [nameList.map(index=> index.value)])\r\n    \r\n   \r\n  }\r\n\r\n\r\n let options = staffs.map(function (index) {\r\n  return { value: index.id, label: index.name+' - '+index.type };\r\n})\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n  const handleSubmit = async () => {\r\n   \r\n    if (\r\n      !name ||\r\n      // !time ||\r\n      !address ||\r\n      !target ||\r\n      // !receive ||\r\n      !staffList ||\r\n      !status \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    \r\n    setLoading(true);\r\n    console.log('uploading');\r\n   \r\n    const bloodDonate = {\r\n        name,\r\n      time:hourF+minute,\r\n      timeF:hourF+minuteF,\r\n      address,\r\n      target,\r\n      // receive,\r\n      staffList:nameList.map(index=> index.value),\r\n      status\r\n    };\r\n    // console.log(bloodDonate);\r\n    const responseCreate = await createNewBloodDonate(bloodDonate);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      console.log(nameList);\r\n      nameList.map((index) =>\r\n      {\r\n        \r\n        const res = axios.get(staffs_url+'/supTime/'+index.value) .then(function (response) {\r\n          const staff = {\r\n    \r\n            suppostTime: response.data.data+1,\r\n        \r\n          };\r\n          const responseCreate =  updateStaff(index.value, staff);\r\n\r\n        });\r\n       \r\n     \r\n    \r\n      })\r\n      window.location.reload(false);\r\n      onClose();\r\n      \r\n      return toast({\r\n        position: 'top',\r\n        description: 'bloodDonate created',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n     \r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button colorScheme='brown' onClick={onOpen}>\r\n       Thêm\r\n      </Button>\r\n      \r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Thêm buổi hiến máu mới</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n            <FormLabel>Tên buổi hiến</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Tên buổi hiến'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateNewBloodDonateDetails}\r\n              />\r\n            \r\n            \r\n            </FormControl>\r\n\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Giờ bắt đầu</FormLabel>\r\n              <Text></Text>\r\n              <Input\r\n                type='Time'\r\n                placeholder='Thời gian'\r\n                name='minute'\r\n                focusBorderColor='brown.500'\r\n                value={minute}\r\n                onChange={y=>setMinute(y.target.value)}\r\n              />\r\n              {/* <Text>Ngày bắt đầu</Text> */}\r\n              {/* <Input\r\n                type='date'\r\n                placeholder='Thời gian'\r\n                name='hour'\r\n                focusBorderColor='brown.500'\r\n                value={hour}\r\n                onChange={e=>setHour(e.target.value)}\r\n              /> */}\r\n             \r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Giờ kết thúc</FormLabel>\r\n             \r\n              <Input\r\n                type='Time'\r\n                placeholder='Thời gian'\r\n                name='minute'\r\n                focusBorderColor='brown.500'\r\n                value={minuteF}\r\n                onChange={e=>setMinuteF(e.target.value)}\r\n              />\r\n            \r\n             \r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Ngày thực hiện</FormLabel>\r\n          \r\n        \r\n              <Input\r\n                type='date'\r\n                placeholder='Thời gian'\r\n                name='hour'\r\n                focusBorderColor='brown.500'\r\n                value={hourF}\r\n                onChange={e=>setHourF(e.target.value)}\r\n              />\r\n             \r\n            </FormControl>\r\n\r\n            \r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Địa điểm</FormLabel>\r\n              <Textarea\r\n                placeholder='Địa điểm'\r\n                name='address'\r\n                focusBorderColor='brown.500'\r\n                value={address}\r\n                onChange={updateNewBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Mục tiêu</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='Mục tiêu'\r\n                name='target'\r\n                focusBorderColor='brown.500'\r\n                value={target}\r\n                onChange={updateNewBloodDonateDetails}\r\n              />\r\n            </FormControl>\r\n\r\n      \r\n<FormControl mt={4}>\r\n<FormLabel>Chọn nhân viên</FormLabel>\r\n            <Select\r\n         \r\n            value={options.find(obj => obj.value === staffList)}\r\n      closeMenuOnSelect={false}\r\n      onChange={handleChange}\r\n      components={animatedComponents}\r\n\r\n      isMulti\r\n      \r\n      options={options}\r\n    />\r\n             </FormControl>\r\n\r\n\r\n          \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Creating BloodDonate'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateNewBloodDonateModal;\r\n","import React from 'react';\r\nimport {\r\n//   bloodDonatesTable,\r\n  SidebarWithHeader,\r\n//   CreateNewbloodDonateModal,\r\n} from '../components';\r\n// import BloodDonatesTable from '../components/BloodDonateTable';\r\nimport BloodDonatesTable from '../components/BloodDonateTable';\r\nimport CreateNewBloodDonateModal from '../components/CreateNewBloodDonateModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\nimport { Input } from 'semantic-ui-react';\r\nimport { useEffect,useState } from 'react';\r\nfunction BloodDonatesPage() {\r\n  const {\r\n    bloodDonates,\r\n    bloodDonates_loading: loading,\r\n    bloodDonates_error: error,\r\n    fetchBloodDonates,\r\n  } = useBloodDonateContext();\r\n\r\n  const handleRefresh = async () => {\r\n    await fetchBloodDonates();\r\n  };\r\n  \r\n  const [bloodDonateList, setBloodDonateList] = useState([]);\r\n\r\n\r\n\r\n\r\n  function setSearchTerm(e){\r\n    // staffs = staffs.filter(staff => staff.countryID < 60);\r\n    const results = bloodDonates.filter(i => {\r\n      if (e === \"\") return bloodDonateList.push(bloodDonates.map(i=>i));\r\n      return i.name.toLowerCase().includes(e.toLowerCase())\r\n      })\r\n      setBloodDonateList(results);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    // setBloodDonateList(bloodDonates);\r\n    setSearchTerm(\"\");\r\n    \r\n\r\n}, [])\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewBloodDonateModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewBloodDonateModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n  if(bloodDonateList.length===0){\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n        <Input icon='search'\r\n         placeholder='Nhập tên cần tìm' \r\n        onChange={(event) => {\r\n          setSearchTerm(event.target.value);\r\n        }}\r\n        />\r\n          <CreateNewBloodDonateModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <BloodDonatesTable bloodDonates={bloodDonates} />\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5} >\r\n      <Input icon='search'\r\n      bg='white'\r\n       placeholder='Nhập tên cần tìm' \r\n      onChange={(event) => {\r\n        setSearchTerm(event.target.value);\r\n      }}\r\n      />\r\n        <CreateNewBloodDonateModal />\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n      </HStack>\r\n      <BloodDonatesTable bloodDonates={bloodDonates.filter(i=>bloodDonateList.map(i=>i.id).includes(i.id))} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default BloodDonatesPage;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n//   FormHelperText,\r\nSelect,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n//   Center,\r\n//   HStack,\r\n//   Image,\r\n//   VStack,\r\n//   Checkbox,\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useCashFlowContext } from '../context/cashFlow_context';\r\n\r\nfunction CreateNewCashFlowModal() {\r\n  const {\r\n    new_cashFlow: {\r\n      name,\r\n      amount,\r\n      from,\r\n      date,\r\n    //   suppostTime,\r\n      type\r\n    },\r\n    updateNewCashFlowDetails,\r\n    createNewCashFlow,\r\n    fetchCashFlows,\r\n  } = useCashFlowContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !name ||\r\n      !from ||\r\n      !amount ||\r\n      !type ||\r\n      !date\r\n    //   !suppostTime \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    \r\n    setLoading(true);\r\n  \r\n    const cashFlow = {\r\n        name,\r\n        amount,\r\n        from,\r\n        date,\r\n      //   suppostTime,\r\n        type\r\n    };\r\n    const responseCreate = await createNewCashFlow(cashFlow);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      // return await fetchCashFlows();\r\n      window.location.reload(false);\r\n      onClose();\r\n      return toast({\r\n        position: 'top',\r\n        description: 'cashFlow created',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n     \r\n      // await fetchCashFlows();\r\n      // return await fetchCashFlows();\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button colorScheme='brown' onClick={onOpen}>\r\n       Thêm\r\n      </Button>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Thêm thu/chi</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateNewCashFlowDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Số tiền</FormLabel>\r\n              <Input\r\n                type='number'\r\n                placeholder='Số tiền'\r\n                name='amount'\r\n                focusBorderColor='brown.500'\r\n                value={amount}\r\n                onChange={updateNewCashFlowDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            \r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Mô tả</FormLabel>\r\n              <Textarea\r\n                placeholder='Mô tả'\r\n                name='from'\r\n                focusBorderColor='brown.500'\r\n                value={from}\r\n                onChange={updateNewCashFlowDetails}\r\n              />\r\n            </FormControl>\r\n                \r\n            <FormControl mt={4}>\r\n              <FormLabel>Ngày thực hiện</FormLabel>\r\n              <Input\r\n                type='date'\r\n                placeholder='Thời gian'\r\n                name='date'\r\n                focusBorderColor='brown.500'\r\n                value={date}\r\n                onChange={updateNewCashFlowDetails}\r\n              />\r\n            </FormControl>\r\n\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Loại</FormLabel>\r\n              <Select\r\n                name='type'\r\n                focusBorderColor='brown.500'\r\n                value={type}\r\n                onChange={updateNewCashFlowDetails}\r\n              >\r\n                <option value='Thu'>Thu</option>\r\n                <option value='Chi'>Chi</option>\r\n               \r\n              </Select>\r\n            </FormControl>\r\n        \r\n            \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Creating CashFlow'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateNewCashFlowModal;\r\n","import React from 'react';\r\nimport {\r\n//   cashFlowsTable,\r\n  SidebarWithHeader,\r\n//   CreateNewcashFlowModal,\r\n} from '../components';\r\nimport CashFlowsTable from '../components/CashFlowTable';\r\n\r\nimport CreateNewCashFlowModal from '../components/CreateNewCashFlowModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\nimport { useCashFlowContext } from '../context/cashFlow_context';\r\nimport { Input } from 'semantic-ui-react';\r\nimport { useEffect,useState } from 'react';\r\n\r\nfunction CashFlowsPage() {\r\n  const {\r\n    cashFlows,\r\n    cashFlows_loading: loading,\r\n    cashFlows_error: error,\r\n    fetchCashFlows,\r\n  } = useCashFlowContext();\r\n\r\n  const handleRefresh = async () => {\r\n    await fetchCashFlows();\r\n  };\r\n\r\n  const [cashFlowList, setCashFlowList] = useState([]);\r\n  const [list, setList] = useState([]);\r\n\r\n  function setSearchTerm(e){\r\n   \r\n    // staffs = staffs.filter(staff => staff.countryID < 60);\r\n    const results = cashFlows.filter(i => {\r\n      if (e === \"\") return  cashFlowList.push(cashFlows.map(i=>i));\r\n      else\r\n      return i.name.toLowerCase().includes(e.toLowerCase())\r\n      })\r\n      setCashFlowList(results);\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    setSearchTerm(\"\");\r\n\r\n   \r\n  \r\n\r\n}, [])\r\n\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewCashFlowModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n             Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewCashFlowModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n      <Input icon='search'\r\n       placeholder='Nhập tên cần tìm' \r\n       defaultValue=\"\"\r\n      onChange={(event) => {\r\n        setSearchTerm(event.target.value);\r\n      }}\r\n      />\r\n        <CreateNewCashFlowModal />\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n      </HStack>\r\n      \r\n      <CashFlowsTable cashFlows={cashFlows.filter(i=>cashFlowList.map(i=>i.id).includes(i.id))} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default CashFlowsPage;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  Select\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  // Checkbox,\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { usePostContext } from '../context/post_context';\r\n\r\n\r\n\r\nfunction CreateNewPostModal() {\r\n  const {\r\n    new_post: {\r\n    //   name=\"Admin\",\r\n      title,\r\n    //   like,\r\n      content,\r\n      status\r\n \r\n   \r\n    },\r\n    updateNewPostDetails,\r\n    createNewPost,\r\n  } = usePostContext();\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n     \r\n      !content||\r\n      !title \r\n     \r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    \r\n    setLoading(true);\r\n    console.log('uploading');\r\n    const post = {\r\n      name:'Admin',\r\n      content,\r\n      title,\r\n      like: 0,\r\n      createdAt:Date.now(),\r\n      status:'Đã duyệt',\r\n     \r\n    };\r\n    const responseCreate = await createNewPost(post);\r\n    setLoading(false);\r\n    if (responseCreate.success) {\r\n      onClose();\r\n      window.location.reload(false);\r\n      return toast({\r\n        position: 'top',\r\n        description: 'post created',\r\n        status: 'success',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return toast({\r\n        position: 'top',\r\n        description: responseCreate.message,\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button colorScheme='brown' onClick={onOpen}>\r\n       Thêm\r\n      </Button>\r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Thêm bài viết</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n           {/* <FormControl>\r\n              <FormLabel>Họ và tên</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Họ và tên'\r\n                name='name'\r\n                focusBorderColor='brown.500'\r\n                value={name}\r\n                onChange={updateNewPostDetails}\r\n              />\r\n            </FormControl> */}\r\n\r\n            <FormControl>\r\n              <FormLabel>Tiêu đề</FormLabel>\r\n              <Input\r\n                ref={initialRef}\r\n                placeholder='Tiêu đề'\r\n                name='title'\r\n                focusBorderColor='brown.500'\r\n                value={title}\r\n                onChange={updateNewPostDetails}\r\n              />\r\n            </FormControl>\r\n\r\n       \r\n            <FormControl mt={4}>\r\n              <FormLabel>Nội dung</FormLabel>\r\n              <Textarea\r\n                placeholder='Nội dung'\r\n                name='content'\r\n                focusBorderColor='brown.500'\r\n                value={content}\r\n                onChange={updateNewPostDetails}\r\n              />\r\n            </FormControl>\r\n\r\n            \r\n\r\n          \r\n            \r\n         \r\n\r\n            \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Creating Post'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateNewPostModal;\r\n","import React from 'react';\r\nimport {\r\n//   PostsTable,\r\n  SidebarWithHeader,\r\n//   CreateNewPostModal,\r\n} from '../components';\r\nimport PostsTable from '../components/PostTable';\r\n\r\nimport CreateNewPostModal from '../components/CreateNewPostModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\nimport { usePostContext } from '../context/post_context';\r\nimport { Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { useState,useEffect } from 'react';\r\n\r\nfunction PostsPage() {\r\n  const {\r\n    posts,\r\n    posts_loading: loading,\r\n    posts_error: error,\r\n    fetchPosts,\r\n  } = usePostContext();\r\n\r\n  const handleRefresh = async () => {\r\n \r\n  \r\n    \r\n \r\n      setPostList(posts);\r\n   \r\n  \r\n\r\n    await fetchPosts();\r\n  };\r\n  const [postList, setPostList] = useState([]);\r\n\r\n  useEffect(() => {\r\n  \r\n    \r\n \r\n    setSearchTerm(\"\");\r\n \r\n       \r\n      \r\n  }, [])\r\n\r\n  function setSearchTerm(e){\r\n    // posts = posts.filter(post => post.countryID < 60);\r\n    const results = posts.filter(post => {\r\n      if (e === \"\") return postList.push(posts.map(i=>i));\r\n      return post.name.toLowerCase().includes(e.toLowerCase())\r\n      })\r\n      setPostList(results);\r\n\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewPostModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          <CreateNewPostModal />\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n      \r\n        <Input icon='search'\r\n       placeholder='Nhập tên cần tìm' \r\n      onChange={(event) => {\r\n        setSearchTerm(event.target.value);\r\n      }}\r\n      />\r\n        <CreateNewPostModal />\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n      </HStack>\r\n     \r\n      <PostsTable posts={posts.filter(i=>postList.map(i=>i.id).includes(i.id))} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default PostsPage;\r\n","import {\r\n    CREATE_NEW_BOOKING,\r\n    GET_BOOKINGS_BEGIN,\r\n    GET_BOOKINGS_ERROR,\r\n    GET_BOOKINGS_SUCCESS,\r\n    UPDATE_EXISTING_BOOKING,\r\n    GET_SINGLE_BOOKING_BEGIN,\r\n    GET_SINGLE_BOOKING_ERROR,\r\n    GET_SINGLE_BOOKING_SUCCESS,\r\n  } from '../actions';\r\n  \r\n  const booking_reducer = (state, action) => {\r\n    if (action.type === GET_BOOKINGS_BEGIN) {\r\n      return { ...state, bookings_error: false, bookings_loading: true };\r\n    }\r\n    if (action.type === GET_BOOKINGS_ERROR) {\r\n      return { ...state, bookings_error: true, bookings_loading: false };\r\n    }\r\n    if (action.type === GET_BOOKINGS_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        bookings_loading: false,\r\n        bookings: action.payload,\r\n      };\r\n    }\r\n    if (action.type === CREATE_NEW_BOOKING) {\r\n      const { name, value } = action.payload;\r\n      return { ...state, new_booking: { ...state.new_booking, [name]: value } };\r\n    }\r\n    if (action.type === GET_SINGLE_BOOKING_BEGIN) {\r\n      return {\r\n        ...state,\r\n        single_booking_error: false,\r\n        single_booking_loading: true,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_BOOKING_ERROR) {\r\n      return {\r\n        ...state,\r\n        single_booking_error: true,\r\n        single_booking_loading: false,\r\n      };\r\n    }\r\n    if (action.type === GET_SINGLE_BOOKING_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        single_booking_loading: false,\r\n        single_booking: action.payload,\r\n      };\r\n    }\r\n    if (action.type === UPDATE_EXISTING_BOOKING) {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        single_booking: { ...state.single_booking, [name]: value },\r\n      };\r\n    }\r\n    throw new Error(`No Matching \"${action.type}\" - action type`);\r\n  };\r\n  \r\n  export default booking_reducer;\r\n  ","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport reducer from '../reducers/booking_reducer';\r\nimport {\r\n  bookings_url,\r\n  update_booking_url,\r\n  create_new_booking,\r\n\r\n} from '../utils/constants';\r\nimport {\r\n  CREATE_NEW_BOOKING,\r\n  GET_BOOKINGS_BEGIN,\r\n  GET_BOOKINGS_ERROR,\r\n  GET_BOOKINGS_SUCCESS,\r\n  UPDATE_EXISTING_BOOKING,\r\n  GET_SINGLE_BOOKING_BEGIN,\r\n  GET_SINGLE_BOOKING_ERROR,\r\n  GET_SINGLE_BOOKING_SUCCESS,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  bookings_loading: false,\r\n  bookings_error: false,\r\n  bookings: [],\r\n  new_booking: {\r\n    iduser: '',\r\n    idBD: '',\r\n    sex:'',\r\n    heigh: false,\r\n    weight: false,\r\n    isAcohol: false,\r\n    isNicotine: false,\r\n    isHeartDisease: false,\r\n    isSitUp: false,\r\n    isSick: false,\r\n    createdAt:'',\r\n    isAllergies:'',\r\n\r\n   \r\n  },\r\n  single_booking_loading: false,\r\n  single_booking_error: false,\r\n  single_booking: {},\r\n};\r\n\r\nconst BookingContext = React.createContext();\r\n\r\n\r\nexport const BookingProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchBookings = async () => {\r\n    dispatch({ type: GET_BOOKINGS_BEGIN });\r\n    try {\r\n      const response = await axios.get(bookings_url);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_BOOKINGS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_BOOKINGS_ERROR });\r\n    }\r\n  };\r\n\r\n  const fetchSingleBooking = async (id) => {\r\n    dispatch({ type: GET_SINGLE_BOOKING_BEGIN });\r\n    try {\r\n      const response = await axios.get(`${bookings_url}${id}`);\r\n      const { data } = response.data;\r\n      dispatch({ type: GET_SINGLE_BOOKING_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_BOOKING_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteBooking = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`${update_booking_url}${id}`);\r\n      const { success, message } = response.data;\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateNewBookingDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n   \r\n    dispatch({ type: CREATE_NEW_BOOKING, payload: { name, value } });\r\n  };\r\n\r\n  const updateExistingBookingDetails = (e) => {\r\n    const name = e.target.name;\r\n    let value = e.target.value;\r\n \r\n    dispatch({ type: UPDATE_EXISTING_BOOKING, payload: { name, value } });\r\n  };\r\n\r\n  const createNewBooking = async (booking) => {\r\n    try {\r\n      const response = await axios.post(create_new_booking, booking);\r\n      const { success, data } = response.data;\r\n      fetchBookings();\r\n      return { success, data };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n  const updateBooking = async (id, booking) => {\r\n    try {\r\n      const response = await axios.put(`${update_booking_url}${id}`, booking);\r\n      const { success, message } = response.data;\r\n      // fetchbookings();\r\n      return { success, message };\r\n    } catch (error) {\r\n      const { success, message } = error.response.data;\r\n      return { success, message };\r\n    }\r\n  };\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  return (\r\n    <BookingContext.Provider\r\n      value={{\r\n        ...state,\r\n        deleteBooking,\r\n        updateNewBookingDetails,\r\n        updateExistingBookingDetails,\r\n        createNewBooking,\r\n        fetchBookings,\r\n        fetchSingleBooking,\r\n        updateBooking,\r\n        \r\n      }}\r\n    >\r\n      {children}\r\n    </BookingContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBookingContext = () => {\r\n  return useContext(BookingContext);\r\n};\r\n","import React, { useState,useEffect } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { BiChevronDown } from 'react-icons/bi';\r\nimport { useBookingContext } from '../context/booking_context';\r\nimport {useInforContext}  from '../context/infor_context';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n \r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  SimpleGrid,\r\n\r\n  HStack,\r\n  Spinner,\r\n\r\n  useToast,\r\n} from '@chakra-ui/react';\r\n// import UpdateBookingModal from './UpdateBookingModal';\r\n\r\nfunction BookingsTable({ bookings, id }) {\r\n  const toast = useToast();\r\n  const { fetchBookings, deleteBooking } = useBookingContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const location = useLocation();\r\n  const [data, setData] = useState([]);\r\n    const idBDD= location.pathname.slice(10, 34);\r\n  \r\n const {\r\n    infors,\r\n    // updateInfor\r\n  } = useInforContext();\r\n\r\n\r\n//   const getdata =  () => {\r\n    \r\n//     setData(bookings.filter(i=>idBD.includes(i.id)).map(i=>i.iduser))\r\n\r\n   \r\n// }     \r\n//   useEffect(()=>{\r\n \r\n// getdata();\r\n// console.log(data)\r\n    // })\r\n    // console.log(bookings)\r\n    // console.log(bookings.filter(i=>idBDD.includes(i.idBD)).map(i=>i.iduser))\r\n    // console.log(infors.filter(i=>(bookings.filter(i=>idBDD.includes(i.idBD)).map(i=>i.iduser)).includes(i.id)).map(i=>i))\r\n\r\n  return (\r\n    <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n      {loading ? (\r\n        <HStack my={8} alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </HStack>\r\n      ) : (\r\n        <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>STT</Th>\r\n              <Th>CMND/CCCD</Th>\r\n              <Th>Họ và tên</Th>\r\n              <Th>SĐT</Th>\r\n              <Th>Địa chỉ</Th>\r\n              <Th></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {infors.filter(i=>(bookings.filter(i=>idBDD.includes(i.idBD)).map(i=>i.iduser)).includes(i.id)).map((booking, index) => {\r\n              const {  name, countryID,phone, address, suppostTime,type,from,id } =\r\n                booking;\r\n                \r\n              return (\r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                  <Td>{countryID}</Td>\r\n                  <Td>{name}</Td>\r\n                  <Td>{phone}</Td>\r\n                  <Td>{address}</Td>\r\n             \r\n                  <Td>\r\n                    <Menu>\r\n                      <MenuButton as={Button} rightIcon={<BiChevronDown />}>\r\n                        Hành động\r\n                      </MenuButton>\r\n                      <MenuList>\r\n                        <Link to={`/bookingsDetail/${idBDD}/${id}`}>\r\n                          <MenuItem>Xem</MenuItem>\r\n                        </Link>\r\n                        {/* <MenuItem>\r\n                          <UpdateBookingModal id={id} />\r\n                        </MenuItem> */}\r\n                      \r\n                        {/* <MenuItem onClick={() => handleDelete(id)}>\r\n                          Xóa\r\n                        </MenuItem> */}\r\n                      </MenuList>\r\n                    </Menu>\r\n                  </Td>\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      )}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default BookingsTable;\r\n","import React from 'react';\r\nimport {\r\n//   BookingsTable,\r\n  SidebarWithHeader,\r\n//   CreateNewBookingModal,\r\n} from '../components';\r\nimport BookingsTable from '../components/BookingTable';\r\n\r\n// import CreateNewBookingModal from '../components/CreateNewBookingModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\nimport { useBookingContext } from '../context/booking_context';\r\nimport { Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { useState,useEffect } from 'react';\r\n\r\nfunction BookingPage() {\r\n  const {\r\n    bookings,\r\n    bookings_loading: loading,\r\n    bookings_error: error,\r\n    fetchBookings,\r\n  } = useBookingContext();\r\n\r\n  const handleRefresh = async () => {\r\n \r\n      setBookingList(bookings);\r\n\r\n    await fetchBookings();\r\n  };\r\n  const [bookingList, setBookingList] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n  \r\n    setSearchTerm(\"\");\r\n \r\n       \r\n      \r\n  }, [])\r\n\r\n  function setSearchTerm(e){\r\n    // bookings = bookings.filter(booking => booking.countryID < 60);\r\n    const results = bookings.filter(booking => {\r\n      if (e === \"\") return  bookingList.push(bookings.map(i=>i));\r\n      return booking.name.toLowerCase().includes(e.toLowerCase())\r\n      })\r\n      setBookingList(results);\r\n    // console.log(BookingList);\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          {/* <CreateNewBookingModal /> */}\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <HStack mb={5}>\r\n          {/* <CreateNewBookingModal /> */}\r\n          {/* <Button\r\n            colorScheme='brown'\r\n            variant='outline'\r\n            leftIcon={<MdOutlineRefresh />}\r\n            onClick={handleRefresh}\r\n          >\r\n            Tải lại\r\n          </Button> */}\r\n        </HStack>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n      \r\n        {/* <Input icon='search'\r\n       placeholder='Nhập tên cần tìm' \r\n      onChange={(event) => {\r\n        setSearchTerm(event.target.value);\r\n      }}\r\n      /> */}\r\n        {/* <CreateNewBookingModal /> */}\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n      </HStack>\r\n     \r\n      <BookingsTable bookings={bookings.filter(i=>bookingList.map(i=>i.id).includes(i.id))} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default BookingPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  SidebarWithHeader,\r\n \r\n//   StaffDetail,\r\n\r\n} from '../components';\r\nimport StaffDetail from '../components/StaffDetail';\r\nimport { useStaffContext } from '../context/staff_context';\r\nimport { VStack, Heading, Spinner, Stack } from '@chakra-ui/react';\r\n\r\nfunction StaffDetaislPage() {\r\n  const { id } = useParams();\r\n  const {\r\n    single_staff_loading: loading,\r\n    single_staff_error: error,\r\n    single_staff: staff,\r\n    fetchSingleStaff,\r\n  } = useStaffContext();\r\n\r\n  useEffect(() => {\r\n    fetchSingleStaff(id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <Stack\r\n        direction={{ base: 'column', sm: 'row' }}\r\n        spacing='8'\r\n        alignItems='flex-start'\r\n        bg='white'\r\n        p='8'\r\n        mb={4}\r\n        borderRadius='lg'\r\n        shadow='sm'\r\n        overflowX='auto'\r\n      >\r\n     \r\n        <StaffDetail staff={staff} />\r\n      </Stack>\r\n     \r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default StaffDetaislPage;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {\r\n//   donateTable,\r\n  SidebarWithHeader,\r\n//   CreateNewbloodDonateModal,\r\n} from '../components';\r\n// import DonateTable from '../components/BloodDonateTable';\r\nimport DonateTable from '../components/DonateTable';\r\n// import CreateNewBloodDonateModal from '../components/CreateNewBloodDonateModal';\r\nimport { HStack } from '@chakra-ui/react';\r\n// import { MdOutlineRefresh } from 'react-icons/md';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\n\r\n\r\nfunction DonatePage() {\r\n  const {\r\n    bloodDonates,\r\n    // bloodDonates_loading: loading,\r\n    // bloodDonates_error: error,\r\n    fetchBloodDonates,\r\n  } = useBloodDonateContext();\r\n\r\n  // const handleRefresh = async () => {\r\n  //   // await fetchBloodDonates();\r\n  // };\r\n  \r\n\r\n  const [data, setData] = useState([]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n      const getdata =  () => {\r\n   \r\n        setData(bloodDonates.filter(index=> index.status.includes('Chưa thực hiện')));\r\n\r\n    console.log(data);\r\n  }\r\n\r\n      \r\n\r\n  getdata();\r\n      },[]);\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n       \r\n      </HStack>\r\n    \r\n      <DonateTable bloodDonates={data} />\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default DonatePage;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  SidebarWithHeader,\r\n \r\n//   postDetail,\r\n\r\n} from '../components';\r\nimport PostDetail from '../components/PostDetail';\r\nimport { usePostContext } from '../context/post_context';\r\nimport { VStack, Heading, Spinner, Stack } from '@chakra-ui/react';\r\n\r\nfunction PostDetailPage() {\r\n  const { id } = useParams();\r\n  const {\r\n    single_post_loading: loading,\r\n    single_post_error: error,\r\n    single_post: post,\r\n    fetchSinglePost,\r\n  } = usePostContext();\r\n\r\n  useEffect(() => {\r\n    fetchSinglePost(id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <Stack\r\n        direction={{ base: 'column', sm: 'row' }}\r\n        spacing='8'\r\n        alignItems='flex-start'\r\n        bg='white'\r\n        p='8'\r\n        mb={4}\r\n        borderRadius='lg'\r\n        shadow='sm'\r\n        overflowX='auto'\r\n      >\r\n     \r\n        <PostDetail post={post} />\r\n      </Stack>\r\n     \r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default PostDetailPage;\r\n","import React, { useState, useRef ,useEffect} from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  // FormHelperText,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  useToast,\r\n  Textarea,\r\n  // Center,\r\n  // HStack,\r\n  // Image,\r\n  // VStack,\r\n  Checkbox,\r\n  Text,\r\n  // Select\r\n} from '@chakra-ui/react';\r\n// import { useDropzone } from 'react-dropzone';\r\nimport { useDonateContext } from '../context/donate_context';\r\nimport { useBloodStorageContext } from '../context/bloodStorage_context';\r\nimport { Hidden } from '@mui/material';\r\nimport { create_new_bloodStorage} from '../utils/constants';\r\nimport { bloodStorages_url } from '../utils/constants';\r\nimport { useInforContext } from '../context/infor_context';\r\nimport { update_infor_url } from '../utils/constants';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\n\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nfunction CreateNewDonateModal({ id }) {\r\n  const {\r\n    new_donate: {\r\n      // name,\r\n      // amount,\r\n      // iduser,\r\n      // typeBlood\r\n     \r\n    },\r\n    // updateNewDonateDetails,\r\n    createNewDonate,\r\n    fetchSingleDonate\r\n  } = useDonateContext();\r\n\r\n  // console.log(id);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  \r\n  const {\r\n    infors,\r\n    fetchSingleInfor,\r\n    updateInfor,\r\n    fetchInfors,\r\n    updateNewInforDetails\r\n  } = useInforContext();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const initialRef = useRef();\r\n  const toast = useToast();\r\n\r\n  const idBD= id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [typeBlood, setTypeBlood] = useState('');\r\n  const [donateTime, setDonateTime] = useState('');\r\n  const animatedComponents = makeAnimated();\r\n  const [amount, setAmount] = useState('');\r\n  const [iduser, setIduser] = useState('');\r\n\r\n  useEffect(() => {\r\n  \r\n \r\n  }, []);\r\n\r\n  const op= [\r\n    {value: 250,label:'250ml'},\r\n    {value: 350,label:'350ml'},\r\n    {value: 450,label:'450ml'}\r\n  ]\r\n\r\n  let options = infors.filter(infors => infors.status.includes('Có thể hiến')).map(function (index) {\r\n    return { value: index.id, label: index.name };\r\n  })\r\n  \r\n// console.log(time);\r\n\r\nconst check = (iduser)=>{\r\n  // console.log(options);\r\n                infors.find((index) => {\r\n              if(index.id === iduser){setIduser(index.id);setName(index.name); setTypeBlood(index.typeBlood); setDonateTime(index.donateTime)\r\n                console.log(index.id);\r\n              \r\n              }})\r\n\r\n\r\n}\r\n\r\nconsole.log(name);\r\n\r\n  const handleSubmit = async () => {\r\n   \r\n    \r\n    // console.log(name);\r\n    if (\r\n      // !name ||\r\n      !idBD ||\r\n      !iduser ||\r\n      // !amount ||\r\n      !typeBlood \r\n      // !donateID\r\n    ) {\r\n      return toast({\r\n        position: 'top',\r\n        description: 'Provide all the details',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    \r\n    // name = na;\r\n\r\n   \r\n    setLoading(true);\r\n    const donate = {\r\n        iduser,\r\n        idBD, \r\n        name,\r\n        amount,\r\n        typeBlood,\r\n   \r\n    };\r\n\r\n    // const donateTime =time+1;\r\n    const time = donateTime+1;\r\n    const infor = {\r\n      donateTime: time,\r\n      lastDonate: Date.now(),\r\n      // oldDate: Date.now(),\r\n      status: 'Chưa thể hiến'\r\n  };\r\n  \r\n  const updatetime = await updateInfor(iduser, infor);\r\n\r\n    const responseCreate = await createNewDonate(donate);\r\n    \r\n       \r\n    setLoading(false);\r\n    if (responseCreate.success) { \r\n      await fetchSingleDonate(id);\r\n      await fetchInfors();\r\n        onClose();\r\n        \r\n        return toast({\r\n          position: 'top',\r\n          description: 'Donate created',\r\n          status: 'success',\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } else {\r\n        return toast({\r\n          position: 'top',\r\n          description: responseCreate.message,\r\n          status: 'error',\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <Button colorScheme='brown' onClick={onOpen}>\r\n       Thêm\r\n      </Button>\r\n      \r\n\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Thêm người hiến máu</ModalHeader>\r\n          <ModalCloseButton />\r\n         \r\n\r\n           <ModalBody pb={6}>\r\n           <FormControl mt={4}>\r\n<FormLabel>Tên người hiến</FormLabel>\r\n            <Select\r\n            name='iduser'\r\n          // defaultValue={{value:0,label:'Chọn người hiến'}}\r\n            // value={iduser}\r\n            // value={options.find(obj => obj.value)}\r\n            onClick={() =>  check()}\r\n            // onClick={() =>    \r\n            //   infors.find((index) => {\r\n            //   if(index.id === iduser){setName(index.name); setTypeBlood(index.typeBlood); setDonateTime(index.donateTime)}})}\r\n      closeMenuOnSelect={true}\r\n      onChange={(options) =>  check(options.value)}\r\n      components={animatedComponents}\r\n\r\n      // isMulti\r\n      \r\n      options={options}\r\n    />\r\n             </FormControl>\r\n\r\n           {/* <FormControl mt={4}>\r\n            <FormLabel>Tên người hiến</FormLabel>\r\n              <Select\r\n                name='iduser'\r\n                focusBorderColor='brown.500'\r\n                value={iduser}\r\n         \r\n                onClick={() =>    \r\n                  infors.find((index) => {\r\n                  if(index.id === iduser){setName(index.name); setTypeBlood(index.typeBlood); setDonateTime(index.donateTime)}})}\r\n                onChange={updateNewDonateDetails}\r\n               \r\n              >\r\n\r\n                <option>Chọn người hiến</option>\r\n                {infors.filter(infors => infors.status.includes('Có thể hiến')).map(index => ( \r\n                <option value={index.id} >{index.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormControl> */}\r\n       \r\n           <FormControl mt={4}>\r\n            <FormLabel>Số lượng</FormLabel>\r\n              <Select\r\n                name='amount'\r\n                focusBorderColor='brown.500'\r\n                // value={amount}\r\n                options={op}\r\n                onChange={(op) =>  setAmount(op.value)}\r\n              >\r\n                {/* <option value='250'>250</option>\r\n                <option value='350'>350</option>\r\n                <option value='450'>450</option> */}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {/* <FormControl>\r\n              <FormLabel>Nhóm máu</FormLabel>\r\n              <Input\r\n                disabled\r\n                placeholder='Tên'\r\n                name='typeBlood'\r\n                focusBorderColor='brown.500'\r\n                value={typeBlood}\r\n                onChange={updateNewDonateDetails}\r\n              />\r\n            </FormControl> */}\r\n      \r\n\r\n          \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText='Creating Donate'\r\n              colorScheme='brown'\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default CreateNewDonateModal;\r\n","import React from 'react';\r\nimport {\r\n//   donateTable,\r\n  SidebarWithHeader,\r\n//   CreateNewDonateModal,\r\n} from '../components';\r\n// import DonateTable from '../components/DonateTable';\r\nimport DonateDetail from '../components/DonateDetail';\r\nimport CreateNewDonateModal from '../components/CreateNewDonateModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\n// import { useDonateContext } from '../context/donate_context';\r\nimport { useDonateContext } from '../context/donate_context';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Input } from 'semantic-ui-react';\r\nimport { useEffect,useState } from 'react';\r\nfunction DonateDetailPage() {\r\n  const { id } = useParams();\r\n  const {\r\n    donates,\r\n    donates_loading: loading,\r\n    donates_error: error,\r\n    fetchDonates,\r\n  } = useDonateContext();\r\n\r\n  const{\r\n    fetchSingleDonate\r\n  } = useDonateContext();\r\n\r\n  const handleRefresh = async () => {\r\n    await fetchSingleDonate(id);\r\n  };\r\n  console.log(id)\r\n  \r\n  const [donateList, setDonateList] = useState([]);\r\n\r\n  function setSearchTerm(e){\r\n    // staffs = staffs.filter(staff => staff.countryID < 60);\r\n    const results = donates.filter(donate => {\r\n      if (e === \"\") return donateList\r\n      return donate.name.toLowerCase().includes(e.toLowerCase())\r\n      })\r\n      setDonateList(results);\r\n    console.log(donates);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDonateList(donates);\r\n \r\n\r\n}, [])\r\n// console.log(donates);\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n      <Input icon='search'\r\n       placeholder='Nhập tên cần tìm' \r\n      onChange={(event) => {\r\n        setSearchTerm(event.target.value);\r\n      }}\r\n      />\r\n        <CreateNewDonateModal  id={id} />\r\n        {/* <Button\r\n          colorScheme='brown'\r\n          variant='outline'\r\n          leftIcon={<MdOutlineRefresh />}\r\n          onClick={handleRefresh}\r\n        >\r\n          Tải lại\r\n        </Button> */}\r\n       \r\n      </HStack>\r\n     \r\n      <DonateDetail donates={donates}  id={id}/>\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default DonateDetailPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Th,\r\n  Tr,\r\n  Td,\r\n  Text,\r\n  // Box,\r\n  SimpleGrid,\r\n  // Tag,\r\n} from '@chakra-ui/react';\r\n// import { formatPrice } from '../utils/helpers';\r\nimport { useAdminContext } from '../context/admin_context';\r\nimport { useDonateContext } from '../context/donate_context';\r\n// import { donates_url } from '../utils/constants';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\n// import { Stars } from '.';\r\nimport moment from 'moment';\r\n// import axios from 'axios';\r\n\r\nfunction InforDetail({ infor }) {\r\n  // const { admins } = useAdminContext();\r\n\r\n  // const { single_infor_loading: loading } = useinforContext();\r\n  // const [createdBy, setCreatedBy] = useState('');\r\n  // const [unitSold, setUnitSold] = useState(0);\r\n  const {\r\n    _id: id = '',\r\n    name = '',\r\n    countryID='',\r\n    address='',\r\n    phone,\r\n    email,\r\n    typeBlood,\r\n    status,\r\n    lastDonate,\r\n    // lastDonate,\r\n    donateTime,\r\n  } = infor;\r\n\r\n  const {\r\n    donates,\r\n   \r\n  } = useDonateContext();\r\n\r\n  const {\r\n    bloodDonates,\r\n    // bloodDonates_loading: loading,\r\n    // bloodDonates_error: error,\r\n    fetchBloodDonates,\r\n  } = useBloodDonateContext();\r\n  const [donate, setDonate] = useState([]);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n      const getdata =  () => {\r\n   \r\n        donate.push(donates.filter(index=> index.iduser.includes(id)).map(index=>index.idBD));\r\n        // donate.foreach(index=>index.idBD)\r\n    \r\n        setData(bloodDonates.filter(index=>  donate[0].includes(index.id)));\r\n  }     \r\n\r\n\r\n  getdata();\r\n \r\n\r\n      },[]);\r\n      const idU = id;\r\n  \r\n      const getAmount =  (id) => {\r\n        // if( donates.filter(index=>index.idBD).includes(id)){\r\n      \r\n        return donates.filter(index=> index.idBD.includes(id)).filter(index=> index.iduser.includes(idU)).map(index=>index.amount);\r\n      // }\r\n        // console.log(donates.map(index=>index.idBD).includes(id));\r\n     }    \r\n     const getDate =  (id) => {\r\n      // if( donates.filter(index=>index.idBD).includes(id)){\r\n    \r\n      return donates.filter(index=> index.idBD.includes(id)).filter(index=> index.iduser.includes(idU)).map(index=>index.createdAt).toString();\r\n    // }\r\n      // console.log(donates.map(index=>index.idBD).includes(id));\r\n   }     \r\n     \r\n   getDate();\r\n     getAmount();\r\n\r\n  // console.log(moment('2023-04-21T06:23:22.478Z').format(\"D/M/YYYY\"))\r\n\r\n  return (\r\n    <VStack alignItems='left' justifyContent='left'>\r\n      <Text fontSize='4xl' as='b'>THÔNG TIN NGƯỜI HIẾN</Text>\r\n       <VStack alignItems='left' justifyContent='left'>\r\n      <HStack><Text as='b'>CMND/CCCD: </Text><Text>{countryID}</Text></HStack>\r\n     <HStack> <Text as='b'>Họ và tên: </Text><Text>{name}</Text></HStack>\r\n     <HStack> <Text as='b'>Địa chỉ: </Text><Text>{address}</Text></HStack>\r\n     <HStack><Text as='b'>Số điện thoại: </Text><Text>{phone}</Text></HStack>\r\n     <HStack><Text as='b'>Email: </Text><Text>{email}</Text></HStack>\r\n     <HStack> <Text as='b'>Nhóm máu: </Text><Text>{typeBlood}</Text></HStack>\r\n     <HStack>  <Text as='b'>Số lần hiến: </Text><Text>{donateTime}</Text></HStack>\r\n     <HStack>  <Text as='b'>Ngày hiến cuối cùng: </Text><Text>{moment(lastDonate).format(\"D/M/YYYY\")}</Text></HStack>\r\n     <HStack>  <Text as='b'>Trạng thái: </Text><Text>{status}</Text></HStack>\r\n     </VStack>\r\n     <VStack></VStack>\r\n     <Text fontSize='2xl' as='b'>Bảng thống kê các lần hiến máu</Text>\r\n     <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n     <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>Lần hiến</Th>\r\n              <Th>Tên buổi hiến</Th>\r\n              <Th>Ngày hiến</Th>\r\n              <Th>Địa điểm</Th>\r\n              <Th>Số máu đã hiến</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            \r\n              {data.sort((a, b) =>new Date(a.time).getTime()-new Date(b.time).getTime()).sort((a, b) =>new Date(a.time).getTime()-new Date(b.time).getTime()).map((bloodDonate, index) => {\r\n                const {  name, time,createdAt, address,id } =\r\n                bloodDonate;\r\n              \r\n              return (\r\n                 \r\n                <Tr key={index}>\r\n                   <Td>{index+1}</Td>\r\n                <Td>{name}</Td>\r\n                  <Td>{  new Intl.DateTimeFormat('vn-VN', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit'})\r\n        .format(getDate(id))}</Td>\r\n                  <Td>{address}</Td>\r\n                  <Td>{getAmount(id)}ml</Td>\r\n                </Tr>\r\n              );\r\n           \r\n               })}\r\n              \r\n          </Tbody>\r\n        </Table>\r\n        </SimpleGrid>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default InforDetail;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  SidebarWithHeader,\r\n \r\n//   InforDetail,\r\n\r\n} from '../components';\r\nimport InforDetail from '../components/InforDetail';\r\nimport { useInforContext } from '../context/infor_context';\r\nimport { VStack, Heading, Spinner, Stack } from '@chakra-ui/react';\r\n\r\nfunction InforDetaislPage() {\r\n  const { id } = useParams();\r\n  const {\r\n    single_infor_loading: loading,\r\n    single_infor_error: error,\r\n    single_infor: infor,\r\n    fetchSingleInfor,\r\n  } = useInforContext();\r\n\r\n  useEffect(() => {\r\n    fetchSingleInfor(id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <Stack\r\n        direction={{ base: 'column', sm: 'row' }}\r\n        spacing='8'\r\n        alignItems='flex-start'\r\n        bg='white'\r\n        p='8'\r\n        mb={4}\r\n        borderRadius='lg'\r\n        shadow='sm'\r\n        overflowX='auto'\r\n      >\r\n     \r\n        <InforDetail infor={infor} />\r\n      </Stack>\r\n     \r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default InforDetaislPage;\r\n","import React from 'react';\r\nimport {\r\n//   BookingTable,\r\n  SidebarWithHeader,\r\n//   CreateNewBookingModal,\r\n} from '../components';\r\n// import BookingTable from '../components/BookingTable';\r\nimport BookingDetail from '../components/BookingDetail';\r\n// import CreateNewBookingModal from '../components/CreateNewBookingModal';\r\nimport { HStack, VStack, Spinner, Heading, Button } from '@chakra-ui/react';\r\nimport { MdOutlineRefresh } from 'react-icons/md';\r\n// import { useBookingContext } from '../context/Booking_context';\r\nimport { useBookingContext } from '../context/booking_context';\r\nimport {useInforContext}from '../context/infor_context';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Input } from 'semantic-ui-react';\r\nimport { useEffect,useState } from 'react';\r\nfunction BookingDetailPage() {\r\n  const { id } = useParams();\r\n  const {\r\n    bookings,\r\n    bookings_loading: loading,\r\n    bookings_error: error,\r\n    fetchBookings,\r\n  } = useBookingContext();\r\n\r\n  const{\r\n    fetchSingleBooking\r\n  } = useBookingContext();\r\n\r\n  const {\r\n  \r\n    single_infor: infor,\r\n    fetchSingleInfor,\r\n  } = useInforContext();\r\n\r\n  useEffect(() => {\r\n    fetchSingleInfor(id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\nconsole.log(bookings);\r\n  return (\r\n    <SidebarWithHeader>\r\n      <HStack mb={5}>\r\n    \r\n   \r\n       \r\n      </HStack>\r\n     \r\n      <BookingDetail bookings={bookings} infor={infor}  id={id}/>\r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default BookingDetailPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  SidebarWithHeader,\r\n \r\n//   BloodDonateDetail,\r\n\r\n} from '../components';\r\nimport BloodDonateDetail from '../components/BloodDonateDetail';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\nimport { VStack, Heading, Spinner, Stack } from '@chakra-ui/react';\r\n\r\nfunction ViewBloodDonatePage() {\r\n  const { id } = useParams();\r\n  const {\r\n    single_bloodDonate_loading: loading,\r\n    single_bloodDonate_error: error,\r\n    single_bloodDonate: bloodDonate,\r\n    fetchSingleBloodDonate,\r\n  } = useBloodDonateContext();\r\n// console.log(id);\r\n\r\n  useEffect(() => {\r\n    fetchSingleBloodDonate(id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <Stack\r\n        direction={{ base: 'column', sm: 'row' }}\r\n        spacing='8'\r\n        alignItems='flex-start'\r\n        bg='white'\r\n        p='8'\r\n        mb={4}\r\n        borderRadius='lg'\r\n        shadow='sm'\r\n        overflowX='auto'\r\n      >\r\n     \r\n        <BloodDonateDetail bloodDonate={bloodDonate} />\r\n      </Stack>\r\n     \r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default ViewBloodDonatePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Th,\r\n  Tr,\r\n  Td,\r\n  Text,\r\n  // Box,\r\n  SimpleGrid,\r\n  // Tag,\r\n} from '@chakra-ui/react';\r\n// import { formatPrice } from '../utils/helpers';\r\n// import { useAdminContext } from '../context/admin_context';\r\n// import { useBloodStorageContext } from '../context/BloodStorage_context';\r\n// import { bloodDonates_url } from '../utils/constants';\r\nimport { useBloodDonateContext } from '../context/bloodDonate_context';\r\n// import { Stars } from '.';\r\nimport moment from 'moment';\r\n// import axios from 'axios';\r\n\r\nfunction BloodStorageDetail({ bloodStorage }) {\r\n  // const { admins } = useAdminContext();\r\n\r\n  // const { single_bloodStorage_loading: loading } = usebloodStorageContext();\r\n  // const [createdBy, setCreatedBy] = useState('');\r\n  // const [unitSold, setUnitSold] = useState(0);\r\n  const {\r\n    _id: id = '',\r\n    name = '',\r\n    amount='',\r\n    from='',\r\n    type,\r\n    date='',\r\n    detail,\r\n    A,\r\n    O,\r\n    B,AB\r\n  } = bloodStorage;\r\n\r\n  const {\r\n    bloodDonates,\r\n    // bloodDonates_loading: loading,\r\n    // bloodDonates_error: error,\r\n    // fetchBloodDonates,\r\n  } = useBloodDonateContext();\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <VStack alignItems='left' justifyContent='left'>\r\n      <Text fontSize='4xl' as='b'>THÔNG TIN</Text>\r\n       <VStack alignItems='left' justifyContent='left'>\r\n      <HStack><Text as='b'>Tên: </Text><Text>{name}</Text></HStack>\r\n      <HStack><Text as='b'>Số lượng: </Text><Text>{amount}ml</Text></HStack>\r\n     <HStack> <Text as='b'>Từ/Đến: </Text><Text>{from}</Text></HStack>\r\n     <HStack> <Text as='b'>Loại: </Text><Text>{type}</Text></HStack>\r\n     \r\n     <HStack><Text as='b'>Ngày thực hiện: </Text><Text>{moment(date.substring(0,10)).format('DD/MM/YYYY')}</Text></HStack>\r\n     <HStack><Text as='b'>Mô tả: </Text><Text>{detail}</Text></HStack>\r\n     <HStack spacing='300px' >     <VStack  alignItems='left' justifyContent='left' ><Text as='b'>Chi tiết: </Text>\r\n     <SimpleGrid bg='white' p={5} shadow='lg' borderRadius='lg' overflowX='auto'>\r\n     <Table variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n            <Th>O</Th>\r\n              <Th>A</Th>\r\n              <Th>AB</Th>\r\n              <Th>B</Th>\r\n             \r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n         \r\n                <Tr>\r\n                   <Td>{O}ml</Td>\r\n                <Td>{A}ml</Td>\r\n                  <Td>{AB}ml</Td>\r\n                  <Td>{B}ml</Td>\r\n                \r\n                </Tr>\r\n         \r\n          </Tbody>\r\n        </Table>\r\n        </SimpleGrid>\r\n        </VStack> \r\n       \r\n        </HStack>\r\n        </VStack>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default BloodStorageDetail;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  SidebarWithHeader,\r\n \r\n//   BloodStorageDetail,\r\n\r\n} from '../components';\r\nimport BloodStorageDetail from '../components/BloodStorageDetail';\r\nimport { useBloodStorageContext } from '../context/bloodStorage_context';\r\nimport { VStack, Heading, Spinner, Stack } from '@chakra-ui/react';\r\n\r\nfunction BloodStorageDetaislPage() {\r\n  const { id } = useParams();\r\n  const {\r\n    single_bloodStorage_loading: loading,\r\n    single_bloodStorage_error: error,\r\n    single_bloodStorage: bloodStorage,\r\n    fetchSingleBloodStorage,\r\n  } = useBloodStorageContext();\r\n\r\n  useEffect(() => {\r\n    fetchSingleBloodStorage(id);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Spinner size='lg' color='brown.500' />\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SidebarWithHeader>\r\n        <VStack alignItems='center' justifyContent='center'>\r\n          <Heading color='red.500'>There was an error</Heading>\r\n        </VStack>\r\n      </SidebarWithHeader>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <SidebarWithHeader>\r\n      <Stack\r\n        direction={{ base: 'column', sm: 'row' }}\r\n        spacing='8'\r\n        alignItems='flex-start'\r\n        bg='white'\r\n        p='8'\r\n        mb={4}\r\n        borderRadius='lg'\r\n        shadow='sm'\r\n        overflowX='auto'\r\n      >\r\n     \r\n        <BloodStorageDetail bloodStorage={bloodStorage} />\r\n      </Stack>\r\n     \r\n    </SidebarWithHeader>\r\n  );\r\n}\r\n\r\nexport default BloodStorageDetaislPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport {\r\n  AdminsPage,\r\n  Dashboard,\r\n  LoginPage,\r\n  StaffsPage,\r\n  PostDetailPage,\r\n  PostsPage,\r\n  InforsPage,\r\n  CashFlowsPage,\r\n  PrivateRoute,\r\n  BloodStoragesPage,\r\n  InforDetaislPage,\r\n  StaffDetaislPage,\r\n  DonateDetaislPage,\r\n  BloodDonatesPage,\r\n  BookingPage,\r\n  BookingDetailPage,\r\n  ViewBloodStoragePage,\r\n  DonatePage,\r\n  ViewBloodDonatePage,\r\n} from \"./pages\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <PrivateRoute exact path=\"/\">\r\n          <Dashboard />\r\n        </PrivateRoute>\r\n        <PrivateRoute exact path=\"/infors\">\r\n          <InforsPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/cashFlows\">\r\n          <CashFlowsPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/bloodDonates\">\r\n          <BloodDonatesPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/bloodDonates/:id\">\r\n          <ViewBloodDonatePage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/bloodStorages\">\r\n          <BloodStoragesPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/bloodStorages/:id\">\r\n          <ViewBloodStoragePage />\r\n        </PrivateRoute>\r\n        <PrivateRoute exact path=\"/bookingsDetail/:id/:id\">\r\n          <BookingDetailPage />\r\n        </PrivateRoute>\r\n        <PrivateRoute exact path=\"/bookings/:id\">\r\n          <BookingPage />\r\n        </PrivateRoute>\r\n        <PrivateRoute exact path=\"/bookings\">\r\n          <DonatePage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/donates\">\r\n          <DonatePage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/posts\">\r\n          <PostsPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/posts/:id\">\r\n          <PostDetailPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/staffs\">\r\n          <StaffsPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/staffs/:id\">\r\n          <StaffDetaislPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/infors/:id\">\r\n          <InforDetaislPage />\r\n        </PrivateRoute>\r\n        <PrivateRoute exact path=\"/donates/:id\">\r\n          <DonateDetaislPage />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute exact path=\"/accounts\">\r\n          <AdminsPage />\r\n        </PrivateRoute>\r\n        <PrivateRoute exact path=\"/login\">\r\n          <LoginPage />\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { extendTheme } from '@chakra-ui/react';\r\n\r\nconst theme = extendTheme({\r\n  colors: {\r\n    brown: {\r\n      900: 'hsl(22, 28%, 21%)',\r\n      800: 'hsl(22, 28%, 29%)',\r\n      700: 'hsl(22, 28%, 37%)',\r\n      600: 'hsl(22, 28%, 45%)',\r\n      500: 'hsl(22, 31%, 52%)',\r\n      400: 'hsl(22, 31%, 60%)',\r\n      300: 'hsl(22, 31%, 67%)',\r\n      200: 'hsl(20, 31%, 74%)',\r\n      100: 'hsl(22, 31%, 81%)',\r\n      50: 'hsl(22, 31%, 88%)',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport theme from './config/ThemeConfig';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { UserProvider } from './context/user_context';\r\n\r\nimport { CashFlowProvider } from './context/cashFlow_context';\r\nimport { BloodStorageProvider } from './context/bloodStorage_context';\r\nimport { PostProvider } from './context/post_context';\r\nimport { StaffProvider } from './context/staff_context';\r\nimport { BookingProvider } from './context/booking_context';\r\nimport { InforProvider } from './context/infor_context';\r\nimport { DonateProvider } from './context/donate_context';\r\nimport { BloodDonateProvider } from './context/bloodDonate_context';\r\nimport { AdminProvider } from './context/admin_context';\r\n\r\nReactDOM.render(\r\n  <UserProvider>\r\n    <AdminProvider>\r\n    <InforProvider>\r\n        <CashFlowProvider>\r\n        <BloodDonateProvider>\r\n        <PostProvider>\r\n        <StaffProvider>\r\n       <BookingProvider>\r\n         \r\n        <BloodStorageProvider>\r\n        <DonateProvider>\r\n          <ChakraProvider theme={theme}>\r\n            <App />\r\n          </ChakraProvider>\r\n          </DonateProvider>\r\n          </BloodStorageProvider>\r\n          </BookingProvider>\r\n          </StaffProvider>\r\n         \r\n\r\n          </PostProvider>\r\n         \r\n          </BloodDonateProvider>\r\n          </CashFlowProvider>\r\n          </InforProvider>\r\n    </AdminProvider>\r\n  </UserProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}